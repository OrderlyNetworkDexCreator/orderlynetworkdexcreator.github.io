import{r as s,j as g}from"./index-gtzDq4NN.js";import{u as C}from"./useAuth-RM4Avg_6.js";import{g as v}from"./apiClient-Br2nePLb.js";const f=s.createContext(void 0);function j({children:n}){const{isAuthenticated:l,token:r}=C(),[e,o]=s.useState(null),[x,c]=s.useState(!1),[p,a]=s.useState(null),u=s.useCallback(async()=>{if(!l||!r){o(null);return}c(!0),a(null);try{const t=await v("api/dex",r);t&&"exists"in t&&t.exists===!1?o(null):t&&"id"in t?o(t):o(null)}catch(t){console.error("Failed to fetch DEX data",t),a(t instanceof Error?t.message:"Failed to fetch DEX data"),o(null)}finally{c(!1)}},[l,r]),m=s.useCallback(t=>{o(d=>d?{...d,...t}:null)},[]),i=s.useCallback(()=>{o(null),a(null)},[]);s.useEffect(()=>{l&&r?u():i()},[l,r,u,i]);const D=(e==null?void 0:e.brokerId)||null,h=!!e,b=(e==null?void 0:e.brokerId)==="demo",k=!!(e&&e.brokerId!=="demo"&&e.isGraduated===!0),E=e!=null&&e.repoUrl?`https://dex.orderly.network/${e.repoUrl.split("/").pop()}/`:null;return g.jsx(f.Provider,{value:{dexData:e,isLoading:x,error:p,brokerId:D,hasDex:h,isGraduationEligible:b,isGraduated:k,deploymentUrl:E,refreshDexData:u,updateDexData:m,clearDexData:i},children:n})}function G(){const n=s.useContext(f);if(n===void 0)throw new Error("useDex must be used within a DexProvider");return n}export{j as D,G as u};
