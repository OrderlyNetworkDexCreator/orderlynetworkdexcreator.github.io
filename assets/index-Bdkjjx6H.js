import{f as mi,h as ma,B as ga,i as bi,j as gi}from"./index-BftLqECp.js";import{eI as y,eJ as Zr,eK as re,eL as co,eM as lo,eN as ra,eO as Hr,eP as Z,eQ as S,eR as ue,eS as fe,eT as ke,eU as Ma,eV as Sn,eW as Sa,eX as pt,eY as Bo,eZ as vi,e_ as xi,e$ as Tt,f0 as yi}from"./index-DPI-5FQ-.js";import{g as wi}from"./index-gtzDq4NN.js";import"./index--NnR_BUb.js";import"./dayjs.min-DsMxAas2.js";import"./tslib.es6-DjQuqsdl.js";import"./switchMap-CAkRPEGC.js";import"./browser-BqbI9gSd.js";import"./index-Dvs6MNyz.js";import"./dijkstra-C00ieaqj.js";const gr=typeof globalThis=="object"&&"crypto"in globalThis?globalThis.crypto:void 0;/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */function ki(a){return a instanceof Uint8Array||ArrayBuffer.isView(a)&&a.constructor.name==="Uint8Array"}function Qt(a){if(!Number.isSafeInteger(a)||a<0)throw new Error("positive integer expected, got "+a)}function Yr(a,...e){if(!ki(a))throw new Error("Uint8Array expected");if(e.length>0&&!e.includes(a.length))throw new Error("Uint8Array expected of length "+e+", got length="+a.length)}function zi(a){if(typeof a!="function"||typeof a.create!="function")throw new Error("Hash should be wrapped by utils.createHasher");Qt(a.outputLen),Qt(a.blockLen)}function mt(a,e=!0){if(a.destroyed)throw new Error("Hash instance has been destroyed");if(e&&a.finished)throw new Error("Hash#digest() has already been called")}function Ai(a,e){Yr(a);const r=e.outputLen;if(a.length<r)throw new Error("digestInto() expects output buffer of length at least "+r)}function zr(...a){for(let e=0;e<a.length;e++)a[e].fill(0)}function Rt(a){return new DataView(a.buffer,a.byteOffset,a.byteLength)}function Oa(a,e){return a<<32-e|a>>>e}function Ei(a){if(typeof a!="string")throw new Error("string expected");return new Uint8Array(new TextEncoder().encode(a))}function uo(a){return typeof a=="string"&&(a=Ei(a)),Yr(a),a}function Si(...a){let e=0;for(let n=0;n<a.length;n++){const s=a[n];Yr(s),e+=s.length}const r=new Uint8Array(e);for(let n=0,s=0;n<a.length;n++){const i=a[n];r.set(i,s),s+=i.length}return r}let Bn=class{};function jn(a){const e=n=>a().update(uo(n)).digest(),r=a();return e.outputLen=r.outputLen,e.blockLen=r.blockLen,e.create=()=>a(),e}function _n(a=32){if(gr&&typeof gr.getRandomValues=="function")return gr.getRandomValues(new Uint8Array(a));if(gr&&typeof gr.randomBytes=="function")return Uint8Array.from(gr.randomBytes(a));throw new Error("crypto.getRandomValues must be defined")}function Bi(a,e,r,n){if(typeof a.setBigUint64=="function")return a.setBigUint64(e,r,n);const s=BigInt(32),i=BigInt(4294967295),u=Number(r>>s&i),d=Number(r&i),h=n?4:0,b=n?0:4;a.setUint32(e+h,u,n),a.setUint32(e+b,d,n)}function ji(a,e,r){return a&e^~a&r}function _i(a,e,r){return a&e^a&r^e&r}let Hn=class extends Bn{constructor(e,r,n,s){super(),this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.blockLen=e,this.outputLen=r,this.padOffset=n,this.isLE=s,this.buffer=new Uint8Array(e),this.view=Rt(this.buffer)}update(e){mt(this),e=uo(e),Yr(e);const{view:r,buffer:n,blockLen:s}=this,i=e.length;for(let u=0;u<i;){const d=Math.min(s-this.pos,i-u);if(d===s){const h=Rt(e);for(;s<=i-u;u+=s)this.process(h,u);continue}n.set(e.subarray(u,u+d),this.pos),this.pos+=d,u+=d,this.pos===s&&(this.process(r,0),this.pos=0)}return this.length+=e.length,this.roundClean(),this}digestInto(e){mt(this),Ai(e,this),this.finished=!0;const{buffer:r,view:n,blockLen:s,isLE:i}=this;let{pos:u}=this;r[u++]=128,zr(this.buffer.subarray(u)),this.padOffset>s-u&&(this.process(n,0),u=0);for(let v=u;v<s;v++)r[v]=0;Bi(n,s-8,BigInt(this.length*8),i),this.process(n,0);const d=Rt(e),h=this.outputLen;if(h%4)throw new Error("_sha2: outputLen should be aligned to 32bit");const b=h/4,m=this.get();if(b>m.length)throw new Error("_sha2: outputLen bigger than state");for(let v=0;v<b;v++)d.setUint32(4*v,m[v],i)}digest(){const{buffer:e,outputLen:r}=this;this.digestInto(e);const n=e.slice(0,r);return this.destroy(),n}_cloneInto(e){e||(e=new this.constructor),e.set(...this.get());const{blockLen:r,buffer:n,length:s,finished:i,destroyed:u,pos:d}=this;return e.destroyed=u,e.finished=i,e.length=s,e.pos=d,s%r&&e.buffer.set(n),e}clone(){return this._cloneInto()}};const Ga=Uint32Array.from([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),ka=Uint32Array.from([1779033703,4089235720,3144134277,2227873595,1013904242,4271175723,2773480762,1595750129,1359893119,2917565137,2600822924,725511199,528734635,4215389547,1541459225,327033209]),nt=BigInt(2**32-1),jo=BigInt(32);function Hi(a,e=!1){return e?{h:Number(a&nt),l:Number(a>>jo&nt)}:{h:Number(a>>jo&nt)|0,l:Number(a&nt)|0}}function Ii(a,e=!1){const r=a.length;let n=new Uint32Array(r),s=new Uint32Array(r);for(let i=0;i<r;i++){const{h:u,l:d}=Hi(a[i],e);[n[i],s[i]]=[u,d]}return[n,s]}const _o=(a,e,r)=>a>>>r,Ho=(a,e,r)=>a<<32-r|e>>>r,vr=(a,e,r)=>a>>>r|e<<32-r,xr=(a,e,r)=>a<<32-r|e>>>r,it=(a,e,r)=>a<<64-r|e>>>r-32,st=(a,e,r)=>a>>>r-32|e<<64-r;function Fa(a,e,r,n){const s=(e>>>0)+(n>>>0);return{h:a+r+(s/2**32|0)|0,l:s|0}}const qi=(a,e,r)=>(a>>>0)+(e>>>0)+(r>>>0),Ui=(a,e,r,n)=>e+r+n+(a/2**32|0)|0,Li=(a,e,r,n)=>(a>>>0)+(e>>>0)+(r>>>0)+(n>>>0),Ti=(a,e,r,n,s)=>e+r+n+s+(a/2**32|0)|0,Ri=(a,e,r,n,s)=>(a>>>0)+(e>>>0)+(r>>>0)+(n>>>0)+(s>>>0),Ci=(a,e,r,n,s,i)=>e+r+n+s+i+(a/2**32|0)|0,Oi=Uint32Array.from([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),Wa=new Uint32Array(64);let Ni=class extends Hn{constructor(e=32){super(64,e,8,!1),this.A=Ga[0]|0,this.B=Ga[1]|0,this.C=Ga[2]|0,this.D=Ga[3]|0,this.E=Ga[4]|0,this.F=Ga[5]|0,this.G=Ga[6]|0,this.H=Ga[7]|0}get(){const{A:e,B:r,C:n,D:s,E:i,F:u,G:d,H:h}=this;return[e,r,n,s,i,u,d,h]}set(e,r,n,s,i,u,d,h){this.A=e|0,this.B=r|0,this.C=n|0,this.D=s|0,this.E=i|0,this.F=u|0,this.G=d|0,this.H=h|0}process(e,r){for(let v=0;v<16;v++,r+=4)Wa[v]=e.getUint32(r,!1);for(let v=16;v<64;v++){const w=Wa[v-15],U=Wa[v-2],T=Oa(w,7)^Oa(w,18)^w>>>3,B=Oa(U,17)^Oa(U,19)^U>>>10;Wa[v]=B+Wa[v-7]+T+Wa[v-16]|0}let{A:n,B:s,C:i,D:u,E:d,F:h,G:b,H:m}=this;for(let v=0;v<64;v++){const w=Oa(d,6)^Oa(d,11)^Oa(d,25),U=m+w+ji(d,h,b)+Oi[v]+Wa[v]|0,B=(Oa(n,2)^Oa(n,13)^Oa(n,22))+_i(n,s,i)|0;m=b,b=h,h=d,d=u+U|0,u=i,i=s,s=n,n=U+B|0}n=n+this.A|0,s=s+this.B|0,i=i+this.C|0,u=u+this.D|0,d=d+this.E|0,h=h+this.F|0,b=b+this.G|0,m=m+this.H|0,this.set(n,s,i,u,d,h,b,m)}roundClean(){zr(Wa)}destroy(){this.set(0,0,0,0,0,0,0,0),zr(this.buffer)}};const In=Ii(["0x428a2f98d728ae22","0x7137449123ef65cd","0xb5c0fbcfec4d3b2f","0xe9b5dba58189dbbc","0x3956c25bf348b538","0x59f111f1b605d019","0x923f82a4af194f9b","0xab1c5ed5da6d8118","0xd807aa98a3030242","0x12835b0145706fbe","0x243185be4ee4b28c","0x550c7dc3d5ffb4e2","0x72be5d74f27b896f","0x80deb1fe3b1696b1","0x9bdc06a725c71235","0xc19bf174cf692694","0xe49b69c19ef14ad2","0xefbe4786384f25e3","0x0fc19dc68b8cd5b5","0x240ca1cc77ac9c65","0x2de92c6f592b0275","0x4a7484aa6ea6e483","0x5cb0a9dcbd41fbd4","0x76f988da831153b5","0x983e5152ee66dfab","0xa831c66d2db43210","0xb00327c898fb213f","0xbf597fc7beef0ee4","0xc6e00bf33da88fc2","0xd5a79147930aa725","0x06ca6351e003826f","0x142929670a0e6e70","0x27b70a8546d22ffc","0x2e1b21385c26c926","0x4d2c6dfc5ac42aed","0x53380d139d95b3df","0x650a73548baf63de","0x766a0abb3c77b2a8","0x81c2c92e47edaee6","0x92722c851482353b","0xa2bfe8a14cf10364","0xa81a664bbc423001","0xc24b8b70d0f89791","0xc76c51a30654be30","0xd192e819d6ef5218","0xd69906245565a910","0xf40e35855771202a","0x106aa07032bbd1b8","0x19a4c116b8d2d0c8","0x1e376c085141ab53","0x2748774cdf8eeb99","0x34b0bcb5e19b48a8","0x391c0cb3c5c95a63","0x4ed8aa4ae3418acb","0x5b9cca4f7763e373","0x682e6ff3d6b2b8a3","0x748f82ee5defb2fc","0x78a5636f43172f60","0x84c87814a1f0ab72","0x8cc702081a6439ec","0x90befffa23631e28","0xa4506cebde82bde9","0xbef9a3f7b2c67915","0xc67178f2e372532b","0xca273eceea26619c","0xd186b8c721c0c207","0xeada7dd6cde0eb1e","0xf57d4f7fee6ed178","0x06f067aa72176fba","0x0a637dc5a2c898a6","0x113f9804bef90dae","0x1b710b35131c471b","0x28db77f523047d84","0x32caab7b40c72493","0x3c9ebe0a15c9bebc","0x431d67c49c100d4c","0x4cc5d4becb3e42b6","0x597f299cfc657e2a","0x5fcb6fab3ad6faec","0x6c44198c4a475817"].map(a=>BigInt(a))),Vi=In[0],Mi=In[1],Xa=new Uint32Array(80),Qa=new Uint32Array(80);class Di extends Hn{constructor(e=64){super(128,e,16,!1),this.Ah=ka[0]|0,this.Al=ka[1]|0,this.Bh=ka[2]|0,this.Bl=ka[3]|0,this.Ch=ka[4]|0,this.Cl=ka[5]|0,this.Dh=ka[6]|0,this.Dl=ka[7]|0,this.Eh=ka[8]|0,this.El=ka[9]|0,this.Fh=ka[10]|0,this.Fl=ka[11]|0,this.Gh=ka[12]|0,this.Gl=ka[13]|0,this.Hh=ka[14]|0,this.Hl=ka[15]|0}get(){const{Ah:e,Al:r,Bh:n,Bl:s,Ch:i,Cl:u,Dh:d,Dl:h,Eh:b,El:m,Fh:v,Fl:w,Gh:U,Gl:T,Hh:B,Hl:z}=this;return[e,r,n,s,i,u,d,h,b,m,v,w,U,T,B,z]}set(e,r,n,s,i,u,d,h,b,m,v,w,U,T,B,z){this.Ah=e|0,this.Al=r|0,this.Bh=n|0,this.Bl=s|0,this.Ch=i|0,this.Cl=u|0,this.Dh=d|0,this.Dl=h|0,this.Eh=b|0,this.El=m|0,this.Fh=v|0,this.Fl=w|0,this.Gh=U|0,this.Gl=T|0,this.Hh=B|0,this.Hl=z|0}process(e,r){for(let E=0;E<16;E++,r+=4)Xa[E]=e.getUint32(r),Qa[E]=e.getUint32(r+=4);for(let E=16;E<80;E++){const K=Xa[E-15]|0,D=Qa[E-15]|0,C=vr(K,D,1)^vr(K,D,8)^_o(K,D,7),G=xr(K,D,1)^xr(K,D,8)^Ho(K,D,7),J=Xa[E-2]|0,x=Qa[E-2]|0,H=vr(J,x,19)^it(J,x,61)^_o(J,x,6),L=xr(J,x,19)^st(J,x,61)^Ho(J,x,6),ae=Li(G,L,Qa[E-7],Qa[E-16]),te=Ti(ae,C,H,Xa[E-7],Xa[E-16]);Xa[E]=te|0,Qa[E]=ae|0}let{Ah:n,Al:s,Bh:i,Bl:u,Ch:d,Cl:h,Dh:b,Dl:m,Eh:v,El:w,Fh:U,Fl:T,Gh:B,Gl:z,Hh:$,Hl:Y}=this;for(let E=0;E<80;E++){const K=vr(v,w,14)^vr(v,w,18)^it(v,w,41),D=xr(v,w,14)^xr(v,w,18)^st(v,w,41),C=v&U^~v&B,G=w&T^~w&z,J=Ri(Y,D,G,Mi[E],Qa[E]),x=Ci(J,$,K,C,Vi[E],Xa[E]),H=J|0,L=vr(n,s,28)^it(n,s,34)^it(n,s,39),ae=xr(n,s,28)^st(n,s,34)^st(n,s,39),te=n&i^n&d^i&d,V=s&u^s&h^u&h;$=B|0,Y=z|0,B=U|0,z=T|0,U=v|0,T=w|0,{h:v,l:w}=Fa(b|0,m|0,x|0,H|0),b=d|0,m=h|0,d=i|0,h=u|0,i=n|0,u=s|0;const X=qi(H,ae,V);n=Ui(X,x,L,te),s=X|0}({h:n,l:s}=Fa(this.Ah|0,this.Al|0,n|0,s|0)),{h:i,l:u}=Fa(this.Bh|0,this.Bl|0,i|0,u|0),{h:d,l:h}=Fa(this.Ch|0,this.Cl|0,d|0,h|0),{h:b,l:m}=Fa(this.Dh|0,this.Dl|0,b|0,m|0),{h:v,l:w}=Fa(this.Eh|0,this.El|0,v|0,w|0),{h:U,l:T}=Fa(this.Fh|0,this.Fl|0,U|0,T|0),{h:B,l:z}=Fa(this.Gh|0,this.Gl|0,B|0,z|0),{h:$,l:Y}=Fa(this.Hh|0,this.Hl|0,$|0,Y|0),this.set(n,s,i,u,d,h,b,m,v,w,U,T,B,z,$,Y)}roundClean(){zr(Xa,Qa)}destroy(){zr(this.buffer),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}const $i=jn(()=>new Ni),Fi=jn(()=>new Di);/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const fo=BigInt(0),Jt=BigInt(1);function Ar(a){return a instanceof Uint8Array||ArrayBuffer.isView(a)&&a.constructor.name==="Uint8Array"}function ho(a){if(!Ar(a))throw new Error("Uint8Array expected")}function tr(a,e){if(typeof e!="boolean")throw new Error(a+" boolean expected, got "+e)}function ct(a){const e=a.toString(16);return e.length&1?"0"+e:e}function qn(a){if(typeof a!="string")throw new Error("hex string expected, got "+typeof a);return a===""?fo:BigInt("0x"+a)}const Un=typeof Uint8Array.from([]).toHex=="function"&&typeof Uint8Array.fromHex=="function",Pi=Array.from({length:256},(a,e)=>e.toString(16).padStart(2,"0"));function Er(a){if(ho(a),Un)return a.toHex();let e="";for(let r=0;r<a.length;r++)e+=Pi[a[r]];return e}const Pa={_0:48,_9:57,A:65,F:70,a:97,f:102};function Io(a){if(a>=Pa._0&&a<=Pa._9)return a-Pa._0;if(a>=Pa.A&&a<=Pa.F)return a-(Pa.A-10);if(a>=Pa.a&&a<=Pa.f)return a-(Pa.a-10)}function bt(a){if(typeof a!="string")throw new Error("hex string expected, got "+typeof a);if(Un)return Uint8Array.fromHex(a);const e=a.length,r=e/2;if(e%2)throw new Error("hex string expected, got unpadded hex of length "+e);const n=new Uint8Array(r);for(let s=0,i=0;s<r;s++,i+=2){const u=Io(a.charCodeAt(i)),d=Io(a.charCodeAt(i+1));if(u===void 0||d===void 0){const h=a[i]+a[i+1];throw new Error('hex string expected, got non-hex character "'+h+'" at index '+i)}n[s]=u*16+d}return n}function ur(a){return qn(Er(a))}function Nr(a){return ho(a),qn(Er(Uint8Array.from(a).reverse()))}function Dr(a,e){return bt(a.toString(16).padStart(e*2,"0"))}function gt(a,e){return Dr(a,e).reverse()}function fa(a,e,r){let n;if(typeof e=="string")try{n=bt(e)}catch(i){throw new Error(a+" must be hex string or Uint8Array, cause: "+i)}else if(Ar(e))n=Uint8Array.from(e);else throw new Error(a+" must be hex string or Uint8Array");const s=n.length;if(typeof r=="number"&&s!==r)throw new Error(a+" of length "+r+" expected, got "+s);return n}function Sr(...a){let e=0;for(let n=0;n<a.length;n++){const s=a[n];ho(s),e+=s.length}const r=new Uint8Array(e);for(let n=0,s=0;n<a.length;n++){const i=a[n];r.set(i,s),s+=i.length}return r}const Ct=a=>typeof a=="bigint"&&fo<=a;function po(a,e,r){return Ct(a)&&Ct(e)&&Ct(r)&&e<=a&&a<r}function Ta(a,e,r,n){if(!po(e,r,n))throw new Error("expected valid "+a+": "+r+" <= n < "+n+", got "+e)}function Zi(a){let e;for(e=0;a>fo;a>>=Jt,e+=1);return e}const kt=a=>(Jt<<BigInt(a))-Jt,Ot=a=>new Uint8Array(a),qo=a=>Uint8Array.from(a);function Yi(a,e,r){if(typeof a!="number"||a<2)throw new Error("hashLen must be a number");if(typeof e!="number"||e<2)throw new Error("qByteLen must be a number");if(typeof r!="function")throw new Error("hmacFn must be a function");let n=Ot(a),s=Ot(a),i=0;const u=()=>{n.fill(1),s.fill(0),i=0},d=(...v)=>r(s,n,...v),h=(v=Ot(0))=>{s=d(qo([0]),v),n=d(),v.length!==0&&(s=d(qo([1]),v),n=d())},b=()=>{if(i++>=1e3)throw new Error("drbg: tried 1000 values");let v=0;const w=[];for(;v<e;){n=d();const U=n.slice();w.push(U),v+=n.length}return Sr(...w)};return(v,w)=>{u(),h(v);let U;for(;!(U=w(b()));)h();return u(),U}}const Ki={bigint:a=>typeof a=="bigint",function:a=>typeof a=="function",boolean:a=>typeof a=="boolean",string:a=>typeof a=="string",stringOrUint8Array:a=>typeof a=="string"||Ar(a),isSafeInteger:a=>Number.isSafeInteger(a),array:a=>Array.isArray(a),field:(a,e)=>e.Fp.isValid(a),hash:a=>typeof a=="function"&&Number.isSafeInteger(a.outputLen)};function Kr(a,e,r={}){const n=(s,i,u)=>{const d=Ki[i];if(typeof d!="function")throw new Error("invalid validator function");const h=a[s];if(!(u&&h===void 0)&&!d(h,a))throw new Error("param "+String(s)+" is invalid. Expected "+i+", got "+h)};for(const[s,i]of Object.entries(e))n(s,i,!1);for(const[s,i]of Object.entries(r))n(s,i,!0);return a}function vt(a){const e=new WeakMap;return(r,...n)=>{const s=e.get(r);if(s!==void 0)return s;const i=a(r,...n);return e.set(r,i),i}}/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const Ba=BigInt(0),va=BigInt(1),cr=BigInt(2),Gi=BigInt(3),eo=BigInt(4),Uo=BigInt(5),Lo=BigInt(8);function ea(a,e){const r=a%e;return r>=Ba?r:e+r}function ia(a,e,r){let n=a;for(;e-- >Ba;)n*=n,n%=r;return n}function ao(a,e){if(a===Ba)throw new Error("invert: expected non-zero number");if(e<=Ba)throw new Error("invert: expected positive modulus, got "+e);let r=ea(a,e),n=e,s=Ba,i=va;for(;r!==Ba;){const d=n/r,h=n%r,b=s-i*d;n=r,r=h,s=i,i=b}if(n!==va)throw new Error("invert: does not exist");return ea(s,e)}function Wi(a){let e=a-va,r=0;for(;e%cr===Ba;)e/=cr,r++;let n=cr;const s=Gr(a);for(;n<a&&To(s,n);)if(n++>1e3)throw new Error("Cannot find square root: probably non-prime P");if(r===1){const u=(a+va)/eo;return function(h,b){const m=h.pow(b,u);if(!h.eql(h.sqr(m),b))throw new Error("Cannot find square root");return m}}const i=(e+va)/cr;return function(d,h){if(!To(d,h))throw new Error("Cannot find square root");let b=r,m=d.pow(d.mul(d.ONE,n),e),v=d.pow(h,i),w=d.pow(h,e);for(;!d.eql(w,d.ONE);){if(d.eql(w,d.ZERO))return d.ZERO;let U=1;for(let B=d.sqr(w);U<b&&!d.eql(B,d.ONE);U++)B=d.sqr(B);const T=d.pow(m,va<<BigInt(b-U-1));m=d.sqr(T),v=d.mul(v,T),w=d.mul(w,m),b=U}return v}}function Xi(a){return a%eo===Gi?function(r,n){const s=(a+va)/eo,i=r.pow(n,s);if(!r.eql(r.sqr(i),n))throw new Error("Cannot find square root");return i}:a%Lo===Uo?function(r,n){const s=r.mul(n,cr),i=(a-Uo)/Lo,u=r.pow(s,i),d=r.mul(n,u),h=r.mul(r.mul(d,cr),u),b=r.mul(d,r.sub(h,r.ONE));if(!r.eql(r.sqr(b),n))throw new Error("Cannot find square root");return b}:Wi(a)}const Qi=(a,e)=>(ea(a,e)&va)===va,Ji=["create","isValid","is0","neg","inv","sqrt","sqr","eql","add","sub","mul","pow","div","addN","subN","mulN","sqrN"];function es(a){const e={ORDER:"bigint",MASK:"bigint",BYTES:"isSafeInteger",BITS:"isSafeInteger"},r=Ji.reduce((n,s)=>(n[s]="function",n),e);return Kr(a,r)}function as(a,e,r){if(r<Ba)throw new Error("invalid exponent, negatives unsupported");if(r===Ba)return a.ONE;if(r===va)return e;let n=a.ONE,s=e;for(;r>Ba;)r&va&&(n=a.mul(n,s)),s=a.sqr(s),r>>=va;return n}function mo(a,e,r=!1){const n=new Array(e.length).fill(r?a.ZERO:void 0),s=e.reduce((u,d,h)=>a.is0(d)?u:(n[h]=u,a.mul(u,d)),a.ONE),i=a.inv(s);return e.reduceRight((u,d,h)=>a.is0(d)?u:(n[h]=a.mul(u,n[h]),a.mul(u,d)),i),n}function rs(a,e){const r=(a.ORDER-va)/cr,n=a.pow(e,r),s=a.eql(n,a.ONE),i=a.eql(n,a.ZERO),u=a.eql(n,a.neg(a.ONE));if(!s&&!i&&!u)throw new Error("Cannot find square root: probably non-prime P");return s?1:i?0:-1}function To(a,e){const r=rs(a,e);return r===0||r===1}function Ln(a,e){e!==void 0&&Qt(e);const r=e!==void 0?e:a.toString(2).length,n=Math.ceil(r/8);return{nBitLength:r,nByteLength:n}}function Gr(a,e,r=!1,n={}){if(a<=Ba)throw new Error("invalid field: expected ORDER > 0, got "+a);const{nBitLength:s,nByteLength:i}=Ln(a,e);if(i>2048)throw new Error("invalid field: expected ORDER of <= 2048 bytes");let u;const d=Object.freeze({ORDER:a,isLE:r,BITS:s,BYTES:i,MASK:kt(s),ZERO:Ba,ONE:va,create:h=>ea(h,a),isValid:h=>{if(typeof h!="bigint")throw new Error("invalid field element: expected bigint, got "+typeof h);return Ba<=h&&h<a},is0:h=>h===Ba,isOdd:h=>(h&va)===va,neg:h=>ea(-h,a),eql:(h,b)=>h===b,sqr:h=>ea(h*h,a),add:(h,b)=>ea(h+b,a),sub:(h,b)=>ea(h-b,a),mul:(h,b)=>ea(h*b,a),pow:(h,b)=>as(d,h,b),div:(h,b)=>ea(h*ao(b,a),a),sqrN:h=>h*h,addN:(h,b)=>h+b,subN:(h,b)=>h-b,mulN:(h,b)=>h*b,inv:h=>ao(h,a),sqrt:n.sqrt||(h=>(u||(u=Xi(a)),u(d,h))),toBytes:h=>r?gt(h,i):Dr(h,i),fromBytes:h=>{if(h.length!==i)throw new Error("Field.fromBytes: expected "+i+" bytes, got "+h.length);return r?Nr(h):ur(h)},invertBatch:h=>mo(d,h),cmov:(h,b,m)=>m?b:h});return Object.freeze(d)}function Tn(a){if(typeof a!="bigint")throw new Error("field order must be bigint");const e=a.toString(2).length;return Math.ceil(e/8)}function Rn(a){const e=Tn(a);return e+Math.ceil(e/2)}function ts(a,e,r=!1){const n=a.length,s=Tn(e),i=Rn(e);if(n<16||n<i||n>1024)throw new Error("expected "+i+"-1024 bytes of input, got "+n);const u=r?Nr(a):ur(a),d=ea(u,e-va)+va;return r?gt(d,s):Dr(d,s)}/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const Ro=BigInt(0),ro=BigInt(1);function Nt(a,e){const r=e.negate();return a?r:e}function Cn(a,e){if(!Number.isSafeInteger(a)||a<=0||a>e)throw new Error("invalid window size, expected [1.."+e+"], got W="+a)}function Vt(a,e){Cn(a,e);const r=Math.ceil(e/a)+1,n=2**(a-1),s=2**a,i=kt(a),u=BigInt(a);return{windows:r,windowSize:n,mask:i,maxNumber:s,shiftBy:u}}function Co(a,e,r){const{windowSize:n,mask:s,maxNumber:i,shiftBy:u}=r;let d=Number(a&s),h=a>>u;d>n&&(d-=i,h+=ro);const b=e*n,m=b+Math.abs(d)-1,v=d===0,w=d<0,U=e%2!==0;return{nextN:h,offset:m,isZero:v,isNeg:w,isNegF:U,offsetF:b}}function os(a,e){if(!Array.isArray(a))throw new Error("array expected");a.forEach((r,n)=>{if(!(r instanceof e))throw new Error("invalid point at index "+n)})}function ns(a,e){if(!Array.isArray(a))throw new Error("array of scalars expected");a.forEach((r,n)=>{if(!e.isValid(r))throw new Error("invalid scalar at index "+n)})}const Mt=new WeakMap,On=new WeakMap;function Dt(a){return On.get(a)||1}function Nn(a,e){return{constTimeNegate:Nt,hasPrecomputes(r){return Dt(r)!==1},unsafeLadder(r,n,s=a.ZERO){let i=r;for(;n>Ro;)n&ro&&(s=s.add(i)),i=i.double(),n>>=ro;return s},precomputeWindow(r,n){const{windows:s,windowSize:i}=Vt(n,e),u=[];let d=r,h=d;for(let b=0;b<s;b++){h=d,u.push(h);for(let m=1;m<i;m++)h=h.add(d),u.push(h);d=h.double()}return u},wNAF(r,n,s){let i=a.ZERO,u=a.BASE;const d=Vt(r,e);for(let h=0;h<d.windows;h++){const{nextN:b,offset:m,isZero:v,isNeg:w,isNegF:U,offsetF:T}=Co(s,h,d);s=b,v?u=u.add(Nt(U,n[T])):i=i.add(Nt(w,n[m]))}return{p:i,f:u}},wNAFUnsafe(r,n,s,i=a.ZERO){const u=Vt(r,e);for(let d=0;d<u.windows&&s!==Ro;d++){const{nextN:h,offset:b,isZero:m,isNeg:v}=Co(s,d,u);if(s=h,!m){const w=n[b];i=i.add(v?w.negate():w)}}return i},getPrecomputes(r,n,s){let i=Mt.get(n);return i||(i=this.precomputeWindow(n,r),r!==1&&Mt.set(n,s(i))),i},wNAFCached(r,n,s){const i=Dt(r);return this.wNAF(i,this.getPrecomputes(i,r,s),n)},wNAFCachedUnsafe(r,n,s,i){const u=Dt(r);return u===1?this.unsafeLadder(r,n,i):this.wNAFUnsafe(u,this.getPrecomputes(u,r,s),n,i)},setWindowSize(r,n){Cn(n,e),On.set(r,n),Mt.delete(r)}}}function Vn(a,e,r,n){if(os(r,a),ns(n,e),r.length!==n.length)throw new Error("arrays of points and scalars must have equal length");const s=a.ZERO,i=Zi(BigInt(r.length)),u=i>12?i-3:i>4?i-2:i?2:1,d=kt(u),h=new Array(Number(d)+1).fill(s),b=Math.floor((e.BITS-1)/u)*u;let m=s;for(let v=b;v>=0;v-=u){h.fill(s);for(let U=0;U<n.length;U++){const T=n[U],B=Number(T>>BigInt(v)&d);h[B]=h[B].add(r[U])}let w=s;for(let U=h.length-1,T=s;U>0;U--)T=T.add(h[U]),w=w.add(T);if(m=m.add(w),v!==0)for(let U=0;U<u;U++)m=m.double()}return m}function bo(a){return es(a.Fp),Kr(a,{n:"bigint",h:"bigint",Gx:"field",Gy:"field"},{nBitLength:"isSafeInteger",nByteLength:"isSafeInteger"}),Object.freeze({...Ln(a.n,a.nBitLength),...a,p:a.Fp.ORDER})}/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const Na=BigInt(0),Aa=BigInt(1),Oo=BigInt(2),is=BigInt(8),ss={zip215:!0};function cs(a){const e=bo(a);return Kr(a,{hash:"function",a:"bigint",d:"bigint",randomBytes:"function"},{adjustScalarBytes:"function",domain:"function",uvRatio:"function",mapToCurve:"function"}),Object.freeze({...e})}function ls(a){const e=cs(a),{Fp:r,n,prehash:s,hash:i,randomBytes:u,nByteLength:d,h}=e,b=Oo<<BigInt(d*8)-Aa,m=r.create,v=Gr(e.n,e.nBitLength),w=e.uvRatio||((M,q)=>{try{return{isValid:!0,value:r.sqrt(M*r.inv(q))}}catch{return{isValid:!1,value:Na}}}),U=e.adjustScalarBytes||(M=>M),T=e.domain||((M,q,g)=>{if(tr("phflag",g),q.length||g)throw new Error("Contexts/pre-hash are not supported");return M});function B(M,q,g=!1){const I=g?Aa:Na;Ta("coordinate "+M,q,I,b)}function z(M){if(!(M instanceof E))throw new Error("ExtendedPoint expected")}const $=vt((M,q)=>{const{ex:g,ey:I,ez:F}=M,oe=M.is0();q==null&&(q=oe?is:r.inv(F));const ne=m(g*q),me=m(I*q),ie=m(F*q);if(oe)return{x:Na,y:Aa};if(ie!==Aa)throw new Error("invZ was invalid");return{x:ne,y:me}}),Y=vt(M=>{const{a:q,d:g}=e;if(M.is0())throw new Error("bad point: ZERO");const{ex:I,ey:F,ez:oe,et:ne}=M,me=m(I*I),ie=m(F*F),ye=m(oe*oe),Re=m(ye*ye),Ze=m(me*q),Ge=m(ye*m(Ze+ie)),Qe=m(Re+m(g*m(me*ie)));if(Ge!==Qe)throw new Error("bad point: equation left != right (1)");const Xe=m(I*F),aa=m(oe*ne);if(Xe!==aa)throw new Error("bad point: equation left != right (2)");return!0});class E{constructor(q,g,I,F){B("x",q),B("y",g),B("z",I,!0),B("t",F),this.ex=q,this.ey=g,this.ez=I,this.et=F,Object.freeze(this)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static fromAffine(q){if(q instanceof E)throw new Error("extended point not allowed");const{x:g,y:I}=q||{};return B("x",g),B("y",I),new E(g,I,Aa,m(g*I))}static normalizeZ(q){const g=mo(r,q.map(I=>I.ez));return q.map((I,F)=>I.toAffine(g[F])).map(E.fromAffine)}static msm(q,g){return Vn(E,v,q,g)}_setWindowSize(q){C.setWindowSize(this,q)}assertValidity(){Y(this)}equals(q){z(q);const{ex:g,ey:I,ez:F}=this,{ex:oe,ey:ne,ez:me}=q,ie=m(g*me),ye=m(oe*F),Re=m(I*me),Ze=m(ne*F);return ie===ye&&Re===Ze}is0(){return this.equals(E.ZERO)}negate(){return new E(m(-this.ex),this.ey,this.ez,m(-this.et))}double(){const{a:q}=e,{ex:g,ey:I,ez:F}=this,oe=m(g*g),ne=m(I*I),me=m(Oo*m(F*F)),ie=m(q*oe),ye=g+I,Re=m(m(ye*ye)-oe-ne),Ze=ie+ne,Ge=Ze-me,Qe=ie-ne,Xe=m(Re*Ge),aa=m(Ze*Qe),da=m(Re*Qe),Ha=m(Ge*Ze);return new E(Xe,aa,Ha,da)}add(q){z(q);const{a:g,d:I}=e,{ex:F,ey:oe,ez:ne,et:me}=this,{ex:ie,ey:ye,ez:Re,et:Ze}=q,Ge=m(F*ie),Qe=m(oe*ye),Xe=m(me*I*Ze),aa=m(ne*Re),da=m((F+oe)*(ie+ye)-Ge-Qe),Ha=aa-Xe,Ua=aa+Xe,Qr=m(Qe-g*Ge),Jr=m(da*Ha),et=m(Ua*Qr),Da=m(da*Qr),pr=m(Ha*Ua);return new E(Jr,et,pr,Da)}subtract(q){return this.add(q.negate())}wNAF(q){return C.wNAFCached(this,q,E.normalizeZ)}multiply(q){const g=q;Ta("scalar",g,Aa,n);const{p:I,f:F}=this.wNAF(g);return E.normalizeZ([I,F])[0]}multiplyUnsafe(q,g=E.ZERO){const I=q;return Ta("scalar",I,Na,n),I===Na?D:this.is0()||I===Aa?this:C.wNAFCachedUnsafe(this,I,E.normalizeZ,g)}isSmallOrder(){return this.multiplyUnsafe(h).is0()}isTorsionFree(){return C.unsafeLadder(this,n).is0()}toAffine(q){return $(this,q)}clearCofactor(){const{h:q}=e;return q===Aa?this:this.multiplyUnsafe(q)}static fromHex(q,g=!1){const{d:I,a:F}=e,oe=r.BYTES;q=fa("pointHex",q,oe),tr("zip215",g);const ne=q.slice(),me=q[oe-1];ne[oe-1]=me&-129;const ie=Nr(ne),ye=g?b:r.ORDER;Ta("pointHex.y",ie,Na,ye);const Re=m(ie*ie),Ze=m(Re-Aa),Ge=m(I*Re-F);let{isValid:Qe,value:Xe}=w(Ze,Ge);if(!Qe)throw new Error("Point.fromHex: invalid y coordinate");const aa=(Xe&Aa)===Aa,da=(me&128)!==0;if(!g&&Xe===Na&&da)throw new Error("Point.fromHex: x=0 and x_0=1");return da!==aa&&(Xe=m(-Xe)),E.fromAffine({x:Xe,y:ie})}static fromPrivateKey(q){const{scalar:g}=x(q);return K.multiply(g)}toRawBytes(){const{x:q,y:g}=this.toAffine(),I=gt(g,r.BYTES);return I[I.length-1]|=q&Aa?128:0,I}toHex(){return Er(this.toRawBytes())}}E.BASE=new E(e.Gx,e.Gy,Aa,m(e.Gx*e.Gy)),E.ZERO=new E(Na,Aa,Aa,Na);const{BASE:K,ZERO:D}=E,C=Nn(E,d*8);function G(M){return ea(M,n)}function J(M){return G(Nr(M))}function x(M){const q=r.BYTES;M=fa("private key",M,q);const g=fa("hashed private key",i(M),2*q),I=U(g.slice(0,q)),F=g.slice(q,2*q),oe=J(I);return{head:I,prefix:F,scalar:oe}}function H(M){const{head:q,prefix:g,scalar:I}=x(M),F=K.multiply(I),oe=F.toRawBytes();return{head:q,prefix:g,scalar:I,point:F,pointBytes:oe}}function L(M){return H(M).pointBytes}function ae(M=Uint8Array.of(),...q){const g=Sr(...q);return J(i(T(g,fa("context",M),!!s)))}function te(M,q,g={}){M=fa("message",M),s&&(M=s(M));const{prefix:I,scalar:F,pointBytes:oe}=H(q),ne=ae(g.context,I,M),me=K.multiply(ne).toRawBytes(),ie=ae(g.context,me,oe,M),ye=G(ne+ie*F);Ta("signature.s",ye,Na,n);const Re=Sr(me,gt(ye,r.BYTES));return fa("result",Re,r.BYTES*2)}const V=ss;function X(M,q,g,I=V){const{context:F,zip215:oe}=I,ne=r.BYTES;M=fa("signature",M,2*ne),q=fa("message",q),g=fa("publicKey",g,ne),oe!==void 0&&tr("zip215",oe),s&&(q=s(q));const me=Nr(M.slice(ne,2*ne));let ie,ye,Re;try{ie=E.fromHex(g,oe),ye=E.fromHex(M.slice(0,ne),oe),Re=K.multiplyUnsafe(me)}catch{return!1}if(!oe&&ie.isSmallOrder())return!1;const Ze=ae(F,ye.toRawBytes(),ie.toRawBytes(),q);return ye.add(ie.multiplyUnsafe(Ze)).subtract(Re).clearCofactor().equals(E.ZERO)}return K._setWindowSize(8),{CURVE:e,getPublicKey:L,sign:te,verify:X,ExtendedPoint:E,utils:{getExtendedPublicKey:H,randomPrivateKey:()=>u(r.BYTES),precompute(M=8,q=E.BASE){return q._setWindowSize(M),q.multiply(BigInt(3)),q}}}}/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const go=BigInt("57896044618658097711785492504343953926634992332820282019728792003956564819949"),No=BigInt("19681161376707505956807079304988542015446066515923890162744021073123829784752");BigInt(0);const us=BigInt(1),Vo=BigInt(2);BigInt(3);const fs=BigInt(5),ds=BigInt(8);function hs(a){const e=BigInt(10),r=BigInt(20),n=BigInt(40),s=BigInt(80),i=go,d=a*a%i*a%i,h=ia(d,Vo,i)*d%i,b=ia(h,us,i)*a%i,m=ia(b,fs,i)*b%i,v=ia(m,e,i)*m%i,w=ia(v,r,i)*v%i,U=ia(w,n,i)*w%i,T=ia(U,s,i)*U%i,B=ia(T,s,i)*U%i,z=ia(B,e,i)*m%i;return{pow_p_5_8:ia(z,Vo,i)*a%i,b2:d}}function ps(a){return a[0]&=248,a[31]&=127,a[31]|=64,a}function ms(a,e){const r=go,n=ea(e*e*e,r),s=ea(n*n*e,r),i=hs(a*s).pow_p_5_8;let u=ea(a*n*i,r);const d=ea(e*u*u,r),h=u,b=ea(u*No,r),m=d===a,v=d===ea(-a,r),w=d===ea(-a*No,r);return m&&(u=h),(v||w)&&(u=b),Qi(u,r)&&(u=ea(-u,r)),{isValid:m||v,value:u}}const Mo=Gr(go,void 0,!0),bs={a:Mo.create(BigInt(-1)),d:BigInt("37095705934669439343138083508754565189542113879843219016388785533085940283555"),Fp:Mo,n:BigInt("7237005577332262213973186563042994240857116359379907606001950938285454250989"),h:ds,Gx:BigInt("15112221349535400772501151409588531511454012693041857206046113283949847762202"),Gy:BigInt("46316835694926478169428394003475163141307993866256225615783033603165251855960"),hash:Fi,randomBytes:_n,adjustScalarBytes:ps,uvRatio:ms},gs=ls(bs);var $t,Do;function vs(){if(Do)return $t;Do=1;var a=mi().Buffer;function e(r){if(r.length>=255)throw new TypeError("Alphabet too long");for(var n=new Uint8Array(256),s=0;s<n.length;s++)n[s]=255;for(var i=0;i<r.length;i++){var u=r.charAt(i),d=u.charCodeAt(0);if(n[d]!==255)throw new TypeError(u+" is ambiguous");n[d]=i}var h=r.length,b=r.charAt(0),m=Math.log(h)/Math.log(256),v=Math.log(256)/Math.log(h);function w(B){if((Array.isArray(B)||B instanceof Uint8Array)&&(B=a.from(B)),!a.isBuffer(B))throw new TypeError("Expected Buffer");if(B.length===0)return"";for(var z=0,$=0,Y=0,E=B.length;Y!==E&&B[Y]===0;)Y++,z++;for(var K=(E-Y)*v+1>>>0,D=new Uint8Array(K);Y!==E;){for(var C=B[Y],G=0,J=K-1;(C!==0||G<$)&&J!==-1;J--,G++)C+=256*D[J]>>>0,D[J]=C%h>>>0,C=C/h>>>0;if(C!==0)throw new Error("Non-zero carry");$=G,Y++}for(var x=K-$;x!==K&&D[x]===0;)x++;for(var H=b.repeat(z);x<K;++x)H+=r.charAt(D[x]);return H}function U(B){if(typeof B!="string")throw new TypeError("Expected String");if(B.length===0)return a.alloc(0);for(var z=0,$=0,Y=0;B[z]===b;)$++,z++;for(var E=(B.length-z)*m+1>>>0,K=new Uint8Array(E);z<B.length;){var D=B.charCodeAt(z);if(D>255)return;var C=n[D];if(C===255)return;for(var G=0,J=E-1;(C!==0||G<Y)&&J!==-1;J--,G++)C+=h*K[J]>>>0,K[J]=C%256>>>0,C=C/256>>>0;if(C!==0)throw new Error("Non-zero carry");Y=G,z++}for(var x=E-Y;x!==E&&K[x]===0;)x++;var H=a.allocUnsafe($+(E-x));H.fill(0,0,$);for(var L=$;x!==E;)H[L++]=K[x++];return H}function T(B){var z=U(B);if(z)return z;throw new Error("Non-base"+h+" character")}return{encode:w,decodeUnsafe:U,decode:T}}return $t=e,$t}var Ft,$o;function xs(){if($o)return Ft;$o=1;var a=vs(),e="123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz";return Ft=a(e),Ft}var ys=xs();const Fo=wi(ys);function ws(a){return a instanceof Uint8Array||ArrayBuffer.isView(a)&&a.constructor.name==="Uint8Array"}function Mn(a,...e){if(!ws(a))throw new Error("Uint8Array expected");if(e.length>0&&!e.includes(a.length))throw new Error("Uint8Array expected of length "+e+", got length="+a.length)}function Po(a,e=!0){if(a.destroyed)throw new Error("Hash instance has been destroyed");if(e&&a.finished)throw new Error("Hash#digest() has already been called")}function ks(a,e){Mn(a);const r=e.outputLen;if(a.length<r)throw new Error("digestInto() expects output buffer of length at least "+r)}/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */function Pt(a){return new DataView(a.buffer,a.byteOffset,a.byteLength)}function Va(a,e){return a<<32-e|a>>>e}function zs(a){if(typeof a!="string")throw new Error("utf8ToBytes expected string, got "+typeof a);return new Uint8Array(new TextEncoder().encode(a))}function Dn(a){return typeof a=="string"&&(a=zs(a)),Mn(a),a}class As{clone(){return this._cloneInto()}}function Es(a){const e=n=>a().update(Dn(n)).digest(),r=a();return e.outputLen=r.outputLen,e.blockLen=r.blockLen,e.create=()=>a(),e}function Ss(a,e,r,n){if(typeof a.setBigUint64=="function")return a.setBigUint64(e,r,n);const s=BigInt(32),i=BigInt(4294967295),u=Number(r>>s&i),d=Number(r&i),h=n?4:0,b=n?0:4;a.setUint32(e+h,u,n),a.setUint32(e+b,d,n)}function Bs(a,e,r){return a&e^~a&r}function js(a,e,r){return a&e^a&r^e&r}class _s extends As{constructor(e,r,n,s){super(),this.blockLen=e,this.outputLen=r,this.padOffset=n,this.isLE=s,this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.buffer=new Uint8Array(e),this.view=Pt(this.buffer)}update(e){Po(this);const{view:r,buffer:n,blockLen:s}=this;e=Dn(e);const i=e.length;for(let u=0;u<i;){const d=Math.min(s-this.pos,i-u);if(d===s){const h=Pt(e);for(;s<=i-u;u+=s)this.process(h,u);continue}n.set(e.subarray(u,u+d),this.pos),this.pos+=d,u+=d,this.pos===s&&(this.process(r,0),this.pos=0)}return this.length+=e.length,this.roundClean(),this}digestInto(e){Po(this),ks(e,this),this.finished=!0;const{buffer:r,view:n,blockLen:s,isLE:i}=this;let{pos:u}=this;r[u++]=128,this.buffer.subarray(u).fill(0),this.padOffset>s-u&&(this.process(n,0),u=0);for(let v=u;v<s;v++)r[v]=0;Ss(n,s-8,BigInt(this.length*8),i),this.process(n,0);const d=Pt(e),h=this.outputLen;if(h%4)throw new Error("_sha2: outputLen should be aligned to 32bit");const b=h/4,m=this.get();if(b>m.length)throw new Error("_sha2: outputLen bigger than state");for(let v=0;v<b;v++)d.setUint32(4*v,m[v],i)}digest(){const{buffer:e,outputLen:r}=this;this.digestInto(e);const n=e.slice(0,r);return this.destroy(),n}_cloneInto(e){e||(e=new this.constructor),e.set(...this.get());const{blockLen:r,buffer:n,length:s,finished:i,destroyed:u,pos:d}=this;return e.length=s,e.pos=d,e.finished=i,e.destroyed=u,s%r&&e.buffer.set(n),e}}const Hs=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),Ja=new Uint32Array([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),er=new Uint32Array(64);class Is extends _s{constructor(){super(64,32,8,!1),this.A=Ja[0]|0,this.B=Ja[1]|0,this.C=Ja[2]|0,this.D=Ja[3]|0,this.E=Ja[4]|0,this.F=Ja[5]|0,this.G=Ja[6]|0,this.H=Ja[7]|0}get(){const{A:e,B:r,C:n,D:s,E:i,F:u,G:d,H:h}=this;return[e,r,n,s,i,u,d,h]}set(e,r,n,s,i,u,d,h){this.A=e|0,this.B=r|0,this.C=n|0,this.D=s|0,this.E=i|0,this.F=u|0,this.G=d|0,this.H=h|0}process(e,r){for(let v=0;v<16;v++,r+=4)er[v]=e.getUint32(r,!1);for(let v=16;v<64;v++){const w=er[v-15],U=er[v-2],T=Va(w,7)^Va(w,18)^w>>>3,B=Va(U,17)^Va(U,19)^U>>>10;er[v]=B+er[v-7]+T+er[v-16]|0}let{A:n,B:s,C:i,D:u,E:d,F:h,G:b,H:m}=this;for(let v=0;v<64;v++){const w=Va(d,6)^Va(d,11)^Va(d,25),U=m+w+Bs(d,h,b)+Hs[v]+er[v]|0,B=(Va(n,2)^Va(n,13)^Va(n,22))+js(n,s,i)|0;m=b,b=h,h=d,d=u+U|0,u=i,i=s,s=n,n=U+B|0}n=n+this.A|0,s=s+this.B|0,i=i+this.C|0,u=u+this.D|0,d=d+this.E|0,h=h+this.F|0,b=b+this.G|0,m=m+this.H|0,this.set(n,s,i,u,d,h,b,m)}roundClean(){er.fill(0)}destroy(){this.set(0,0,0,0,0,0,0,0),this.buffer.fill(0)}}const Zo=Es(()=>new Is);class $n extends Bn{constructor(e,r){super(),this.finished=!1,this.destroyed=!1,zi(e);const n=uo(r);if(this.iHash=e.create(),typeof this.iHash.update!="function")throw new Error("Expected instance of class which extends utils.Hash");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;const s=this.blockLen,i=new Uint8Array(s);i.set(n.length>s?e.create().update(n).digest():n);for(let u=0;u<i.length;u++)i[u]^=54;this.iHash.update(i),this.oHash=e.create();for(let u=0;u<i.length;u++)i[u]^=106;this.oHash.update(i),zr(i)}update(e){return mt(this),this.iHash.update(e),this}digestInto(e){mt(this),Yr(e,this.outputLen),this.finished=!0,this.iHash.digestInto(e),this.oHash.update(e),this.oHash.digestInto(e),this.destroy()}digest(){const e=new Uint8Array(this.oHash.outputLen);return this.digestInto(e),e}_cloneInto(e){e||(e=Object.create(Object.getPrototypeOf(this),{}));const{oHash:r,iHash:n,finished:s,destroyed:i,blockLen:u,outputLen:d}=this;return e=e,e.finished=s,e.destroyed=i,e.blockLen=u,e.outputLen=d,e.oHash=r._cloneInto(e.oHash),e.iHash=n._cloneInto(e.iHash),e}clone(){return this._cloneInto()}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}}const Fn=(a,e,r)=>new $n(a,e).update(r).digest();Fn.create=(a,e)=>new $n(a,e);/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */function Yo(a){a.lowS!==void 0&&tr("lowS",a.lowS),a.prehash!==void 0&&tr("prehash",a.prehash)}function qs(a){const e=bo(a);Kr(e,{a:"field",b:"field"},{allowedPrivateKeyLengths:"array",wrapPrivateKey:"boolean",isTorsionFree:"function",clearCofactor:"function",allowInfinityPoint:"boolean",fromBytes:"function",toBytes:"function"});const{endo:r,Fp:n,a:s}=e;if(r){if(!n.eql(s,n.ZERO))throw new Error("invalid endomorphism, can only be defined for Koblitz curves that have a=0");if(typeof r!="object"||typeof r.beta!="bigint"||typeof r.splitScalar!="function")throw new Error("invalid endomorphism, expected beta: bigint and splitScalar: function")}return Object.freeze({...e})}class Us extends Error{constructor(e=""){super(e)}}const Ya={Err:Us,_tlv:{encode:(a,e)=>{const{Err:r}=Ya;if(a<0||a>256)throw new r("tlv.encode: wrong tag");if(e.length&1)throw new r("tlv.encode: unpadded data");const n=e.length/2,s=ct(n);if(s.length/2&128)throw new r("tlv.encode: long form length too big");const i=n>127?ct(s.length/2|128):"";return ct(a)+i+s+e},decode(a,e){const{Err:r}=Ya;let n=0;if(a<0||a>256)throw new r("tlv.encode: wrong tag");if(e.length<2||e[n++]!==a)throw new r("tlv.decode: wrong tlv");const s=e[n++],i=!!(s&128);let u=0;if(!i)u=s;else{const h=s&127;if(!h)throw new r("tlv.decode(long): indefinite length not supported");if(h>4)throw new r("tlv.decode(long): byte length is too big");const b=e.subarray(n,n+h);if(b.length!==h)throw new r("tlv.decode: length bytes not complete");if(b[0]===0)throw new r("tlv.decode(long): zero leftmost byte");for(const m of b)u=u<<8|m;if(n+=h,u<128)throw new r("tlv.decode(long): not minimal encoding")}const d=e.subarray(n,n+u);if(d.length!==u)throw new r("tlv.decode: wrong value length");return{v:d,l:e.subarray(n+u)}}},_int:{encode(a){const{Err:e}=Ya;if(a<Ka)throw new e("integer: negative integers are not allowed");let r=ct(a);if(Number.parseInt(r[0],16)&8&&(r="00"+r),r.length&1)throw new e("unexpected DER parsing assertion: unpadded hex");return r},decode(a){const{Err:e}=Ya;if(a[0]&128)throw new e("invalid signature integer: negative");if(a[0]===0&&!(a[1]&128))throw new e("invalid signature integer: unnecessary leading zero");return ur(a)}},toSig(a){const{Err:e,_int:r,_tlv:n}=Ya,s=fa("signature",a),{v:i,l:u}=n.decode(48,s);if(u.length)throw new e("invalid signature: left bytes after parsing");const{v:d,l:h}=n.decode(2,i),{v:b,l:m}=n.decode(2,h);if(m.length)throw new e("invalid signature: left bytes after parsing");return{r:r.decode(d),s:r.decode(b)}},hexFromSig(a){const{_tlv:e,_int:r}=Ya,n=e.encode(2,r.encode(a.r)),s=e.encode(2,r.encode(a.s)),i=n+s;return e.encode(48,i)}},Ka=BigInt(0),ba=BigInt(1);BigInt(2);const Ko=BigInt(3);BigInt(4);function Ls(a){const e=qs(a),{Fp:r}=e,n=Gr(e.n,e.nBitLength),s=e.toBytes||((B,z,$)=>{const Y=z.toAffine();return Sr(Uint8Array.from([4]),r.toBytes(Y.x),r.toBytes(Y.y))}),i=e.fromBytes||(B=>{const z=B.subarray(1),$=r.fromBytes(z.subarray(0,r.BYTES)),Y=r.fromBytes(z.subarray(r.BYTES,2*r.BYTES));return{x:$,y:Y}});function u(B){const{a:z,b:$}=e,Y=r.sqr(B),E=r.mul(Y,B);return r.add(r.add(E,r.mul(B,z)),$)}if(!r.eql(r.sqr(e.Gy),u(e.Gx)))throw new Error("bad generator point: equation left != right");function d(B){return po(B,ba,e.n)}function h(B){const{allowedPrivateKeyLengths:z,nByteLength:$,wrapPrivateKey:Y,n:E}=e;if(z&&typeof B!="bigint"){if(Ar(B)&&(B=Er(B)),typeof B!="string"||!z.includes(B.length))throw new Error("invalid private key");B=B.padStart($*2,"0")}let K;try{K=typeof B=="bigint"?B:ur(fa("private key",B,$))}catch{throw new Error("invalid private key, expected hex or "+$+" bytes, got "+typeof B)}return Y&&(K=ea(K,E)),Ta("private key",K,ba,E),K}function b(B){if(!(B instanceof w))throw new Error("ProjectivePoint expected")}const m=vt((B,z)=>{const{px:$,py:Y,pz:E}=B;if(r.eql(E,r.ONE))return{x:$,y:Y};const K=B.is0();z==null&&(z=K?r.ONE:r.inv(E));const D=r.mul($,z),C=r.mul(Y,z),G=r.mul(E,z);if(K)return{x:r.ZERO,y:r.ZERO};if(!r.eql(G,r.ONE))throw new Error("invZ was invalid");return{x:D,y:C}}),v=vt(B=>{if(B.is0()){if(e.allowInfinityPoint&&!r.is0(B.py))return;throw new Error("bad point: ZERO")}const{x:z,y:$}=B.toAffine();if(!r.isValid(z)||!r.isValid($))throw new Error("bad point: x or y not FE");const Y=r.sqr($),E=u(z);if(!r.eql(Y,E))throw new Error("bad point: equation left != right");if(!B.isTorsionFree())throw new Error("bad point: not in prime-order subgroup");return!0});class w{constructor(z,$,Y){if(z==null||!r.isValid(z))throw new Error("x required");if($==null||!r.isValid($)||r.is0($))throw new Error("y required");if(Y==null||!r.isValid(Y))throw new Error("z required");this.px=z,this.py=$,this.pz=Y,Object.freeze(this)}static fromAffine(z){const{x:$,y:Y}=z||{};if(!z||!r.isValid($)||!r.isValid(Y))throw new Error("invalid affine point");if(z instanceof w)throw new Error("projective point not allowed");const E=K=>r.eql(K,r.ZERO);return E($)&&E(Y)?w.ZERO:new w($,Y,r.ONE)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static normalizeZ(z){const $=mo(r,z.map(Y=>Y.pz));return z.map((Y,E)=>Y.toAffine($[E])).map(w.fromAffine)}static fromHex(z){const $=w.fromAffine(i(fa("pointHex",z)));return $.assertValidity(),$}static fromPrivateKey(z){return w.BASE.multiply(h(z))}static msm(z,$){return Vn(w,n,z,$)}_setWindowSize(z){T.setWindowSize(this,z)}assertValidity(){v(this)}hasEvenY(){const{y:z}=this.toAffine();if(r.isOdd)return!r.isOdd(z);throw new Error("Field doesn't support isOdd")}equals(z){b(z);const{px:$,py:Y,pz:E}=this,{px:K,py:D,pz:C}=z,G=r.eql(r.mul($,C),r.mul(K,E)),J=r.eql(r.mul(Y,C),r.mul(D,E));return G&&J}negate(){return new w(this.px,r.neg(this.py),this.pz)}double(){const{a:z,b:$}=e,Y=r.mul($,Ko),{px:E,py:K,pz:D}=this;let C=r.ZERO,G=r.ZERO,J=r.ZERO,x=r.mul(E,E),H=r.mul(K,K),L=r.mul(D,D),ae=r.mul(E,K);return ae=r.add(ae,ae),J=r.mul(E,D),J=r.add(J,J),C=r.mul(z,J),G=r.mul(Y,L),G=r.add(C,G),C=r.sub(H,G),G=r.add(H,G),G=r.mul(C,G),C=r.mul(ae,C),J=r.mul(Y,J),L=r.mul(z,L),ae=r.sub(x,L),ae=r.mul(z,ae),ae=r.add(ae,J),J=r.add(x,x),x=r.add(J,x),x=r.add(x,L),x=r.mul(x,ae),G=r.add(G,x),L=r.mul(K,D),L=r.add(L,L),x=r.mul(L,ae),C=r.sub(C,x),J=r.mul(L,H),J=r.add(J,J),J=r.add(J,J),new w(C,G,J)}add(z){b(z);const{px:$,py:Y,pz:E}=this,{px:K,py:D,pz:C}=z;let G=r.ZERO,J=r.ZERO,x=r.ZERO;const H=e.a,L=r.mul(e.b,Ko);let ae=r.mul($,K),te=r.mul(Y,D),V=r.mul(E,C),X=r.add($,Y),Q=r.add(K,D);X=r.mul(X,Q),Q=r.add(ae,te),X=r.sub(X,Q),Q=r.add($,E);let M=r.add(K,C);return Q=r.mul(Q,M),M=r.add(ae,V),Q=r.sub(Q,M),M=r.add(Y,E),G=r.add(D,C),M=r.mul(M,G),G=r.add(te,V),M=r.sub(M,G),x=r.mul(H,Q),G=r.mul(L,V),x=r.add(G,x),G=r.sub(te,x),x=r.add(te,x),J=r.mul(G,x),te=r.add(ae,ae),te=r.add(te,ae),V=r.mul(H,V),Q=r.mul(L,Q),te=r.add(te,V),V=r.sub(ae,V),V=r.mul(H,V),Q=r.add(Q,V),ae=r.mul(te,Q),J=r.add(J,ae),ae=r.mul(M,Q),G=r.mul(X,G),G=r.sub(G,ae),ae=r.mul(X,te),x=r.mul(M,x),x=r.add(x,ae),new w(G,J,x)}subtract(z){return this.add(z.negate())}is0(){return this.equals(w.ZERO)}wNAF(z){return T.wNAFCached(this,z,w.normalizeZ)}multiplyUnsafe(z){const{endo:$,n:Y}=e;Ta("scalar",z,Ka,Y);const E=w.ZERO;if(z===Ka)return E;if(this.is0()||z===ba)return this;if(!$||T.hasPrecomputes(this))return T.wNAFCachedUnsafe(this,z,w.normalizeZ);let{k1neg:K,k1:D,k2neg:C,k2:G}=$.splitScalar(z),J=E,x=E,H=this;for(;D>Ka||G>Ka;)D&ba&&(J=J.add(H)),G&ba&&(x=x.add(H)),H=H.double(),D>>=ba,G>>=ba;return K&&(J=J.negate()),C&&(x=x.negate()),x=new w(r.mul(x.px,$.beta),x.py,x.pz),J.add(x)}multiply(z){const{endo:$,n:Y}=e;Ta("scalar",z,ba,Y);let E,K;if($){const{k1neg:D,k1:C,k2neg:G,k2:J}=$.splitScalar(z);let{p:x,f:H}=this.wNAF(C),{p:L,f:ae}=this.wNAF(J);x=T.constTimeNegate(D,x),L=T.constTimeNegate(G,L),L=new w(r.mul(L.px,$.beta),L.py,L.pz),E=x.add(L),K=H.add(ae)}else{const{p:D,f:C}=this.wNAF(z);E=D,K=C}return w.normalizeZ([E,K])[0]}multiplyAndAddUnsafe(z,$,Y){const E=w.BASE,K=(C,G)=>G===Ka||G===ba||!C.equals(E)?C.multiplyUnsafe(G):C.multiply(G),D=K(this,$).add(K(z,Y));return D.is0()?void 0:D}toAffine(z){return m(this,z)}isTorsionFree(){const{h:z,isTorsionFree:$}=e;if(z===ba)return!0;if($)return $(w,this);throw new Error("isTorsionFree() has not been declared for the elliptic curve")}clearCofactor(){const{h:z,clearCofactor:$}=e;return z===ba?this:$?$(w,this):this.multiplyUnsafe(e.h)}toRawBytes(z=!0){return tr("isCompressed",z),this.assertValidity(),s(w,this,z)}toHex(z=!0){return tr("isCompressed",z),Er(this.toRawBytes(z))}}w.BASE=new w(e.Gx,e.Gy,r.ONE),w.ZERO=new w(r.ZERO,r.ONE,r.ZERO);const U=e.nBitLength,T=Nn(w,e.endo?Math.ceil(U/2):U);return{CURVE:e,ProjectivePoint:w,normPrivateKeyToScalar:h,weierstrassEquation:u,isWithinCurveOrder:d}}function Ts(a){const e=bo(a);return Kr(e,{hash:"hash",hmac:"function",randomBytes:"function"},{bits2int:"function",bits2int_modN:"function",lowS:"boolean"}),Object.freeze({lowS:!0,...e})}function Rs(a){const e=Ts(a),{Fp:r,n}=e,s=r.BYTES+1,i=2*r.BYTES+1;function u(V){return ea(V,n)}function d(V){return ao(V,n)}const{ProjectivePoint:h,normPrivateKeyToScalar:b,weierstrassEquation:m,isWithinCurveOrder:v}=Ls({...e,toBytes(V,X,Q){const M=X.toAffine(),q=r.toBytes(M.x),g=Sr;return tr("isCompressed",Q),Q?g(Uint8Array.from([X.hasEvenY()?2:3]),q):g(Uint8Array.from([4]),q,r.toBytes(M.y))},fromBytes(V){const X=V.length,Q=V[0],M=V.subarray(1);if(X===s&&(Q===2||Q===3)){const q=ur(M);if(!po(q,ba,r.ORDER))throw new Error("Point is not on curve");const g=m(q);let I;try{I=r.sqrt(g)}catch(ne){const me=ne instanceof Error?": "+ne.message:"";throw new Error("Point is not on curve"+me)}const F=(I&ba)===ba;return(Q&1)===1!==F&&(I=r.neg(I)),{x:q,y:I}}else if(X===i&&Q===4){const q=r.fromBytes(M.subarray(0,r.BYTES)),g=r.fromBytes(M.subarray(r.BYTES,2*r.BYTES));return{x:q,y:g}}else{const q=s,g=i;throw new Error("invalid Point, expected length of "+q+", or uncompressed "+g+", got "+X)}}}),w=V=>Er(Dr(V,e.nByteLength));function U(V){const X=n>>ba;return V>X}function T(V){return U(V)?u(-V):V}const B=(V,X,Q)=>ur(V.slice(X,Q));class z{constructor(X,Q,M){Ta("r",X,ba,n),Ta("s",Q,ba,n),this.r=X,this.s=Q,M!=null&&(this.recovery=M),Object.freeze(this)}static fromCompact(X){const Q=e.nByteLength;return X=fa("compactSignature",X,Q*2),new z(B(X,0,Q),B(X,Q,2*Q))}static fromDER(X){const{r:Q,s:M}=Ya.toSig(fa("DER",X));return new z(Q,M)}assertValidity(){}addRecoveryBit(X){return new z(this.r,this.s,X)}recoverPublicKey(X){const{r:Q,s:M,recovery:q}=this,g=C(fa("msgHash",X));if(q==null||![0,1,2,3].includes(q))throw new Error("recovery id invalid");const I=q===2||q===3?Q+e.n:Q;if(I>=r.ORDER)throw new Error("recovery id 2 or 3 invalid");const F=(q&1)===0?"02":"03",oe=h.fromHex(F+w(I)),ne=d(I),me=u(-g*ne),ie=u(M*ne),ye=h.BASE.multiplyAndAddUnsafe(oe,me,ie);if(!ye)throw new Error("point at infinify");return ye.assertValidity(),ye}hasHighS(){return U(this.s)}normalizeS(){return this.hasHighS()?new z(this.r,u(-this.s),this.recovery):this}toDERRawBytes(){return bt(this.toDERHex())}toDERHex(){return Ya.hexFromSig(this)}toCompactRawBytes(){return bt(this.toCompactHex())}toCompactHex(){return w(this.r)+w(this.s)}}const $={isValidPrivateKey(V){try{return b(V),!0}catch{return!1}},normPrivateKeyToScalar:b,randomPrivateKey:()=>{const V=Rn(e.n);return ts(e.randomBytes(V),e.n)},precompute(V=8,X=h.BASE){return X._setWindowSize(V),X.multiply(BigInt(3)),X}};function Y(V,X=!0){return h.fromPrivateKey(V).toRawBytes(X)}function E(V){const X=Ar(V),Q=typeof V=="string",M=(X||Q)&&V.length;return X?M===s||M===i:Q?M===2*s||M===2*i:V instanceof h}function K(V,X,Q=!0){if(E(V))throw new Error("first arg must be private key");if(!E(X))throw new Error("second arg must be public key");return h.fromHex(X).multiply(b(V)).toRawBytes(Q)}const D=e.bits2int||function(V){if(V.length>8192)throw new Error("input is too large");const X=ur(V),Q=V.length*8-e.nBitLength;return Q>0?X>>BigInt(Q):X},C=e.bits2int_modN||function(V){return u(D(V))},G=kt(e.nBitLength);function J(V){return Ta("num < 2^"+e.nBitLength,V,Ka,G),Dr(V,e.nByteLength)}function x(V,X,Q=H){if(["recovered","canonical"].some(Ze=>Ze in Q))throw new Error("sign() legacy options not supported");const{hash:M,randomBytes:q}=e;let{lowS:g,prehash:I,extraEntropy:F}=Q;g==null&&(g=!0),V=fa("msgHash",V),Yo(Q),I&&(V=fa("prehashed msgHash",M(V)));const oe=C(V),ne=b(X),me=[J(ne),J(oe)];if(F!=null&&F!==!1){const Ze=F===!0?q(r.BYTES):F;me.push(fa("extraEntropy",Ze))}const ie=Sr(...me),ye=oe;function Re(Ze){const Ge=D(Ze);if(!v(Ge))return;const Qe=d(Ge),Xe=h.BASE.multiply(Ge).toAffine(),aa=u(Xe.x);if(aa===Ka)return;const da=u(Qe*u(ye+aa*ne));if(da===Ka)return;let Ha=(Xe.x===aa?0:2)|Number(Xe.y&ba),Ua=da;return g&&U(da)&&(Ua=T(da),Ha^=1),new z(aa,Ua,Ha)}return{seed:ie,k2sig:Re}}const H={lowS:e.lowS,prehash:!1},L={lowS:e.lowS,prehash:!1};function ae(V,X,Q=H){const{seed:M,k2sig:q}=x(V,X,Q),g=e;return Yi(g.hash.outputLen,g.nByteLength,g.hmac)(M,q)}h.BASE._setWindowSize(8);function te(V,X,Q,M=L){var Ha;const q=V;X=fa("msgHash",X),Q=fa("publicKey",Q);const{lowS:g,prehash:I,format:F}=M;if(Yo(M),"strict"in M)throw new Error("options.strict was renamed to lowS");if(F!==void 0&&F!=="compact"&&F!=="der")throw new Error("format must be compact or der");const oe=typeof q=="string"||Ar(q),ne=!oe&&!F&&typeof q=="object"&&q!==null&&typeof q.r=="bigint"&&typeof q.s=="bigint";if(!oe&&!ne)throw new Error("invalid signature, expected Uint8Array, hex string or Signature instance");let me,ie;try{if(ne&&(me=new z(q.r,q.s)),oe){try{F!=="compact"&&(me=z.fromDER(q))}catch(Ua){if(!(Ua instanceof Ya.Err))throw Ua}!me&&F!=="der"&&(me=z.fromCompact(q))}ie=h.fromHex(Q)}catch{return!1}if(!me||g&&me.hasHighS())return!1;I&&(X=e.hash(X));const{r:ye,s:Re}=me,Ze=C(X),Ge=d(Re),Qe=u(Ze*Ge),Xe=u(ye*Ge),aa=(Ha=h.BASE.multiplyAndAddUnsafe(ie,Qe,Xe))==null?void 0:Ha.toAffine();return aa?u(aa.x)===ye:!1}return{CURVE:e,getPublicKey:Y,getSharedSecret:K,sign:ae,verify:te,ProjectivePoint:h,Signature:z,utils:$}}/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */function Cs(a){return{hash:a,hmac:(e,...r)=>Fn(a,e,Si(...r)),randomBytes:_n}}function Os(a,e){const r=n=>Rs({...a,...Cs(n)});return{...r(e),create:r}}/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const Pn=BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"),Go=BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),Ns=BigInt(1),to=BigInt(2),Wo=(a,e)=>(a+e/to)/e;function Vs(a){const e=Pn,r=BigInt(3),n=BigInt(6),s=BigInt(11),i=BigInt(22),u=BigInt(23),d=BigInt(44),h=BigInt(88),b=a*a*a%e,m=b*b*a%e,v=ia(m,r,e)*m%e,w=ia(v,r,e)*m%e,U=ia(w,to,e)*b%e,T=ia(U,s,e)*U%e,B=ia(T,i,e)*T%e,z=ia(B,d,e)*B%e,$=ia(z,h,e)*z%e,Y=ia($,d,e)*B%e,E=ia(Y,r,e)*m%e,K=ia(E,u,e)*T%e,D=ia(K,n,e)*b%e,C=ia(D,to,e);if(!oo.eql(oo.sqr(C),a))throw new Error("Cannot find square root");return C}const oo=Gr(Pn,void 0,void 0,{sqrt:Vs}),Ms=Os({a:BigInt(0),b:BigInt(7),Fp:oo,n:Go,Gx:BigInt("55066263022277343669578718895168534326250603453777594175500187360389116729240"),Gy:BigInt("32670510020758816978083085130507043184471273380659243275938904335757337482424"),h:BigInt(1),lowS:!0,endo:{beta:BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"),splitScalar:a=>{const e=Go,r=BigInt("0x3086d221a7d46bcde86c90e49284eb15"),n=-Ns*BigInt("0xe4437ed6010e88286f547fa90abfe4c3"),s=BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),i=r,u=BigInt("0x100000000000000000000000000000000"),d=Wo(i*a,e),h=Wo(-n*a,e);let b=ea(a-d*r-h*s,e),m=ea(-d*n-h*i,e);const v=b>u,w=m>u;if(v&&(b=e-b),w&&(m=e-m),b>u||m>u)throw new Error("splitScalar: Endomorphism failed, k="+a);return{k1neg:v,k1:b,k2neg:w,k2:m}}}},$i);BigInt(0);function Xo(a){try{return gs.ExtendedPoint.fromHex(a),!0}catch{return!1}}const Ds=a=>ma.isBuffer(a)?a:a instanceof Uint8Array?ma.from(a.buffer,a.byteOffset,a.byteLength):ma.from(a);class $s{constructor(e){Object.assign(this,e)}encode(){return ma.from(Tt.serialize(ht,this))}static decode(e){return Tt.deserialize(ht,this,e)}static decodeUnchecked(e){return Tt.deserializeUnchecked(ht,this,e)}}const ht=new Map;var Zn;const Fs=32,Zt=32;function Ps(a){return a._bn!==void 0}let Qo=1;class $e extends $s{constructor(e){if(super({}),this._bn=void 0,Ps(e))this._bn=e._bn;else{if(typeof e=="string"){const r=Fo.decode(e);if(r.length!=Zt)throw new Error("Invalid public key input");this._bn=new Bo(r)}else this._bn=new Bo(e);if(this._bn.byteLength()>Zt)throw new Error("Invalid public key input")}}static unique(){const e=new $e(Qo);return Qo+=1,new $e(e.toBuffer())}equals(e){return this._bn.eq(e._bn)}toBase58(){return Fo.encode(this.toBytes())}toJSON(){return this.toBase58()}toBytes(){const e=this.toBuffer();return new Uint8Array(e.buffer,e.byteOffset,e.byteLength)}toBuffer(){const e=this._bn.toArrayLike(ma);if(e.length===Zt)return e;const r=ma.alloc(32);return e.copy(r,32-e.length),r}get[Symbol.toStringTag](){return`PublicKey(${this.toString()})`}toString(){return this.toBase58()}static async createWithSeed(e,r,n){const s=ma.concat([e.toBuffer(),ma.from(r),n.toBuffer()]),i=Zo(s);return new $e(i)}static createProgramAddressSync(e,r){let n=ma.alloc(0);e.forEach(function(i){if(i.length>Fs)throw new TypeError("Max seed length exceeded");n=ma.concat([n,Ds(i)])}),n=ma.concat([n,r.toBuffer(),ma.from("ProgramDerivedAddress")]);const s=Zo(n);if(Xo(s))throw new Error("Invalid seeds, address must fall off the curve");return new $e(s)}static async createProgramAddress(e,r){return this.createProgramAddressSync(e,r)}static findProgramAddressSync(e,r){let n=255,s;for(;n!=0;){try{const i=e.concat(ma.from([n]));s=this.createProgramAddressSync(i,r)}catch(i){if(i instanceof TypeError)throw i;n--;continue}return[s,n]}throw new Error("Unable to find a viable program address nonce")}static async findProgramAddress(e,r){return this.findProgramAddressSync(e,r)}static isOnCurve(e){const r=new $e(e);return Xo(r.toBytes())}}Zn=$e;$e.default=new Zn("11111111111111111111111111111111");ht.set($e,{kind:"struct",fields:[["_bn","u256"]]});new $e("BPFLoader1111111111111111111111111111111111");const Zs=64,Pe=(a="publicKey")=>y.blob(32,a),yr=(a="string")=>{const e=y.struct([y.u32("length"),y.u32("lengthPadding"),y.blob(y.offset(y.u32(),-8),"chars")],a),r=e.decode.bind(e),n=e.encode.bind(e),s=e;return s.decode=(i,u)=>r(i,u).chars.toString(),s.encode=(i,u,d)=>{const h={chars:ma.from(i,"utf8")};return n(h,u,d)},s.alloc=i=>y.u32().span+y.u32().span+ma.from(i,"utf8").length,s},Ys=(a="authorized")=>y.struct([Pe("staker"),Pe("withdrawer")],a),Ks=(a="lockup")=>y.struct([y.ns64("unixTimestamp"),y.ns64("epoch"),Pe("custodian")],a),Gs=(a="voteInit")=>y.struct([Pe("nodePubkey"),Pe("authorizedVoter"),Pe("authorizedWithdrawer"),y.u8("commission")],a),Ws=(a="voteAuthorizeWithSeedArgs")=>y.struct([y.u32("voteAuthorizationType"),Pe("currentAuthorityDerivedKeyOwnerPubkey"),yr("currentAuthorityDerivedKeySeed"),Pe("newAuthorized")],a);ma.alloc(Zs).fill(0);new $e("SysvarC1ock11111111111111111111111111111111");new $e("SysvarEpochSchedu1e111111111111111111111111");new $e("Sysvar1nstructions1111111111111111111111111");new $e("SysvarRecentB1ockHashes11111111111111111111");new $e("SysvarRent111111111111111111111111111111111");new $e("SysvarRewards111111111111111111111111111111");new $e("SysvarS1otHashes111111111111111111111111111");new $e("SysvarS1otHistory11111111111111111111111111");new $e("SysvarStakeHistory1111111111111111111111111");const Xs=y.nu64("lamportsPerSignature"),Qs=y.struct([y.u32("version"),y.u32("state"),Pe("authorizedPubkey"),Pe("nonce"),y.struct([Xs],"feeCalculator")]);Qs.span;function Br(a){const e=y.blob(8,a),r=e.decode.bind(e),n=e.encode.bind(e),s=e,i=vi();return s.decode=(u,d)=>{const h=r(u,d);return i.decode(h)},s.encode=(u,d,h)=>{const b=i.encode(u);return n(b,d,h)},s}Object.freeze({Create:{index:0,layout:y.struct([y.u32("instruction"),y.ns64("lamports"),y.ns64("space"),Pe("programId")])},Assign:{index:1,layout:y.struct([y.u32("instruction"),Pe("programId")])},Transfer:{index:2,layout:y.struct([y.u32("instruction"),Br("lamports")])},CreateWithSeed:{index:3,layout:y.struct([y.u32("instruction"),Pe("base"),yr("seed"),y.ns64("lamports"),y.ns64("space"),Pe("programId")])},AdvanceNonceAccount:{index:4,layout:y.struct([y.u32("instruction")])},WithdrawNonceAccount:{index:5,layout:y.struct([y.u32("instruction"),y.ns64("lamports")])},InitializeNonceAccount:{index:6,layout:y.struct([y.u32("instruction"),Pe("authorized")])},AuthorizeNonceAccount:{index:7,layout:y.struct([y.u32("instruction"),Pe("authorized")])},Allocate:{index:8,layout:y.struct([y.u32("instruction"),y.ns64("space")])},AllocateWithSeed:{index:9,layout:y.struct([y.u32("instruction"),Pe("base"),yr("seed"),y.ns64("space"),Pe("programId")])},AssignWithSeed:{index:10,layout:y.struct([y.u32("instruction"),Pe("base"),yr("seed"),Pe("programId")])},TransferWithSeed:{index:11,layout:y.struct([y.u32("instruction"),Br("lamports"),yr("seed"),Pe("programId")])},UpgradeNonceAccount:{index:12,layout:y.struct([y.u32("instruction")])}});new $e("11111111111111111111111111111111");new $e("BPFLoader2111111111111111111111111111111111");y.struct([y.u32("typeIndex"),Br("deactivationSlot"),y.nu64("lastExtendedSlot"),y.u8("lastExtendedStartIndex"),y.u8(),y.seq(Pe(),y.offset(y.u8(),-1),"authority")]);const ca=Zr(co($e),re(),a=>new $e(a)),Yn=lo([re(),ra("base64")]),vo=Zr(co(ma),Yn,a=>ma.from(a[0],"base64"));function Kn(a){return Sa([Z({jsonrpc:ra("2.0"),id:re(),result:a}),Z({jsonrpc:ra("2.0"),id:re(),error:Z({code:Hr(),message:re(),data:ke(xi())})})])}const Js=Kn(Hr());function We(a){return Zr(Kn(a),Js,e=>"error"in e?e:{...e,result:pt(e.result,a)})}function Ca(a){return We(Z({context:Z({slot:S()}),value:a}))}function zt(a){return Z({context:Z({slot:S()}),value:a})}const ec=Z({foundation:S(),foundationTerm:S(),initial:S(),taper:S(),terminal:S()});We(ue(fe(Z({epoch:S(),effectiveSlot:S(),amount:S(),postBalance:S(),commission:ke(fe(S()))}))));const ac=ue(Z({slot:S(),prioritizationFee:S()})),rc=Z({total:S(),validator:S(),foundation:S(),epoch:S()}),tc=Z({epoch:S(),slotIndex:S(),slotsInEpoch:S(),absoluteSlot:S(),blockHeight:ke(S()),transactionCount:ke(S())}),oc=Z({slotsPerEpoch:S(),leaderScheduleSlotOffset:S(),warmup:Ma(),firstNormalEpoch:S(),firstNormalSlot:S()}),nc=Sn(re(),ue(S())),dr=fe(Sa([Z({}),re()])),ic=Z({err:dr}),sc=ra("receivedSignature");Z({"solana-core":re(),"feature-set":ke(S())});const cc=Z({program:re(),programId:ca,parsed:Hr()}),lc=Z({programId:ca,accounts:ue(ca),data:re()});Ca(Z({err:fe(Sa([Z({}),re()])),logs:fe(ue(re())),accounts:ke(fe(ue(fe(Z({executable:Ma(),owner:re(),lamports:S(),data:ue(re()),rentEpoch:ke(S())}))))),unitsConsumed:ke(S()),returnData:ke(fe(Z({programId:re(),data:lo([re(),ra("base64")])}))),innerInstructions:ke(fe(ue(Z({index:S(),instructions:ue(Sa([cc,lc]))}))))}));Ca(Z({byIdentity:Sn(re(),ue(S())),range:Z({firstSlot:S(),lastSlot:S()})}));We(ec);We(rc);We(ac);We(tc);We(oc);We(nc);We(S());Ca(Z({total:S(),circulating:S(),nonCirculating:S(),nonCirculatingAccounts:ue(ca)}));const uc=Z({amount:re(),uiAmount:fe(S()),decimals:S(),uiAmountString:ke(re())});Ca(ue(Z({address:ca,amount:re(),uiAmount:fe(S()),decimals:S(),uiAmountString:ke(re())})));Ca(ue(Z({pubkey:ca,account:Z({executable:Ma(),owner:ca,lamports:S(),data:vo,rentEpoch:S()})})));const no=Z({program:re(),parsed:Hr(),space:S()});Ca(ue(Z({pubkey:ca,account:Z({executable:Ma(),owner:ca,lamports:S(),data:no,rentEpoch:S()})})));Ca(ue(Z({lamports:S(),address:ca})));const xo=Z({executable:Ma(),owner:ca,lamports:S(),data:vo,rentEpoch:S()});Z({pubkey:ca,account:xo});const fc=Zr(Sa([co(ma),no]),Sa([Yn,no]),a=>Array.isArray(a)?pt(a,vo):a),dc=Z({executable:Ma(),owner:ca,lamports:S(),data:fc,rentEpoch:S()});Z({pubkey:ca,account:dc});Z({state:Sa([ra("active"),ra("inactive"),ra("activating"),ra("deactivating")]),active:S(),inactive:S()});We(ue(Z({signature:re(),slot:S(),err:dr,memo:fe(re()),blockTime:ke(fe(S()))})));We(ue(Z({signature:re(),slot:S(),err:dr,memo:fe(re()),blockTime:ke(fe(S()))})));Z({subscription:S(),result:zt(xo)});const hc=Z({pubkey:ca,account:xo});Z({subscription:S(),result:zt(hc)});const pc=Z({parent:S(),slot:S(),root:S()});Z({subscription:S(),result:pc});const mc=Sa([Z({type:Sa([ra("firstShredReceived"),ra("completed"),ra("optimisticConfirmation"),ra("root")]),slot:S(),timestamp:S()}),Z({type:ra("createdBank"),parent:S(),slot:S(),timestamp:S()}),Z({type:ra("frozen"),slot:S(),timestamp:S(),stats:Z({numTransactionEntries:S(),numSuccessfulTransactions:S(),numFailedTransactions:S(),maxTransactionsPerEntry:S()})}),Z({type:ra("dead"),slot:S(),timestamp:S(),err:re()})]);Z({subscription:S(),result:mc});Z({subscription:S(),result:zt(Sa([ic,sc]))});Z({subscription:S(),result:S()});Z({pubkey:re(),gossip:fe(re()),tpu:fe(re()),rpc:fe(re()),version:fe(re())});const Jo=Z({votePubkey:re(),nodePubkey:re(),activatedStake:S(),epochVoteAccount:Ma(),epochCredits:ue(lo([S(),S(),S()])),commission:S(),lastVote:S(),rootSlot:fe(S())});We(Z({current:ue(Jo),delinquent:ue(Jo)}));const bc=Sa([ra("processed"),ra("confirmed"),ra("finalized")]),gc=Z({slot:S(),confirmations:fe(S()),err:dr,confirmationStatus:ke(bc)});Ca(ue(fe(gc)));We(S());const Gn=Z({accountKey:ca,writableIndexes:ue(S()),readonlyIndexes:ue(S())}),yo=Z({signatures:ue(re()),message:Z({accountKeys:ue(re()),header:Z({numRequiredSignatures:S(),numReadonlySignedAccounts:S(),numReadonlyUnsignedAccounts:S()}),instructions:ue(Z({accounts:ue(S()),data:re(),programIdIndex:S()})),recentBlockhash:re(),addressTableLookups:ke(ue(Gn))})}),Wn=Z({pubkey:ca,signer:Ma(),writable:Ma(),source:ke(Sa([ra("transaction"),ra("lookupTable")]))}),Xn=Z({accountKeys:ue(Wn),signatures:ue(re())}),Qn=Z({parsed:Hr(),program:re(),programId:ca}),Jn=Z({accounts:ue(ca),data:re(),programId:ca}),vc=Sa([Jn,Qn]),xc=Sa([Z({parsed:Hr(),program:re(),programId:re()}),Z({accounts:ue(re()),data:re(),programId:re()})]),ei=Zr(vc,xc,a=>"accounts"in a?pt(a,Jn):pt(a,Qn)),ai=Z({signatures:ue(re()),message:Z({accountKeys:ue(Wn),instructions:ue(ei),recentBlockhash:re(),addressTableLookups:ke(fe(ue(Gn)))})}),xt=Z({accountIndex:S(),mint:re(),owner:ke(re()),programId:ke(re()),uiTokenAmount:uc}),ri=Z({writable:ue(ca),readonly:ue(ca)}),At=Z({err:dr,fee:S(),innerInstructions:ke(fe(ue(Z({index:S(),instructions:ue(Z({accounts:ue(S()),data:re(),programIdIndex:S()}))})))),preBalances:ue(S()),postBalances:ue(S()),logMessages:ke(fe(ue(re()))),preTokenBalances:ke(fe(ue(xt))),postTokenBalances:ke(fe(ue(xt))),loadedAddresses:ke(ri),computeUnitsConsumed:ke(S())}),wo=Z({err:dr,fee:S(),innerInstructions:ke(fe(ue(Z({index:S(),instructions:ue(ei)})))),preBalances:ue(S()),postBalances:ue(S()),logMessages:ke(fe(ue(re()))),preTokenBalances:ke(fe(ue(xt))),postTokenBalances:ke(fe(ue(xt))),loadedAddresses:ke(ri),computeUnitsConsumed:ke(S())}),Ir=Sa([ra(0),ra("legacy")]),hr=Z({pubkey:re(),lamports:S(),postBalance:fe(S()),rewardType:fe(re()),commission:ke(fe(S()))});We(fe(Z({blockhash:re(),previousBlockhash:re(),parentSlot:S(),transactions:ue(Z({transaction:yo,meta:fe(At),version:ke(Ir)})),rewards:ke(ue(hr)),blockTime:fe(S()),blockHeight:fe(S())})));We(fe(Z({blockhash:re(),previousBlockhash:re(),parentSlot:S(),rewards:ke(ue(hr)),blockTime:fe(S()),blockHeight:fe(S())})));We(fe(Z({blockhash:re(),previousBlockhash:re(),parentSlot:S(),transactions:ue(Z({transaction:Xn,meta:fe(At),version:ke(Ir)})),rewards:ke(ue(hr)),blockTime:fe(S()),blockHeight:fe(S())})));We(fe(Z({blockhash:re(),previousBlockhash:re(),parentSlot:S(),transactions:ue(Z({transaction:ai,meta:fe(wo),version:ke(Ir)})),rewards:ke(ue(hr)),blockTime:fe(S()),blockHeight:fe(S())})));We(fe(Z({blockhash:re(),previousBlockhash:re(),parentSlot:S(),transactions:ue(Z({transaction:Xn,meta:fe(wo),version:ke(Ir)})),rewards:ke(ue(hr)),blockTime:fe(S()),blockHeight:fe(S())})));We(fe(Z({blockhash:re(),previousBlockhash:re(),parentSlot:S(),rewards:ke(ue(hr)),blockTime:fe(S()),blockHeight:fe(S())})));We(fe(Z({blockhash:re(),previousBlockhash:re(),parentSlot:S(),transactions:ue(Z({transaction:yo,meta:fe(At)})),rewards:ke(ue(hr)),blockTime:fe(S())})));We(fe(Z({blockhash:re(),previousBlockhash:re(),parentSlot:S(),signatures:ue(re()),blockTime:fe(S())})));We(fe(Z({slot:S(),meta:fe(At),blockTime:ke(fe(S())),transaction:yo,version:ke(Ir)})));We(fe(Z({slot:S(),transaction:ai,meta:fe(wo),blockTime:ke(fe(S())),version:ke(Ir)})));Ca(Z({blockhash:re(),lastValidBlockHeight:S()}));Ca(Ma());const yc=Z({slot:S(),numTransactions:S(),numSlots:S(),samplePeriodSecs:S()});We(ue(yc));Ca(fe(Z({feeCalculator:Z({lamportsPerSignature:S()})})));We(re());We(re());const wc=Z({err:dr,logs:ue(re()),signature:re()});Z({result:zt(wc),subscription:S()});Object.freeze({CreateLookupTable:{index:0,layout:y.struct([y.u32("instruction"),Br("recentSlot"),y.u8("bumpSeed")])},FreezeLookupTable:{index:1,layout:y.struct([y.u32("instruction")])},ExtendLookupTable:{index:2,layout:y.struct([y.u32("instruction"),Br(),y.seq(Pe(),y.offset(y.u32(),-8),"addresses")])},DeactivateLookupTable:{index:3,layout:y.struct([y.u32("instruction")])},CloseLookupTable:{index:4,layout:y.struct([y.u32("instruction")])}});new $e("AddressLookupTab1e1111111111111111111111111");Object.freeze({RequestUnits:{index:0,layout:y.struct([y.u8("instruction"),y.u32("units"),y.u32("additionalFee")])},RequestHeapFrame:{index:1,layout:y.struct([y.u8("instruction"),y.u32("bytes")])},SetComputeUnitLimit:{index:2,layout:y.struct([y.u8("instruction"),y.u32("units")])},SetComputeUnitPrice:{index:3,layout:y.struct([y.u8("instruction"),Br("microLamports")])}});new $e("ComputeBudget111111111111111111111111111111");y.struct([y.u8("numSignatures"),y.u8("padding"),y.u16("signatureOffset"),y.u16("signatureInstructionIndex"),y.u16("publicKeyOffset"),y.u16("publicKeyInstructionIndex"),y.u16("messageDataOffset"),y.u16("messageDataSize"),y.u16("messageInstructionIndex")]);new $e("Ed25519SigVerify111111111111111111111111111");Ms.utils.isValidPrivateKey;y.struct([y.u8("numSignatures"),y.u16("signatureOffset"),y.u8("signatureInstructionIndex"),y.u16("ethAddressOffset"),y.u8("ethAddressInstructionIndex"),y.u16("messageDataOffset"),y.u16("messageDataSize"),y.u8("messageInstructionIndex"),y.blob(20,"ethAddress"),y.blob(64,"signature"),y.u8("recoveryId")]);new $e("KeccakSecp256k11111111111111111111111111111");var ti;new $e("StakeConfig11111111111111111111111111111111");class oi{constructor(e,r,n){this.unixTimestamp=void 0,this.epoch=void 0,this.custodian=void 0,this.unixTimestamp=e,this.epoch=r,this.custodian=n}}ti=oi;oi.default=new ti(0,0,$e.default);Object.freeze({Initialize:{index:0,layout:y.struct([y.u32("instruction"),Ys(),Ks()])},Authorize:{index:1,layout:y.struct([y.u32("instruction"),Pe("newAuthorized"),y.u32("stakeAuthorizationType")])},Delegate:{index:2,layout:y.struct([y.u32("instruction")])},Split:{index:3,layout:y.struct([y.u32("instruction"),y.ns64("lamports")])},Withdraw:{index:4,layout:y.struct([y.u32("instruction"),y.ns64("lamports")])},Deactivate:{index:5,layout:y.struct([y.u32("instruction")])},Merge:{index:7,layout:y.struct([y.u32("instruction")])},AuthorizeWithSeed:{index:8,layout:y.struct([y.u32("instruction"),Pe("newAuthorized"),y.u32("stakeAuthorizationType"),yr("authoritySeed"),Pe("authorityOwner")])}});new $e("Stake11111111111111111111111111111111111111");Object.freeze({InitializeAccount:{index:0,layout:y.struct([y.u32("instruction"),Gs()])},Authorize:{index:1,layout:y.struct([y.u32("instruction"),Pe("newAuthorized"),y.u32("voteAuthorizationType")])},Withdraw:{index:3,layout:y.struct([y.u32("instruction"),y.ns64("lamports")])},UpdateValidatorIdentity:{index:4,layout:y.struct([y.u32("instruction")])},AuthorizeWithSeed:{index:10,layout:y.struct([y.u32("instruction"),Ws()])}});new $e("Vote111111111111111111111111111111111111111");new $e("Va1idator1nfo111111111111111111111111111111");Z({name:re(),website:ke(re()),details:ke(re()),iconUrl:ke(re()),keybaseUsername:ke(re())});new $e("Vote111111111111111111111111111111111111111");y.struct([Pe("nodePubkey"),Pe("authorizedWithdrawer"),y.u8("commission"),y.nu64(),y.seq(y.struct([y.nu64("slot"),y.u32("confirmationCount")]),y.offset(y.u32(),-8),"votes"),y.u8("rootSlotValid"),y.nu64("rootSlot"),y.nu64(),y.seq(y.struct([y.nu64("epoch"),Pe("authorizedVoter")]),y.offset(y.u32(),-8),"authorizedVoters"),y.struct([y.seq(y.struct([Pe("authorizedPubkey"),y.nu64("epochOfLastAuthorizedSwitch"),y.nu64("targetEpoch")]),32,"buf"),y.nu64("idx"),y.u8("isEmpty")],"priorVoters"),y.nu64(),y.seq(y.struct([y.nu64("epoch"),y.nu64("credits"),y.nu64("prevCredits")]),y.offset(y.u32(),-8),"epochCredits"),y.struct([y.nu64("slot"),y.nu64("timestamp")],"lastTimestamp")]);var Ia={},La={},Ke={},za={},Yt={},Rr={},en;function kc(){return en||(en=1,Object.defineProperty(Rr,"__esModule",{value:!0}),Rr.crypto=void 0,Rr.crypto=typeof globalThis=="object"&&"crypto"in globalThis?globalThis.crypto:void 0),Rr}var an;function Wr(){return an||(an=1,function(a){/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */Object.defineProperty(a,"__esModule",{value:!0}),a.wrapXOFConstructorWithOpts=a.wrapConstructorWithOpts=a.wrapConstructor=a.Hash=a.nextTick=a.swap32IfBE=a.byteSwapIfBE=a.swap8IfBE=a.isLE=void 0,a.isBytes=r,a.anumber=n,a.abytes=s,a.ahash=i,a.aexists=u,a.aoutput=d,a.u8=h,a.u32=b,a.clean=m,a.createView=v,a.rotr=w,a.rotl=U,a.byteSwap=T,a.byteSwap32=B,a.bytesToHex=Y,a.hexToBytes=D,a.asyncLoop=G,a.utf8ToBytes=J,a.bytesToUtf8=x,a.toBytes=H,a.kdfInputToBytes=L,a.concatBytes=ae,a.checkOpts=te,a.createHasher=X,a.createOptHasher=Q,a.createXOFer=M,a.randomBytes=q;const e=kc();function r(g){return g instanceof Uint8Array||ArrayBuffer.isView(g)&&g.constructor.name==="Uint8Array"}function n(g){if(!Number.isSafeInteger(g)||g<0)throw new Error("positive integer expected, got "+g)}function s(g,...I){if(!r(g))throw new Error("Uint8Array expected");if(I.length>0&&!I.includes(g.length))throw new Error("Uint8Array expected of length "+I+", got length="+g.length)}function i(g){if(typeof g!="function"||typeof g.create!="function")throw new Error("Hash should be wrapped by utils.createHasher");n(g.outputLen),n(g.blockLen)}function u(g,I=!0){if(g.destroyed)throw new Error("Hash instance has been destroyed");if(I&&g.finished)throw new Error("Hash#digest() has already been called")}function d(g,I){s(g);const F=I.outputLen;if(g.length<F)throw new Error("digestInto() expects output buffer of length at least "+F)}function h(g){return new Uint8Array(g.buffer,g.byteOffset,g.byteLength)}function b(g){return new Uint32Array(g.buffer,g.byteOffset,Math.floor(g.byteLength/4))}function m(...g){for(let I=0;I<g.length;I++)g[I].fill(0)}function v(g){return new DataView(g.buffer,g.byteOffset,g.byteLength)}function w(g,I){return g<<32-I|g>>>I}function U(g,I){return g<<I|g>>>32-I>>>0}a.isLE=new Uint8Array(new Uint32Array([287454020]).buffer)[0]===68;function T(g){return g<<24&4278190080|g<<8&16711680|g>>>8&65280|g>>>24&255}a.swap8IfBE=a.isLE?g=>g:g=>T(g),a.byteSwapIfBE=a.swap8IfBE;function B(g){for(let I=0;I<g.length;I++)g[I]=T(g[I]);return g}a.swap32IfBE=a.isLE?g=>g:B;const z=typeof Uint8Array.from([]).toHex=="function"&&typeof Uint8Array.fromHex=="function",$=Array.from({length:256},(g,I)=>I.toString(16).padStart(2,"0"));function Y(g){if(s(g),z)return g.toHex();let I="";for(let F=0;F<g.length;F++)I+=$[g[F]];return I}const E={_0:48,_9:57,A:65,F:70,a:97,f:102};function K(g){if(g>=E._0&&g<=E._9)return g-E._0;if(g>=E.A&&g<=E.F)return g-(E.A-10);if(g>=E.a&&g<=E.f)return g-(E.a-10)}function D(g){if(typeof g!="string")throw new Error("hex string expected, got "+typeof g);if(z)return Uint8Array.fromHex(g);const I=g.length,F=I/2;if(I%2)throw new Error("hex string expected, got unpadded hex of length "+I);const oe=new Uint8Array(F);for(let ne=0,me=0;ne<F;ne++,me+=2){const ie=K(g.charCodeAt(me)),ye=K(g.charCodeAt(me+1));if(ie===void 0||ye===void 0){const Re=g[me]+g[me+1];throw new Error('hex string expected, got non-hex character "'+Re+'" at index '+me)}oe[ne]=ie*16+ye}return oe}const C=async()=>{};a.nextTick=C;async function G(g,I,F){let oe=Date.now();for(let ne=0;ne<g;ne++){F(ne);const me=Date.now()-oe;me>=0&&me<I||(await(0,a.nextTick)(),oe+=me)}}function J(g){if(typeof g!="string")throw new Error("string expected");return new Uint8Array(new TextEncoder().encode(g))}function x(g){return new TextDecoder().decode(g)}function H(g){return typeof g=="string"&&(g=J(g)),s(g),g}function L(g){return typeof g=="string"&&(g=J(g)),s(g),g}function ae(...g){let I=0;for(let oe=0;oe<g.length;oe++){const ne=g[oe];s(ne),I+=ne.length}const F=new Uint8Array(I);for(let oe=0,ne=0;oe<g.length;oe++){const me=g[oe];F.set(me,ne),ne+=me.length}return F}function te(g,I){if(I!==void 0&&{}.toString.call(I)!=="[object Object]")throw new Error("options should be object or undefined");return Object.assign(g,I)}class V{}a.Hash=V;function X(g){const I=oe=>g().update(H(oe)).digest(),F=g();return I.outputLen=F.outputLen,I.blockLen=F.blockLen,I.create=()=>g(),I}function Q(g){const I=(oe,ne)=>g(ne).update(H(oe)).digest(),F=g({});return I.outputLen=F.outputLen,I.blockLen=F.blockLen,I.create=oe=>g(oe),I}function M(g){const I=(oe,ne)=>g(ne).update(H(oe)).digest(),F=g({});return I.outputLen=F.outputLen,I.blockLen=F.blockLen,I.create=oe=>g(oe),I}a.wrapConstructor=X,a.wrapConstructorWithOpts=Q,a.wrapXOFConstructorWithOpts=M;function q(g=32){if(e.crypto&&typeof e.crypto.getRandomValues=="function")return e.crypto.getRandomValues(new Uint8Array(g));if(e.crypto&&typeof e.crypto.randomBytes=="function")return Uint8Array.from(e.crypto.randomBytes(g));throw new Error("crypto.getRandomValues must be defined")}}(Yt)),Yt}var rn;function zc(){if(rn)return za;rn=1,Object.defineProperty(za,"__esModule",{value:!0}),za.SHA512_IV=za.SHA384_IV=za.SHA224_IV=za.SHA256_IV=za.HashMD=void 0,za.setBigUint64=e,za.Chi=r,za.Maj=n;const a=Wr();function e(i,u,d,h){if(typeof i.setBigUint64=="function")return i.setBigUint64(u,d,h);const b=BigInt(32),m=BigInt(4294967295),v=Number(d>>b&m),w=Number(d&m),U=h?4:0,T=h?0:4;i.setUint32(u+U,v,h),i.setUint32(u+T,w,h)}function r(i,u,d){return i&u^~i&d}function n(i,u,d){return i&u^i&d^u&d}class s extends a.Hash{constructor(u,d,h,b){super(),this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.blockLen=u,this.outputLen=d,this.padOffset=h,this.isLE=b,this.buffer=new Uint8Array(u),this.view=(0,a.createView)(this.buffer)}update(u){(0,a.aexists)(this),u=(0,a.toBytes)(u),(0,a.abytes)(u);const{view:d,buffer:h,blockLen:b}=this,m=u.length;for(let v=0;v<m;){const w=Math.min(b-this.pos,m-v);if(w===b){const U=(0,a.createView)(u);for(;b<=m-v;v+=b)this.process(U,v);continue}h.set(u.subarray(v,v+w),this.pos),this.pos+=w,v+=w,this.pos===b&&(this.process(d,0),this.pos=0)}return this.length+=u.length,this.roundClean(),this}digestInto(u){(0,a.aexists)(this),(0,a.aoutput)(u,this),this.finished=!0;const{buffer:d,view:h,blockLen:b,isLE:m}=this;let{pos:v}=this;d[v++]=128,(0,a.clean)(this.buffer.subarray(v)),this.padOffset>b-v&&(this.process(h,0),v=0);for(let z=v;z<b;z++)d[z]=0;e(h,b-8,BigInt(this.length*8),m),this.process(h,0);const w=(0,a.createView)(u),U=this.outputLen;if(U%4)throw new Error("_sha2: outputLen should be aligned to 32bit");const T=U/4,B=this.get();if(T>B.length)throw new Error("_sha2: outputLen bigger than state");for(let z=0;z<T;z++)w.setUint32(4*z,B[z],m)}digest(){const{buffer:u,outputLen:d}=this;this.digestInto(u);const h=u.slice(0,d);return this.destroy(),h}_cloneInto(u){u||(u=new this.constructor),u.set(...this.get());const{blockLen:d,buffer:h,length:b,finished:m,destroyed:v,pos:w}=this;return u.destroyed=v,u.finished=m,u.length=b,u.pos=w,b%d&&u.buffer.set(h),u}clone(){return this._cloneInto()}}return za.HashMD=s,za.SHA256_IV=Uint32Array.from([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),za.SHA224_IV=Uint32Array.from([3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428]),za.SHA384_IV=Uint32Array.from([3418070365,3238371032,1654270250,914150663,2438529370,812702999,355462360,4144912697,1731405415,4290775857,2394180231,1750603025,3675008525,1694076839,1203062813,3204075428]),za.SHA512_IV=Uint32Array.from([1779033703,4089235720,3144134277,2227873595,1013904242,4271175723,2773480762,1595750129,1359893119,2917565137,2600822924,725511199,528734635,4215389547,1541459225,327033209]),za}var je={},tn;function Ac(){if(tn)return je;tn=1,Object.defineProperty(je,"__esModule",{value:!0}),je.toBig=je.shrSL=je.shrSH=je.rotrSL=je.rotrSH=je.rotrBL=je.rotrBH=je.rotr32L=je.rotr32H=je.rotlSL=je.rotlSH=je.rotlBL=je.rotlBH=je.add5L=je.add5H=je.add4L=je.add4H=je.add3L=je.add3H=void 0,je.add=$,je.fromBig=r,je.split=n;const a=BigInt(2**32-1),e=BigInt(32);function r(x,H=!1){return H?{h:Number(x&a),l:Number(x>>e&a)}:{h:Number(x>>e&a)|0,l:Number(x&a)|0}}function n(x,H=!1){const L=x.length;let ae=new Uint32Array(L),te=new Uint32Array(L);for(let V=0;V<L;V++){const{h:X,l:Q}=r(x[V],H);[ae[V],te[V]]=[X,Q]}return[ae,te]}const s=(x,H)=>BigInt(x>>>0)<<e|BigInt(H>>>0);je.toBig=s;const i=(x,H,L)=>x>>>L;je.shrSH=i;const u=(x,H,L)=>x<<32-L|H>>>L;je.shrSL=u;const d=(x,H,L)=>x>>>L|H<<32-L;je.rotrSH=d;const h=(x,H,L)=>x<<32-L|H>>>L;je.rotrSL=h;const b=(x,H,L)=>x<<64-L|H>>>L-32;je.rotrBH=b;const m=(x,H,L)=>x>>>L-32|H<<64-L;je.rotrBL=m;const v=(x,H)=>H;je.rotr32H=v;const w=(x,H)=>x;je.rotr32L=w;const U=(x,H,L)=>x<<L|H>>>32-L;je.rotlSH=U;const T=(x,H,L)=>H<<L|x>>>32-L;je.rotlSL=T;const B=(x,H,L)=>H<<L-32|x>>>64-L;je.rotlBH=B;const z=(x,H,L)=>x<<L-32|H>>>64-L;je.rotlBL=z;function $(x,H,L,ae){const te=(H>>>0)+(ae>>>0);return{h:x+L+(te/2**32|0)|0,l:te|0}}const Y=(x,H,L)=>(x>>>0)+(H>>>0)+(L>>>0);je.add3L=Y;const E=(x,H,L,ae)=>H+L+ae+(x/2**32|0)|0;je.add3H=E;const K=(x,H,L,ae)=>(x>>>0)+(H>>>0)+(L>>>0)+(ae>>>0);je.add4L=K;const D=(x,H,L,ae,te)=>H+L+ae+te+(x/2**32|0)|0;je.add4H=D;const C=(x,H,L,ae,te)=>(x>>>0)+(H>>>0)+(L>>>0)+(ae>>>0)+(te>>>0);je.add5L=C;const G=(x,H,L,ae,te,V)=>H+L+ae+te+V+(x/2**32|0)|0;je.add5H=G;const J={fromBig:r,split:n,toBig:s,shrSH:i,shrSL:u,rotrSH:d,rotrSL:h,rotrBH:b,rotrBL:m,rotr32H:v,rotr32L:w,rotlSH:U,rotlSL:T,rotlBH:B,rotlBL:z,add:$,add3L:Y,add3H:E,add4L:K,add4H:D,add5H:G,add5L:C};return je.default=J,je}var on;function ni(){if(on)return Ke;on=1,Object.defineProperty(Ke,"__esModule",{value:!0}),Ke.sha512_224=Ke.sha512_256=Ke.sha384=Ke.sha512=Ke.sha224=Ke.sha256=Ke.SHA512_256=Ke.SHA512_224=Ke.SHA384=Ke.SHA512=Ke.SHA224=Ke.SHA256=void 0;const a=zc(),e=Ac(),r=Wr(),n=Uint32Array.from([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),s=new Uint32Array(64);class i extends a.HashMD{constructor(E=32){super(64,E,8,!1),this.A=a.SHA256_IV[0]|0,this.B=a.SHA256_IV[1]|0,this.C=a.SHA256_IV[2]|0,this.D=a.SHA256_IV[3]|0,this.E=a.SHA256_IV[4]|0,this.F=a.SHA256_IV[5]|0,this.G=a.SHA256_IV[6]|0,this.H=a.SHA256_IV[7]|0}get(){const{A:E,B:K,C:D,D:C,E:G,F:J,G:x,H}=this;return[E,K,D,C,G,J,x,H]}set(E,K,D,C,G,J,x,H){this.A=E|0,this.B=K|0,this.C=D|0,this.D=C|0,this.E=G|0,this.F=J|0,this.G=x|0,this.H=H|0}process(E,K){for(let te=0;te<16;te++,K+=4)s[te]=E.getUint32(K,!1);for(let te=16;te<64;te++){const V=s[te-15],X=s[te-2],Q=(0,r.rotr)(V,7)^(0,r.rotr)(V,18)^V>>>3,M=(0,r.rotr)(X,17)^(0,r.rotr)(X,19)^X>>>10;s[te]=M+s[te-7]+Q+s[te-16]|0}let{A:D,B:C,C:G,D:J,E:x,F:H,G:L,H:ae}=this;for(let te=0;te<64;te++){const V=(0,r.rotr)(x,6)^(0,r.rotr)(x,11)^(0,r.rotr)(x,25),X=ae+V+(0,a.Chi)(x,H,L)+n[te]+s[te]|0,M=((0,r.rotr)(D,2)^(0,r.rotr)(D,13)^(0,r.rotr)(D,22))+(0,a.Maj)(D,C,G)|0;ae=L,L=H,H=x,x=J+X|0,J=G,G=C,C=D,D=X+M|0}D=D+this.A|0,C=C+this.B|0,G=G+this.C|0,J=J+this.D|0,x=x+this.E|0,H=H+this.F|0,L=L+this.G|0,ae=ae+this.H|0,this.set(D,C,G,J,x,H,L,ae)}roundClean(){(0,r.clean)(s)}destroy(){this.set(0,0,0,0,0,0,0,0),(0,r.clean)(this.buffer)}}Ke.SHA256=i;class u extends i{constructor(){super(28),this.A=a.SHA224_IV[0]|0,this.B=a.SHA224_IV[1]|0,this.C=a.SHA224_IV[2]|0,this.D=a.SHA224_IV[3]|0,this.E=a.SHA224_IV[4]|0,this.F=a.SHA224_IV[5]|0,this.G=a.SHA224_IV[6]|0,this.H=a.SHA224_IV[7]|0}}Ke.SHA224=u;const d=e.split(["0x428a2f98d728ae22","0x7137449123ef65cd","0xb5c0fbcfec4d3b2f","0xe9b5dba58189dbbc","0x3956c25bf348b538","0x59f111f1b605d019","0x923f82a4af194f9b","0xab1c5ed5da6d8118","0xd807aa98a3030242","0x12835b0145706fbe","0x243185be4ee4b28c","0x550c7dc3d5ffb4e2","0x72be5d74f27b896f","0x80deb1fe3b1696b1","0x9bdc06a725c71235","0xc19bf174cf692694","0xe49b69c19ef14ad2","0xefbe4786384f25e3","0x0fc19dc68b8cd5b5","0x240ca1cc77ac9c65","0x2de92c6f592b0275","0x4a7484aa6ea6e483","0x5cb0a9dcbd41fbd4","0x76f988da831153b5","0x983e5152ee66dfab","0xa831c66d2db43210","0xb00327c898fb213f","0xbf597fc7beef0ee4","0xc6e00bf33da88fc2","0xd5a79147930aa725","0x06ca6351e003826f","0x142929670a0e6e70","0x27b70a8546d22ffc","0x2e1b21385c26c926","0x4d2c6dfc5ac42aed","0x53380d139d95b3df","0x650a73548baf63de","0x766a0abb3c77b2a8","0x81c2c92e47edaee6","0x92722c851482353b","0xa2bfe8a14cf10364","0xa81a664bbc423001","0xc24b8b70d0f89791","0xc76c51a30654be30","0xd192e819d6ef5218","0xd69906245565a910","0xf40e35855771202a","0x106aa07032bbd1b8","0x19a4c116b8d2d0c8","0x1e376c085141ab53","0x2748774cdf8eeb99","0x34b0bcb5e19b48a8","0x391c0cb3c5c95a63","0x4ed8aa4ae3418acb","0x5b9cca4f7763e373","0x682e6ff3d6b2b8a3","0x748f82ee5defb2fc","0x78a5636f43172f60","0x84c87814a1f0ab72","0x8cc702081a6439ec","0x90befffa23631e28","0xa4506cebde82bde9","0xbef9a3f7b2c67915","0xc67178f2e372532b","0xca273eceea26619c","0xd186b8c721c0c207","0xeada7dd6cde0eb1e","0xf57d4f7fee6ed178","0x06f067aa72176fba","0x0a637dc5a2c898a6","0x113f9804bef90dae","0x1b710b35131c471b","0x28db77f523047d84","0x32caab7b40c72493","0x3c9ebe0a15c9bebc","0x431d67c49c100d4c","0x4cc5d4becb3e42b6","0x597f299cfc657e2a","0x5fcb6fab3ad6faec","0x6c44198c4a475817"].map(Y=>BigInt(Y))),h=d[0],b=d[1],m=new Uint32Array(80),v=new Uint32Array(80);class w extends a.HashMD{constructor(E=64){super(128,E,16,!1),this.Ah=a.SHA512_IV[0]|0,this.Al=a.SHA512_IV[1]|0,this.Bh=a.SHA512_IV[2]|0,this.Bl=a.SHA512_IV[3]|0,this.Ch=a.SHA512_IV[4]|0,this.Cl=a.SHA512_IV[5]|0,this.Dh=a.SHA512_IV[6]|0,this.Dl=a.SHA512_IV[7]|0,this.Eh=a.SHA512_IV[8]|0,this.El=a.SHA512_IV[9]|0,this.Fh=a.SHA512_IV[10]|0,this.Fl=a.SHA512_IV[11]|0,this.Gh=a.SHA512_IV[12]|0,this.Gl=a.SHA512_IV[13]|0,this.Hh=a.SHA512_IV[14]|0,this.Hl=a.SHA512_IV[15]|0}get(){const{Ah:E,Al:K,Bh:D,Bl:C,Ch:G,Cl:J,Dh:x,Dl:H,Eh:L,El:ae,Fh:te,Fl:V,Gh:X,Gl:Q,Hh:M,Hl:q}=this;return[E,K,D,C,G,J,x,H,L,ae,te,V,X,Q,M,q]}set(E,K,D,C,G,J,x,H,L,ae,te,V,X,Q,M,q){this.Ah=E|0,this.Al=K|0,this.Bh=D|0,this.Bl=C|0,this.Ch=G|0,this.Cl=J|0,this.Dh=x|0,this.Dl=H|0,this.Eh=L|0,this.El=ae|0,this.Fh=te|0,this.Fl=V|0,this.Gh=X|0,this.Gl=Q|0,this.Hh=M|0,this.Hl=q|0}process(E,K){for(let F=0;F<16;F++,K+=4)m[F]=E.getUint32(K),v[F]=E.getUint32(K+=4);for(let F=16;F<80;F++){const oe=m[F-15]|0,ne=v[F-15]|0,me=e.rotrSH(oe,ne,1)^e.rotrSH(oe,ne,8)^e.shrSH(oe,ne,7),ie=e.rotrSL(oe,ne,1)^e.rotrSL(oe,ne,8)^e.shrSL(oe,ne,7),ye=m[F-2]|0,Re=v[F-2]|0,Ze=e.rotrSH(ye,Re,19)^e.rotrBH(ye,Re,61)^e.shrSH(ye,Re,6),Ge=e.rotrSL(ye,Re,19)^e.rotrBL(ye,Re,61)^e.shrSL(ye,Re,6),Qe=e.add4L(ie,Ge,v[F-7],v[F-16]),Xe=e.add4H(Qe,me,Ze,m[F-7],m[F-16]);m[F]=Xe|0,v[F]=Qe|0}let{Ah:D,Al:C,Bh:G,Bl:J,Ch:x,Cl:H,Dh:L,Dl:ae,Eh:te,El:V,Fh:X,Fl:Q,Gh:M,Gl:q,Hh:g,Hl:I}=this;for(let F=0;F<80;F++){const oe=e.rotrSH(te,V,14)^e.rotrSH(te,V,18)^e.rotrBH(te,V,41),ne=e.rotrSL(te,V,14)^e.rotrSL(te,V,18)^e.rotrBL(te,V,41),me=te&X^~te&M,ie=V&Q^~V&q,ye=e.add5L(I,ne,ie,b[F],v[F]),Re=e.add5H(ye,g,oe,me,h[F],m[F]),Ze=ye|0,Ge=e.rotrSH(D,C,28)^e.rotrBH(D,C,34)^e.rotrBH(D,C,39),Qe=e.rotrSL(D,C,28)^e.rotrBL(D,C,34)^e.rotrBL(D,C,39),Xe=D&G^D&x^G&x,aa=C&J^C&H^J&H;g=M|0,I=q|0,M=X|0,q=Q|0,X=te|0,Q=V|0,{h:te,l:V}=e.add(L|0,ae|0,Re|0,Ze|0),L=x|0,ae=H|0,x=G|0,H=J|0,G=D|0,J=C|0;const da=e.add3L(Ze,Qe,aa);D=e.add3H(da,Re,Ge,Xe),C=da|0}({h:D,l:C}=e.add(this.Ah|0,this.Al|0,D|0,C|0)),{h:G,l:J}=e.add(this.Bh|0,this.Bl|0,G|0,J|0),{h:x,l:H}=e.add(this.Ch|0,this.Cl|0,x|0,H|0),{h:L,l:ae}=e.add(this.Dh|0,this.Dl|0,L|0,ae|0),{h:te,l:V}=e.add(this.Eh|0,this.El|0,te|0,V|0),{h:X,l:Q}=e.add(this.Fh|0,this.Fl|0,X|0,Q|0),{h:M,l:q}=e.add(this.Gh|0,this.Gl|0,M|0,q|0),{h:g,l:I}=e.add(this.Hh|0,this.Hl|0,g|0,I|0),this.set(D,C,G,J,x,H,L,ae,te,V,X,Q,M,q,g,I)}roundClean(){(0,r.clean)(m,v)}destroy(){(0,r.clean)(this.buffer),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}Ke.SHA512=w;class U extends w{constructor(){super(48),this.Ah=a.SHA384_IV[0]|0,this.Al=a.SHA384_IV[1]|0,this.Bh=a.SHA384_IV[2]|0,this.Bl=a.SHA384_IV[3]|0,this.Ch=a.SHA384_IV[4]|0,this.Cl=a.SHA384_IV[5]|0,this.Dh=a.SHA384_IV[6]|0,this.Dl=a.SHA384_IV[7]|0,this.Eh=a.SHA384_IV[8]|0,this.El=a.SHA384_IV[9]|0,this.Fh=a.SHA384_IV[10]|0,this.Fl=a.SHA384_IV[11]|0,this.Gh=a.SHA384_IV[12]|0,this.Gl=a.SHA384_IV[13]|0,this.Hh=a.SHA384_IV[14]|0,this.Hl=a.SHA384_IV[15]|0}}Ke.SHA384=U;const T=Uint32Array.from([2352822216,424955298,1944164710,2312950998,502970286,855612546,1738396948,1479516111,258812777,2077511080,2011393907,79989058,1067287976,1780299464,286451373,2446758561]),B=Uint32Array.from([573645204,4230739756,2673172387,3360449730,596883563,1867755857,2520282905,1497426621,2519219938,2827943907,3193839141,1401305490,721525244,746961066,246885852,2177182882]);class z extends w{constructor(){super(28),this.Ah=T[0]|0,this.Al=T[1]|0,this.Bh=T[2]|0,this.Bl=T[3]|0,this.Ch=T[4]|0,this.Cl=T[5]|0,this.Dh=T[6]|0,this.Dl=T[7]|0,this.Eh=T[8]|0,this.El=T[9]|0,this.Fh=T[10]|0,this.Fl=T[11]|0,this.Gh=T[12]|0,this.Gl=T[13]|0,this.Hh=T[14]|0,this.Hl=T[15]|0}}Ke.SHA512_224=z;class $ extends w{constructor(){super(32),this.Ah=B[0]|0,this.Al=B[1]|0,this.Bh=B[2]|0,this.Bl=B[3]|0,this.Ch=B[4]|0,this.Cl=B[5]|0,this.Dh=B[6]|0,this.Dl=B[7]|0,this.Eh=B[8]|0,this.El=B[9]|0,this.Fh=B[10]|0,this.Fl=B[11]|0,this.Gh=B[12]|0,this.Gl=B[13]|0,this.Hh=B[14]|0,this.Hl=B[15]|0}}return Ke.SHA512_256=$,Ke.sha256=(0,r.createHasher)(()=>new i),Ke.sha224=(0,r.createHasher)(()=>new u),Ke.sha512=(0,r.createHasher)(()=>new w),Ke.sha384=(0,r.createHasher)(()=>new U),Ke.sha512_256=(0,r.createHasher)(()=>new $),Ke.sha512_224=(0,r.createHasher)(()=>new z),Ke}var nn;function Ec(){if(nn)return La;nn=1,Object.defineProperty(La,"__esModule",{value:!0}),La.sha224=La.SHA224=La.sha256=La.SHA256=void 0;const a=ni();return La.SHA256=a.SHA256,La.sha256=a.sha256,La.SHA224=a.SHA224,La.sha224=a.sha224,La}var pa={},sn;function Sc(){if(sn)return pa;sn=1,Object.defineProperty(pa,"__esModule",{value:!0}),pa.sha512_256=pa.SHA512_256=pa.sha512_224=pa.SHA512_224=pa.sha384=pa.SHA384=pa.sha512=pa.SHA512=void 0;const a=ni();return pa.SHA512=a.SHA512,pa.sha512=a.sha512,pa.SHA384=a.SHA384,pa.sha384=a.sha384,pa.SHA512_224=a.SHA512_224,pa.sha512_224=a.sha512_224,pa.SHA512_256=a.SHA512_256,pa.sha512_256=a.sha512_256,pa}var Cr={},Kt={},cn;function Bc(){return cn||(cn=1,function(a){Object.defineProperty(a,"__esModule",{value:!0}),a.hmac=a.HMAC=void 0;const e=Wr();class r extends e.Hash{constructor(i,u){super(),this.finished=!1,this.destroyed=!1,(0,e.ahash)(i);const d=(0,e.toBytes)(u);if(this.iHash=i.create(),typeof this.iHash.update!="function")throw new Error("Expected instance of class which extends utils.Hash");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;const h=this.blockLen,b=new Uint8Array(h);b.set(d.length>h?i.create().update(d).digest():d);for(let m=0;m<b.length;m++)b[m]^=54;this.iHash.update(b),this.oHash=i.create();for(let m=0;m<b.length;m++)b[m]^=106;this.oHash.update(b),(0,e.clean)(b)}update(i){return(0,e.aexists)(this),this.iHash.update(i),this}digestInto(i){(0,e.aexists)(this),(0,e.abytes)(i,this.outputLen),this.finished=!0,this.iHash.digestInto(i),this.oHash.update(i),this.oHash.digestInto(i),this.destroy()}digest(){const i=new Uint8Array(this.oHash.outputLen);return this.digestInto(i),i}_cloneInto(i){i||(i=Object.create(Object.getPrototypeOf(this),{}));const{oHash:u,iHash:d,finished:h,destroyed:b,blockLen:m,outputLen:v}=this;return i=i,i.finished=h,i.destroyed=b,i.blockLen=m,i.outputLen=v,i.oHash=u._cloneInto(i.oHash),i.iHash=d._cloneInto(i.iHash),i}clone(){return this._cloneInto()}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}}a.HMAC=r;const n=(s,i,u)=>new r(s,i).update(u).digest();a.hmac=n,a.hmac.create=(s,i)=>new r(s,i)}(Kt)),Kt}var ln;function jc(){if(ln)return Cr;ln=1,Object.defineProperty(Cr,"__esModule",{value:!0}),Cr.pbkdf2=s,Cr.pbkdf2Async=i;const a=Bc(),e=Wr();function r(u,d,h,b){(0,e.ahash)(u);const m=(0,e.checkOpts)({dkLen:32,asyncTick:10},b),{c:v,dkLen:w,asyncTick:U}=m;if((0,e.anumber)(v),(0,e.anumber)(w),(0,e.anumber)(U),v<1)throw new Error("iterations (c) should be >= 1");const T=(0,e.kdfInputToBytes)(d),B=(0,e.kdfInputToBytes)(h),z=new Uint8Array(w),$=a.hmac.create(u,T),Y=$._cloneInto().update(B);return{c:v,dkLen:w,asyncTick:U,DK:z,PRF:$,PRFSalt:Y}}function n(u,d,h,b,m){return u.destroy(),d.destroy(),b&&b.destroy(),(0,e.clean)(m),h}function s(u,d,h,b){const{c:m,dkLen:v,DK:w,PRF:U,PRFSalt:T}=r(u,d,h,b);let B;const z=new Uint8Array(4),$=(0,e.createView)(z),Y=new Uint8Array(U.outputLen);for(let E=1,K=0;K<v;E++,K+=U.outputLen){const D=w.subarray(K,K+U.outputLen);$.setInt32(0,E,!1),(B=T._cloneInto(B)).update(z).digestInto(Y),D.set(Y.subarray(0,D.length));for(let C=1;C<m;C++){U._cloneInto(B).update(Y).digestInto(Y);for(let G=0;G<D.length;G++)D[G]^=Y[G]}}return n(U,T,w,B,Y)}async function i(u,d,h,b){const{c:m,dkLen:v,asyncTick:w,DK:U,PRF:T,PRFSalt:B}=r(u,d,h,b);let z;const $=new Uint8Array(4),Y=(0,e.createView)($),E=new Uint8Array(T.outputLen);for(let K=1,D=0;D<v;K++,D+=T.outputLen){const C=U.subarray(D,D+T.outputLen);Y.setInt32(0,K,!1),(z=B._cloneInto(z)).update($).digestInto(E),C.set(E.subarray(0,C.length)),await(0,e.asyncLoop)(m-1,w,()=>{T._cloneInto(z).update(E).digestInto(E);for(let G=0;G<C.length;G++)C[G]^=E[G]})}return n(T,B,U,z,E)}return Cr}var Ea={};const _c=JSON.parse('["abdikace","abeceda","adresa","agrese","akce","aktovka","alej","alkohol","amputace","ananas","andulka","anekdota","anketa","antika","anulovat","archa","arogance","asfalt","asistent","aspirace","astma","astronom","atlas","atletika","atol","autobus","azyl","babka","bachor","bacil","baculka","badatel","bageta","bagr","bahno","bakterie","balada","baletka","balkon","balonek","balvan","balza","bambus","bankomat","barbar","baret","barman","baroko","barva","baterka","batoh","bavlna","bazalka","bazilika","bazuka","bedna","beran","beseda","bestie","beton","bezinka","bezmoc","beztak","bicykl","bidlo","biftek","bikiny","bilance","biograf","biolog","bitva","bizon","blahobyt","blatouch","blecha","bledule","blesk","blikat","blizna","blokovat","bloudit","blud","bobek","bobr","bodlina","bodnout","bohatost","bojkot","bojovat","bokorys","bolest","borec","borovice","bota","boubel","bouchat","bouda","boule","bourat","boxer","bradavka","brambora","branka","bratr","brepta","briketa","brko","brloh","bronz","broskev","brunetka","brusinka","brzda","brzy","bublina","bubnovat","buchta","buditel","budka","budova","bufet","bujarost","bukvice","buldok","bulva","bunda","bunkr","burza","butik","buvol","buzola","bydlet","bylina","bytovka","bzukot","capart","carevna","cedr","cedule","cejch","cejn","cela","celer","celkem","celnice","cenina","cennost","cenovka","centrum","cenzor","cestopis","cetka","chalupa","chapadlo","charita","chata","chechtat","chemie","chichot","chirurg","chlad","chleba","chlubit","chmel","chmura","chobot","chochol","chodba","cholera","chomout","chopit","choroba","chov","chrapot","chrlit","chrt","chrup","chtivost","chudina","chutnat","chvat","chvilka","chvost","chyba","chystat","chytit","cibule","cigareta","cihelna","cihla","cinkot","cirkus","cisterna","citace","citrus","cizinec","cizost","clona","cokoliv","couvat","ctitel","ctnost","cudnost","cuketa","cukr","cupot","cvaknout","cval","cvik","cvrkot","cyklista","daleko","dareba","datel","datum","dcera","debata","dechovka","decibel","deficit","deflace","dekl","dekret","demokrat","deprese","derby","deska","detektiv","dikobraz","diktovat","dioda","diplom","disk","displej","divadlo","divoch","dlaha","dlouho","dluhopis","dnes","dobro","dobytek","docent","dochutit","dodnes","dohled","dohoda","dohra","dojem","dojnice","doklad","dokola","doktor","dokument","dolar","doleva","dolina","doma","dominant","domluvit","domov","donutit","dopad","dopis","doplnit","doposud","doprovod","dopustit","dorazit","dorost","dort","dosah","doslov","dostatek","dosud","dosyta","dotaz","dotek","dotknout","doufat","doutnat","dovozce","dozadu","doznat","dozorce","drahota","drak","dramatik","dravec","draze","drdol","drobnost","drogerie","drozd","drsnost","drtit","drzost","duben","duchovno","dudek","duha","duhovka","dusit","dusno","dutost","dvojice","dvorec","dynamit","ekolog","ekonomie","elektron","elipsa","email","emise","emoce","empatie","epizoda","epocha","epopej","epos","esej","esence","eskorta","eskymo","etiketa","euforie","evoluce","exekuce","exkurze","expedice","exploze","export","extrakt","facka","fajfka","fakulta","fanatik","fantazie","farmacie","favorit","fazole","federace","fejeton","fenka","fialka","figurant","filozof","filtr","finance","finta","fixace","fjord","flanel","flirt","flotila","fond","fosfor","fotbal","fotka","foton","frakce","freska","fronta","fukar","funkce","fyzika","galeje","garant","genetika","geolog","gilotina","glazura","glejt","golem","golfista","gotika","graf","gramofon","granule","grep","gril","grog","groteska","guma","hadice","hadr","hala","halenka","hanba","hanopis","harfa","harpuna","havran","hebkost","hejkal","hejno","hejtman","hektar","helma","hematom","herec","herna","heslo","hezky","historik","hladovka","hlasivky","hlava","hledat","hlen","hlodavec","hloh","hloupost","hltat","hlubina","hluchota","hmat","hmota","hmyz","hnis","hnojivo","hnout","hoblina","hoboj","hoch","hodiny","hodlat","hodnota","hodovat","hojnost","hokej","holinka","holka","holub","homole","honitba","honorace","horal","horda","horizont","horko","horlivec","hormon","hornina","horoskop","horstvo","hospoda","hostina","hotovost","houba","houf","houpat","houska","hovor","hradba","hranice","hravost","hrazda","hrbolek","hrdina","hrdlo","hrdost","hrnek","hrobka","hromada","hrot","hrouda","hrozen","hrstka","hrubost","hryzat","hubenost","hubnout","hudba","hukot","humr","husita","hustota","hvozd","hybnost","hydrant","hygiena","hymna","hysterik","idylka","ihned","ikona","iluze","imunita","infekce","inflace","inkaso","inovace","inspekce","internet","invalida","investor","inzerce","ironie","jablko","jachta","jahoda","jakmile","jakost","jalovec","jantar","jarmark","jaro","jasan","jasno","jatka","javor","jazyk","jedinec","jedle","jednatel","jehlan","jekot","jelen","jelito","jemnost","jenom","jepice","jeseter","jevit","jezdec","jezero","jinak","jindy","jinoch","jiskra","jistota","jitrnice","jizva","jmenovat","jogurt","jurta","kabaret","kabel","kabinet","kachna","kadet","kadidlo","kahan","kajak","kajuta","kakao","kaktus","kalamita","kalhoty","kalibr","kalnost","kamera","kamkoliv","kamna","kanibal","kanoe","kantor","kapalina","kapela","kapitola","kapka","kaple","kapota","kapr","kapusta","kapybara","karamel","karotka","karton","kasa","katalog","katedra","kauce","kauza","kavalec","kazajka","kazeta","kazivost","kdekoliv","kdesi","kedluben","kemp","keramika","kino","klacek","kladivo","klam","klapot","klasika","klaun","klec","klenba","klepat","klesnout","klid","klima","klisna","klobouk","klokan","klopa","kloub","klubovna","klusat","kluzkost","kmen","kmitat","kmotr","kniha","knot","koalice","koberec","kobka","kobliha","kobyla","kocour","kohout","kojenec","kokos","koktejl","kolaps","koleda","kolize","kolo","komando","kometa","komik","komnata","komora","kompas","komunita","konat","koncept","kondice","konec","konfese","kongres","konina","konkurs","kontakt","konzerva","kopanec","kopie","kopnout","koprovka","korbel","korektor","kormidlo","koroptev","korpus","koruna","koryto","korzet","kosatec","kostka","kotel","kotleta","kotoul","koukat","koupelna","kousek","kouzlo","kovboj","koza","kozoroh","krabice","krach","krajina","kralovat","krasopis","kravata","kredit","krejcar","kresba","kreveta","kriket","kritik","krize","krkavec","krmelec","krmivo","krocan","krok","kronika","kropit","kroupa","krovka","krtek","kruhadlo","krupice","krutost","krvinka","krychle","krypta","krystal","kryt","kudlanka","kufr","kujnost","kukla","kulajda","kulich","kulka","kulomet","kultura","kuna","kupodivu","kurt","kurzor","kutil","kvalita","kvasinka","kvestor","kynolog","kyselina","kytara","kytice","kytka","kytovec","kyvadlo","labrador","lachtan","ladnost","laik","lakomec","lamela","lampa","lanovka","lasice","laso","lastura","latinka","lavina","lebka","leckdy","leden","lednice","ledovka","ledvina","legenda","legie","legrace","lehce","lehkost","lehnout","lektvar","lenochod","lentilka","lepenka","lepidlo","letadlo","letec","letmo","letokruh","levhart","levitace","levobok","libra","lichotka","lidojed","lidskost","lihovina","lijavec","lilek","limetka","linie","linka","linoleum","listopad","litina","litovat","lobista","lodivod","logika","logoped","lokalita","loket","lomcovat","lopata","lopuch","lord","losos","lotr","loudal","louh","louka","louskat","lovec","lstivost","lucerna","lucifer","lump","lusk","lustrace","lvice","lyra","lyrika","lysina","madam","madlo","magistr","mahagon","majetek","majitel","majorita","makak","makovice","makrela","malba","malina","malovat","malvice","maminka","mandle","manko","marnost","masakr","maskot","masopust","matice","matrika","maturita","mazanec","mazivo","mazlit","mazurka","mdloba","mechanik","meditace","medovina","melasa","meloun","mentolka","metla","metoda","metr","mezera","migrace","mihnout","mihule","mikina","mikrofon","milenec","milimetr","milost","mimika","mincovna","minibar","minomet","minulost","miska","mistr","mixovat","mladost","mlha","mlhovina","mlok","mlsat","mluvit","mnich","mnohem","mobil","mocnost","modelka","modlitba","mohyla","mokro","molekula","momentka","monarcha","monokl","monstrum","montovat","monzun","mosaz","moskyt","most","motivace","motorka","motyka","moucha","moudrost","mozaika","mozek","mozol","mramor","mravenec","mrkev","mrtvola","mrzet","mrzutost","mstitel","mudrc","muflon","mulat","mumie","munice","muset","mutace","muzeum","muzikant","myslivec","mzda","nabourat","nachytat","nadace","nadbytek","nadhoz","nadobro","nadpis","nahlas","nahnat","nahodile","nahradit","naivita","najednou","najisto","najmout","naklonit","nakonec","nakrmit","nalevo","namazat","namluvit","nanometr","naoko","naopak","naostro","napadat","napevno","naplnit","napnout","naposled","naprosto","narodit","naruby","narychlo","nasadit","nasekat","naslepo","nastat","natolik","navenek","navrch","navzdory","nazvat","nebe","nechat","necky","nedaleko","nedbat","neduh","negace","nehet","nehoda","nejen","nejprve","neklid","nelibost","nemilost","nemoc","neochota","neonka","nepokoj","nerost","nerv","nesmysl","nesoulad","netvor","neuron","nevina","nezvykle","nicota","nijak","nikam","nikdy","nikl","nikterak","nitro","nocleh","nohavice","nominace","nora","norek","nositel","nosnost","nouze","noviny","novota","nozdra","nuda","nudle","nuget","nutit","nutnost","nutrie","nymfa","obal","obarvit","obava","obdiv","obec","obehnat","obejmout","obezita","obhajoba","obilnice","objasnit","objekt","obklopit","oblast","oblek","obliba","obloha","obluda","obnos","obohatit","obojek","obout","obrazec","obrna","obruba","obrys","obsah","obsluha","obstarat","obuv","obvaz","obvinit","obvod","obvykle","obyvatel","obzor","ocas","ocel","ocenit","ochladit","ochota","ochrana","ocitnout","odboj","odbyt","odchod","odcizit","odebrat","odeslat","odevzdat","odezva","odhadce","odhodit","odjet","odjinud","odkaz","odkoupit","odliv","odluka","odmlka","odolnost","odpad","odpis","odplout","odpor","odpustit","odpykat","odrazka","odsoudit","odstup","odsun","odtok","odtud","odvaha","odveta","odvolat","odvracet","odznak","ofina","ofsajd","ohlas","ohnisko","ohrada","ohrozit","ohryzek","okap","okenice","oklika","okno","okouzlit","okovy","okrasa","okres","okrsek","okruh","okupant","okurka","okusit","olejnina","olizovat","omak","omeleta","omezit","omladina","omlouvat","omluva","omyl","onehdy","opakovat","opasek","operace","opice","opilost","opisovat","opora","opozice","opravdu","oproti","orbital","orchestr","orgie","orlice","orloj","ortel","osada","oschnout","osika","osivo","oslava","oslepit","oslnit","oslovit","osnova","osoba","osolit","ospalec","osten","ostraha","ostuda","ostych","osvojit","oteplit","otisk","otop","otrhat","otrlost","otrok","otruby","otvor","ovanout","ovar","oves","ovlivnit","ovoce","oxid","ozdoba","pachatel","pacient","padouch","pahorek","pakt","palanda","palec","palivo","paluba","pamflet","pamlsek","panenka","panika","panna","panovat","panstvo","pantofle","paprika","parketa","parodie","parta","paruka","paryba","paseka","pasivita","pastelka","patent","patrona","pavouk","pazneht","pazourek","pecka","pedagog","pejsek","peklo","peloton","penalta","pendrek","penze","periskop","pero","pestrost","petarda","petice","petrolej","pevnina","pexeso","pianista","piha","pijavice","pikle","piknik","pilina","pilnost","pilulka","pinzeta","pipeta","pisatel","pistole","pitevna","pivnice","pivovar","placenta","plakat","plamen","planeta","plastika","platit","plavidlo","plaz","plech","plemeno","plenta","ples","pletivo","plevel","plivat","plnit","plno","plocha","plodina","plomba","plout","pluk","plyn","pobavit","pobyt","pochod","pocit","poctivec","podat","podcenit","podepsat","podhled","podivit","podklad","podmanit","podnik","podoba","podpora","podraz","podstata","podvod","podzim","poezie","pohanka","pohnutka","pohovor","pohroma","pohyb","pointa","pojistka","pojmout","pokazit","pokles","pokoj","pokrok","pokuta","pokyn","poledne","polibek","polknout","poloha","polynom","pomalu","pominout","pomlka","pomoc","pomsta","pomyslet","ponechat","ponorka","ponurost","popadat","popel","popisek","poplach","poprosit","popsat","popud","poradce","porce","porod","porucha","poryv","posadit","posed","posila","poskok","poslanec","posoudit","pospolu","postava","posudek","posyp","potah","potkan","potlesk","potomek","potrava","potupa","potvora","poukaz","pouto","pouzdro","povaha","povidla","povlak","povoz","povrch","povstat","povyk","povzdech","pozdrav","pozemek","poznatek","pozor","pozvat","pracovat","prahory","praktika","prales","praotec","praporek","prase","pravda","princip","prkno","probudit","procento","prodej","profese","prohra","projekt","prolomit","promile","pronikat","propad","prorok","prosba","proton","proutek","provaz","prskavka","prsten","prudkost","prut","prvek","prvohory","psanec","psovod","pstruh","ptactvo","puberta","puch","pudl","pukavec","puklina","pukrle","pult","pumpa","punc","pupen","pusa","pusinka","pustina","putovat","putyka","pyramida","pysk","pytel","racek","rachot","radiace","radnice","radon","raft","ragby","raketa","rakovina","rameno","rampouch","rande","rarach","rarita","rasovna","rastr","ratolest","razance","razidlo","reagovat","reakce","recept","redaktor","referent","reflex","rejnok","reklama","rekord","rekrut","rektor","reputace","revize","revma","revolver","rezerva","riskovat","riziko","robotika","rodokmen","rohovka","rokle","rokoko","romaneto","ropovod","ropucha","rorejs","rosol","rostlina","rotmistr","rotoped","rotunda","roubenka","roucho","roup","roura","rovina","rovnice","rozbor","rozchod","rozdat","rozeznat","rozhodce","rozinka","rozjezd","rozkaz","rozloha","rozmar","rozpad","rozruch","rozsah","roztok","rozum","rozvod","rubrika","ruchadlo","rukavice","rukopis","ryba","rybolov","rychlost","rydlo","rypadlo","rytina","ryzost","sadista","sahat","sako","samec","samizdat","samota","sanitka","sardinka","sasanka","satelit","sazba","sazenice","sbor","schovat","sebranka","secese","sedadlo","sediment","sedlo","sehnat","sejmout","sekera","sekta","sekunda","sekvoje","semeno","seno","servis","sesadit","seshora","seskok","seslat","sestra","sesuv","sesypat","setba","setina","setkat","setnout","setrvat","sever","seznam","shoda","shrnout","sifon","silnice","sirka","sirotek","sirup","situace","skafandr","skalisko","skanzen","skaut","skeptik","skica","skladba","sklenice","sklo","skluz","skoba","skokan","skoro","skripta","skrz","skupina","skvost","skvrna","slabika","sladidlo","slanina","slast","slavnost","sledovat","slepec","sleva","slezina","slib","slina","sliznice","slon","sloupek","slovo","sluch","sluha","slunce","slupka","slza","smaragd","smetana","smilstvo","smlouva","smog","smrad","smrk","smrtka","smutek","smysl","snad","snaha","snob","sobota","socha","sodovka","sokol","sopka","sotva","souboj","soucit","soudce","souhlas","soulad","soumrak","souprava","soused","soutok","souviset","spalovna","spasitel","spis","splav","spodek","spojenec","spolu","sponzor","spornost","spousta","sprcha","spustit","sranda","sraz","srdce","srna","srnec","srovnat","srpen","srst","srub","stanice","starosta","statika","stavba","stehno","stezka","stodola","stolek","stopa","storno","stoupat","strach","stres","strhnout","strom","struna","studna","stupnice","stvol","styk","subjekt","subtropy","suchar","sudost","sukno","sundat","sunout","surikata","surovina","svah","svalstvo","svetr","svatba","svazek","svisle","svitek","svoboda","svodidlo","svorka","svrab","sykavka","sykot","synek","synovec","sypat","sypkost","syrovost","sysel","sytost","tabletka","tabule","tahoun","tajemno","tajfun","tajga","tajit","tajnost","taktika","tamhle","tampon","tancovat","tanec","tanker","tapeta","tavenina","tazatel","technika","tehdy","tekutina","telefon","temnota","tendence","tenista","tenor","teplota","tepna","teprve","terapie","termoska","textil","ticho","tiskopis","titulek","tkadlec","tkanina","tlapka","tleskat","tlukot","tlupa","tmel","toaleta","topinka","topol","torzo","touha","toulec","tradice","traktor","tramp","trasa","traverza","trefit","trest","trezor","trhavina","trhlina","trochu","trojice","troska","trouba","trpce","trpitel","trpkost","trubec","truchlit","truhlice","trus","trvat","tudy","tuhnout","tuhost","tundra","turista","turnaj","tuzemsko","tvaroh","tvorba","tvrdost","tvrz","tygr","tykev","ubohost","uboze","ubrat","ubrousek","ubrus","ubytovna","ucho","uctivost","udivit","uhradit","ujednat","ujistit","ujmout","ukazatel","uklidnit","uklonit","ukotvit","ukrojit","ulice","ulita","ulovit","umyvadlo","unavit","uniforma","uniknout","upadnout","uplatnit","uplynout","upoutat","upravit","uran","urazit","usednout","usilovat","usmrtit","usnadnit","usnout","usoudit","ustlat","ustrnout","utahovat","utkat","utlumit","utonout","utopenec","utrousit","uvalit","uvolnit","uvozovka","uzdravit","uzel","uzenina","uzlina","uznat","vagon","valcha","valoun","vana","vandal","vanilka","varan","varhany","varovat","vcelku","vchod","vdova","vedro","vegetace","vejce","velbloud","veletrh","velitel","velmoc","velryba","venkov","veranda","verze","veselka","veskrze","vesnice","vespodu","vesta","veterina","veverka","vibrace","vichr","videohra","vidina","vidle","vila","vinice","viset","vitalita","vize","vizitka","vjezd","vklad","vkus","vlajka","vlak","vlasec","vlevo","vlhkost","vliv","vlnovka","vloupat","vnucovat","vnuk","voda","vodivost","vodoznak","vodstvo","vojensky","vojna","vojsko","volant","volba","volit","volno","voskovka","vozidlo","vozovna","vpravo","vrabec","vracet","vrah","vrata","vrba","vrcholek","vrhat","vrstva","vrtule","vsadit","vstoupit","vstup","vtip","vybavit","vybrat","vychovat","vydat","vydra","vyfotit","vyhledat","vyhnout","vyhodit","vyhradit","vyhubit","vyjasnit","vyjet","vyjmout","vyklopit","vykonat","vylekat","vymazat","vymezit","vymizet","vymyslet","vynechat","vynikat","vynutit","vypadat","vyplatit","vypravit","vypustit","vyrazit","vyrovnat","vyrvat","vyslovit","vysoko","vystavit","vysunout","vysypat","vytasit","vytesat","vytratit","vyvinout","vyvolat","vyvrhel","vyzdobit","vyznat","vzadu","vzbudit","vzchopit","vzdor","vzduch","vzdychat","vzestup","vzhledem","vzkaz","vzlykat","vznik","vzorek","vzpoura","vztah","vztek","xylofon","zabrat","zabydlet","zachovat","zadarmo","zadusit","zafoukat","zahltit","zahodit","zahrada","zahynout","zajatec","zajet","zajistit","zaklepat","zakoupit","zalepit","zamezit","zamotat","zamyslet","zanechat","zanikat","zaplatit","zapojit","zapsat","zarazit","zastavit","zasunout","zatajit","zatemnit","zatknout","zaujmout","zavalit","zavelet","zavinit","zavolat","zavrtat","zazvonit","zbavit","zbrusu","zbudovat","zbytek","zdaleka","zdarma","zdatnost","zdivo","zdobit","zdroj","zdvih","zdymadlo","zelenina","zeman","zemina","zeptat","zezadu","zezdola","zhatit","zhltnout","zhluboka","zhotovit","zhruba","zima","zimnice","zjemnit","zklamat","zkoumat","zkratka","zkumavka","zlato","zlehka","zloba","zlom","zlost","zlozvyk","zmapovat","zmar","zmatek","zmije","zmizet","zmocnit","zmodrat","zmrzlina","zmutovat","znak","znalost","znamenat","znovu","zobrazit","zotavit","zoubek","zoufale","zplodit","zpomalit","zprava","zprostit","zprudka","zprvu","zrada","zranit","zrcadlo","zrnitost","zrno","zrovna","zrychlit","zrzavost","zticha","ztratit","zubovina","zubr","zvednout","zvenku","zvesela","zvon","zvrat","zvukovod","zvyk"]'),Hc=JSON.parse('["的","一","是","在","不","了","有","和","人","这","中","大","为","上","个","国","我","以","要","他","时","来","用","们","生","到","作","地","于","出","就","分","对","成","会","可","主","发","年","动","同","工","也","能","下","过","子","说","产","种","面","而","方","后","多","定","行","学","法","所","民","得","经","十","三","之","进","着","等","部","度","家","电","力","里","如","水","化","高","自","二","理","起","小","物","现","实","加","量","都","两","体","制","机","当","使","点","从","业","本","去","把","性","好","应","开","它","合","还","因","由","其","些","然","前","外","天","政","四","日","那","社","义","事","平","形","相","全","表","间","样","与","关","各","重","新","线","内","数","正","心","反","你","明","看","原","又","么","利","比","或","但","质","气","第","向","道","命","此","变","条","只","没","结","解","问","意","建","月","公","无","系","军","很","情","者","最","立","代","想","已","通","并","提","直","题","党","程","展","五","果","料","象","员","革","位","入","常","文","总","次","品","式","活","设","及","管","特","件","长","求","老","头","基","资","边","流","路","级","少","图","山","统","接","知","较","将","组","见","计","别","她","手","角","期","根","论","运","农","指","几","九","区","强","放","决","西","被","干","做","必","战","先","回","则","任","取","据","处","队","南","给","色","光","门","即","保","治","北","造","百","规","热","领","七","海","口","东","导","器","压","志","世","金","增","争","济","阶","油","思","术","极","交","受","联","什","认","六","共","权","收","证","改","清","美","再","采","转","更","单","风","切","打","白","教","速","花","带","安","场","身","车","例","真","务","具","万","每","目","至","达","走","积","示","议","声","报","斗","完","类","八","离","华","名","确","才","科","张","信","马","节","话","米","整","空","元","况","今","集","温","传","土","许","步","群","广","石","记","需","段","研","界","拉","林","律","叫","且","究","观","越","织","装","影","算","低","持","音","众","书","布","复","容","儿","须","际","商","非","验","连","断","深","难","近","矿","千","周","委","素","技","备","半","办","青","省","列","习","响","约","支","般","史","感","劳","便","团","往","酸","历","市","克","何","除","消","构","府","称","太","准","精","值","号","率","族","维","划","选","标","写","存","候","毛","亲","快","效","斯","院","查","江","型","眼","王","按","格","养","易","置","派","层","片","始","却","专","状","育","厂","京","识","适","属","圆","包","火","住","调","满","县","局","照","参","红","细","引","听","该","铁","价","严","首","底","液","官","德","随","病","苏","失","尔","死","讲","配","女","黄","推","显","谈","罪","神","艺","呢","席","含","企","望","密","批","营","项","防","举","球","英","氧","势","告","李","台","落","木","帮","轮","破","亚","师","围","注","远","字","材","排","供","河","态","封","另","施","减","树","溶","怎","止","案","言","士","均","武","固","叶","鱼","波","视","仅","费","紧","爱","左","章","早","朝","害","续","轻","服","试","食","充","兵","源","判","护","司","足","某","练","差","致","板","田","降","黑","犯","负","击","范","继","兴","似","余","坚","曲","输","修","故","城","夫","够","送","笔","船","占","右","财","吃","富","春","职","觉","汉","画","功","巴","跟","虽","杂","飞","检","吸","助","升","阳","互","初","创","抗","考","投","坏","策","古","径","换","未","跑","留","钢","曾","端","责","站","简","述","钱","副","尽","帝","射","草","冲","承","独","令","限","阿","宣","环","双","请","超","微","让","控","州","良","轴","找","否","纪","益","依","优","顶","础","载","倒","房","突","坐","粉","敌","略","客","袁","冷","胜","绝","析","块","剂","测","丝","协","诉","念","陈","仍","罗","盐","友","洋","错","苦","夜","刑","移","频","逐","靠","混","母","短","皮","终","聚","汽","村","云","哪","既","距","卫","停","烈","央","察","烧","迅","境","若","印","洲","刻","括","激","孔","搞","甚","室","待","核","校","散","侵","吧","甲","游","久","菜","味","旧","模","湖","货","损","预","阻","毫","普","稳","乙","妈","植","息","扩","银","语","挥","酒","守","拿","序","纸","医","缺","雨","吗","针","刘","啊","急","唱","误","训","愿","审","附","获","茶","鲜","粮","斤","孩","脱","硫","肥","善","龙","演","父","渐","血","欢","械","掌","歌","沙","刚","攻","谓","盾","讨","晚","粒","乱","燃","矛","乎","杀","药","宁","鲁","贵","钟","煤","读","班","伯","香","介","迫","句","丰","培","握","兰","担","弦","蛋","沉","假","穿","执","答","乐","谁","顺","烟","缩","征","脸","喜","松","脚","困","异","免","背","星","福","买","染","井","概","慢","怕","磁","倍","祖","皇","促","静","补","评","翻","肉","践","尼","衣","宽","扬","棉","希","伤","操","垂","秋","宜","氢","套","督","振","架","亮","末","宪","庆","编","牛","触","映","雷","销","诗","座","居","抓","裂","胞","呼","娘","景","威","绿","晶","厚","盟","衡","鸡","孙","延","危","胶","屋","乡","临","陆","顾","掉","呀","灯","岁","措","束","耐","剧","玉","赵","跳","哥","季","课","凯","胡","额","款","绍","卷","齐","伟","蒸","殖","永","宗","苗","川","炉","岩","弱","零","杨","奏","沿","露","杆","探","滑","镇","饭","浓","航","怀","赶","库","夺","伊","灵","税","途","灭","赛","归","召","鼓","播","盘","裁","险","康","唯","录","菌","纯","借","糖","盖","横","符","私","努","堂","域","枪","润","幅","哈","竟","熟","虫","泽","脑","壤","碳","欧","遍","侧","寨","敢","彻","虑","斜","薄","庭","纳","弹","饲","伸","折","麦","湿","暗","荷","瓦","塞","床","筑","恶","户","访","塔","奇","透","梁","刀","旋","迹","卡","氯","遇","份","毒","泥","退","洗","摆","灰","彩","卖","耗","夏","择","忙","铜","献","硬","予","繁","圈","雪","函","亦","抽","篇","阵","阴","丁","尺","追","堆","雄","迎","泛","爸","楼","避","谋","吨","野","猪","旗","累","偏","典","馆","索","秦","脂","潮","爷","豆","忽","托","惊","塑","遗","愈","朱","替","纤","粗","倾","尚","痛","楚","谢","奋","购","磨","君","池","旁","碎","骨","监","捕","弟","暴","割","贯","殊","释","词","亡","壁","顿","宝","午","尘","闻","揭","炮","残","冬","桥","妇","警","综","招","吴","付","浮","遭","徐","您","摇","谷","赞","箱","隔","订","男","吹","园","纷","唐","败","宋","玻","巨","耕","坦","荣","闭","湾","键","凡","驻","锅","救","恩","剥","凝","碱","齿","截","炼","麻","纺","禁","废","盛","版","缓","净","睛","昌","婚","涉","筒","嘴","插","岸","朗","庄","街","藏","姑","贸","腐","奴","啦","惯","乘","伙","恢","匀","纱","扎","辩","耳","彪","臣","亿","璃","抵","脉","秀","萨","俄","网","舞","店","喷","纵","寸","汗","挂","洪","贺","闪","柬","爆","烯","津","稻","墙","软","勇","像","滚","厘","蒙","芳","肯","坡","柱","荡","腿","仪","旅","尾","轧","冰","贡","登","黎","削","钻","勒","逃","障","氨","郭","峰","币","港","伏","轨","亩","毕","擦","莫","刺","浪","秘","援","株","健","售","股","岛","甘","泡","睡","童","铸","汤","阀","休","汇","舍","牧","绕","炸","哲","磷","绩","朋","淡","尖","启","陷","柴","呈","徒","颜","泪","稍","忘","泵","蓝","拖","洞","授","镜","辛","壮","锋","贫","虚","弯","摩","泰","幼","廷","尊","窗","纲","弄","隶","疑","氏","宫","姐","震","瑞","怪","尤","琴","循","描","膜","违","夹","腰","缘","珠","穷","森","枝","竹","沟","催","绳","忆","邦","剩","幸","浆","栏","拥","牙","贮","礼","滤","钠","纹","罢","拍","咱","喊","袖","埃","勤","罚","焦","潜","伍","墨","欲","缝","姓","刊","饱","仿","奖","铝","鬼","丽","跨","默","挖","链","扫","喝","袋","炭","污","幕","诸","弧","励","梅","奶","洁","灾","舟","鉴","苯","讼","抱","毁","懂","寒","智","埔","寄","届","跃","渡","挑","丹","艰","贝","碰","拔","爹","戴","码","梦","芽","熔","赤","渔","哭","敬","颗","奔","铅","仲","虎","稀","妹","乏","珍","申","桌","遵","允","隆","螺","仓","魏","锐","晓","氮","兼","隐","碍","赫","拨","忠","肃","缸","牵","抢","博","巧","壳","兄","杜","讯","诚","碧","祥","柯","页","巡","矩","悲","灌","龄","伦","票","寻","桂","铺","圣","恐","恰","郑","趣","抬","荒","腾","贴","柔","滴","猛","阔","辆","妻","填","撤","储","签","闹","扰","紫","砂","递","戏","吊","陶","伐","喂","疗","瓶","婆","抚","臂","摸","忍","虾","蜡","邻","胸","巩","挤","偶","弃","槽","劲","乳","邓","吉","仁","烂","砖","租","乌","舰","伴","瓜","浅","丙","暂","燥","橡","柳","迷","暖","牌","秧","胆","详","簧","踏","瓷","谱","呆","宾","糊","洛","辉","愤","竞","隙","怒","粘","乃","绪","肩","籍","敏","涂","熙","皆","侦","悬","掘","享","纠","醒","狂","锁","淀","恨","牲","霸","爬","赏","逆","玩","陵","祝","秒","浙","貌","役","彼","悉","鸭","趋","凤","晨","畜","辈","秩","卵","署","梯","炎","滩","棋","驱","筛","峡","冒","啥","寿","译","浸","泉","帽","迟","硅","疆","贷","漏","稿","冠","嫩","胁","芯","牢","叛","蚀","奥","鸣","岭","羊","凭","串","塘","绘","酵","融","盆","锡","庙","筹","冻","辅","摄","袭","筋","拒","僚","旱","钾","鸟","漆","沈","眉","疏","添","棒","穗","硝","韩","逼","扭","侨","凉","挺","碗","栽","炒","杯","患","馏","劝","豪","辽","勃","鸿","旦","吏","拜","狗","埋","辊","掩","饮","搬","骂","辞","勾","扣","估","蒋","绒","雾","丈","朵","姆","拟","宇","辑","陕","雕","偿","蓄","崇","剪","倡","厅","咬","驶","薯","刷","斥","番","赋","奉","佛","浇","漫","曼","扇","钙","桃","扶","仔","返","俗","亏","腔","鞋","棱","覆","框","悄","叔","撞","骗","勘","旺","沸","孤","吐","孟","渠","屈","疾","妙","惜","仰","狠","胀","谐","抛","霉","桑","岗","嘛","衰","盗","渗","脏","赖","涌","甜","曹","阅","肌","哩","厉","烃","纬","毅","昨","伪","症","煮","叹","钉","搭","茎","笼","酷","偷","弓","锥","恒","杰","坑","鼻","翼","纶","叙","狱","逮","罐","络","棚","抑","膨","蔬","寺","骤","穆","冶","枯","册","尸","凸","绅","坯","牺","焰","轰","欣","晋","瘦","御","锭","锦","丧","旬","锻","垄","搜","扑","邀","亭","酯","迈","舒","脆","酶","闲","忧","酚","顽","羽","涨","卸","仗","陪","辟","惩","杭","姚","肚","捉","飘","漂","昆","欺","吾","郎","烷","汁","呵","饰","萧","雅","邮","迁","燕","撒","姻","赴","宴","烦","债","帐","斑","铃","旨","醇","董","饼","雏","姿","拌","傅","腹","妥","揉","贤","拆","歪","葡","胺","丢","浩","徽","昂","垫","挡","览","贪","慰","缴","汪","慌","冯","诺","姜","谊","凶","劣","诬","耀","昏","躺","盈","骑","乔","溪","丛","卢","抹","闷","咨","刮","驾","缆","悟","摘","铒","掷","颇","幻","柄","惠","惨","佳","仇","腊","窝","涤","剑","瞧","堡","泼","葱","罩","霍","捞","胎","苍","滨","俩","捅","湘","砍","霞","邵","萄","疯","淮","遂","熊","粪","烘","宿","档","戈","驳","嫂","裕","徙","箭","捐","肠","撑","晒","辨","殿","莲","摊","搅","酱","屏","疫","哀","蔡","堵","沫","皱","畅","叠","阁","莱","敲","辖","钩","痕","坝","巷","饿","祸","丘","玄","溜","曰","逻","彭","尝","卿","妨","艇","吞","韦","怨","矮","歇"]'),Ic=JSON.parse('["的","一","是","在","不","了","有","和","人","這","中","大","為","上","個","國","我","以","要","他","時","來","用","們","生","到","作","地","於","出","就","分","對","成","會","可","主","發","年","動","同","工","也","能","下","過","子","說","產","種","面","而","方","後","多","定","行","學","法","所","民","得","經","十","三","之","進","著","等","部","度","家","電","力","裡","如","水","化","高","自","二","理","起","小","物","現","實","加","量","都","兩","體","制","機","當","使","點","從","業","本","去","把","性","好","應","開","它","合","還","因","由","其","些","然","前","外","天","政","四","日","那","社","義","事","平","形","相","全","表","間","樣","與","關","各","重","新","線","內","數","正","心","反","你","明","看","原","又","麼","利","比","或","但","質","氣","第","向","道","命","此","變","條","只","沒","結","解","問","意","建","月","公","無","系","軍","很","情","者","最","立","代","想","已","通","並","提","直","題","黨","程","展","五","果","料","象","員","革","位","入","常","文","總","次","品","式","活","設","及","管","特","件","長","求","老","頭","基","資","邊","流","路","級","少","圖","山","統","接","知","較","將","組","見","計","別","她","手","角","期","根","論","運","農","指","幾","九","區","強","放","決","西","被","幹","做","必","戰","先","回","則","任","取","據","處","隊","南","給","色","光","門","即","保","治","北","造","百","規","熱","領","七","海","口","東","導","器","壓","志","世","金","增","爭","濟","階","油","思","術","極","交","受","聯","什","認","六","共","權","收","證","改","清","美","再","採","轉","更","單","風","切","打","白","教","速","花","帶","安","場","身","車","例","真","務","具","萬","每","目","至","達","走","積","示","議","聲","報","鬥","完","類","八","離","華","名","確","才","科","張","信","馬","節","話","米","整","空","元","況","今","集","溫","傳","土","許","步","群","廣","石","記","需","段","研","界","拉","林","律","叫","且","究","觀","越","織","裝","影","算","低","持","音","眾","書","布","复","容","兒","須","際","商","非","驗","連","斷","深","難","近","礦","千","週","委","素","技","備","半","辦","青","省","列","習","響","約","支","般","史","感","勞","便","團","往","酸","歷","市","克","何","除","消","構","府","稱","太","準","精","值","號","率","族","維","劃","選","標","寫","存","候","毛","親","快","效","斯","院","查","江","型","眼","王","按","格","養","易","置","派","層","片","始","卻","專","狀","育","廠","京","識","適","屬","圓","包","火","住","調","滿","縣","局","照","參","紅","細","引","聽","該","鐵","價","嚴","首","底","液","官","德","隨","病","蘇","失","爾","死","講","配","女","黃","推","顯","談","罪","神","藝","呢","席","含","企","望","密","批","營","項","防","舉","球","英","氧","勢","告","李","台","落","木","幫","輪","破","亞","師","圍","注","遠","字","材","排","供","河","態","封","另","施","減","樹","溶","怎","止","案","言","士","均","武","固","葉","魚","波","視","僅","費","緊","愛","左","章","早","朝","害","續","輕","服","試","食","充","兵","源","判","護","司","足","某","練","差","致","板","田","降","黑","犯","負","擊","范","繼","興","似","餘","堅","曲","輸","修","故","城","夫","夠","送","筆","船","佔","右","財","吃","富","春","職","覺","漢","畫","功","巴","跟","雖","雜","飛","檢","吸","助","昇","陽","互","初","創","抗","考","投","壞","策","古","徑","換","未","跑","留","鋼","曾","端","責","站","簡","述","錢","副","盡","帝","射","草","衝","承","獨","令","限","阿","宣","環","雙","請","超","微","讓","控","州","良","軸","找","否","紀","益","依","優","頂","礎","載","倒","房","突","坐","粉","敵","略","客","袁","冷","勝","絕","析","塊","劑","測","絲","協","訴","念","陳","仍","羅","鹽","友","洋","錯","苦","夜","刑","移","頻","逐","靠","混","母","短","皮","終","聚","汽","村","雲","哪","既","距","衛","停","烈","央","察","燒","迅","境","若","印","洲","刻","括","激","孔","搞","甚","室","待","核","校","散","侵","吧","甲","遊","久","菜","味","舊","模","湖","貨","損","預","阻","毫","普","穩","乙","媽","植","息","擴","銀","語","揮","酒","守","拿","序","紙","醫","缺","雨","嗎","針","劉","啊","急","唱","誤","訓","願","審","附","獲","茶","鮮","糧","斤","孩","脫","硫","肥","善","龍","演","父","漸","血","歡","械","掌","歌","沙","剛","攻","謂","盾","討","晚","粒","亂","燃","矛","乎","殺","藥","寧","魯","貴","鐘","煤","讀","班","伯","香","介","迫","句","豐","培","握","蘭","擔","弦","蛋","沉","假","穿","執","答","樂","誰","順","煙","縮","徵","臉","喜","松","腳","困","異","免","背","星","福","買","染","井","概","慢","怕","磁","倍","祖","皇","促","靜","補","評","翻","肉","踐","尼","衣","寬","揚","棉","希","傷","操","垂","秋","宜","氫","套","督","振","架","亮","末","憲","慶","編","牛","觸","映","雷","銷","詩","座","居","抓","裂","胞","呼","娘","景","威","綠","晶","厚","盟","衡","雞","孫","延","危","膠","屋","鄉","臨","陸","顧","掉","呀","燈","歲","措","束","耐","劇","玉","趙","跳","哥","季","課","凱","胡","額","款","紹","卷","齊","偉","蒸","殖","永","宗","苗","川","爐","岩","弱","零","楊","奏","沿","露","桿","探","滑","鎮","飯","濃","航","懷","趕","庫","奪","伊","靈","稅","途","滅","賽","歸","召","鼓","播","盤","裁","險","康","唯","錄","菌","純","借","糖","蓋","橫","符","私","努","堂","域","槍","潤","幅","哈","竟","熟","蟲","澤","腦","壤","碳","歐","遍","側","寨","敢","徹","慮","斜","薄","庭","納","彈","飼","伸","折","麥","濕","暗","荷","瓦","塞","床","築","惡","戶","訪","塔","奇","透","梁","刀","旋","跡","卡","氯","遇","份","毒","泥","退","洗","擺","灰","彩","賣","耗","夏","擇","忙","銅","獻","硬","予","繁","圈","雪","函","亦","抽","篇","陣","陰","丁","尺","追","堆","雄","迎","泛","爸","樓","避","謀","噸","野","豬","旗","累","偏","典","館","索","秦","脂","潮","爺","豆","忽","托","驚","塑","遺","愈","朱","替","纖","粗","傾","尚","痛","楚","謝","奮","購","磨","君","池","旁","碎","骨","監","捕","弟","暴","割","貫","殊","釋","詞","亡","壁","頓","寶","午","塵","聞","揭","炮","殘","冬","橋","婦","警","綜","招","吳","付","浮","遭","徐","您","搖","谷","贊","箱","隔","訂","男","吹","園","紛","唐","敗","宋","玻","巨","耕","坦","榮","閉","灣","鍵","凡","駐","鍋","救","恩","剝","凝","鹼","齒","截","煉","麻","紡","禁","廢","盛","版","緩","淨","睛","昌","婚","涉","筒","嘴","插","岸","朗","莊","街","藏","姑","貿","腐","奴","啦","慣","乘","夥","恢","勻","紗","扎","辯","耳","彪","臣","億","璃","抵","脈","秀","薩","俄","網","舞","店","噴","縱","寸","汗","掛","洪","賀","閃","柬","爆","烯","津","稻","牆","軟","勇","像","滾","厘","蒙","芳","肯","坡","柱","盪","腿","儀","旅","尾","軋","冰","貢","登","黎","削","鑽","勒","逃","障","氨","郭","峰","幣","港","伏","軌","畝","畢","擦","莫","刺","浪","秘","援","株","健","售","股","島","甘","泡","睡","童","鑄","湯","閥","休","匯","舍","牧","繞","炸","哲","磷","績","朋","淡","尖","啟","陷","柴","呈","徒","顏","淚","稍","忘","泵","藍","拖","洞","授","鏡","辛","壯","鋒","貧","虛","彎","摩","泰","幼","廷","尊","窗","綱","弄","隸","疑","氏","宮","姐","震","瑞","怪","尤","琴","循","描","膜","違","夾","腰","緣","珠","窮","森","枝","竹","溝","催","繩","憶","邦","剩","幸","漿","欄","擁","牙","貯","禮","濾","鈉","紋","罷","拍","咱","喊","袖","埃","勤","罰","焦","潛","伍","墨","欲","縫","姓","刊","飽","仿","獎","鋁","鬼","麗","跨","默","挖","鏈","掃","喝","袋","炭","污","幕","諸","弧","勵","梅","奶","潔","災","舟","鑑","苯","訟","抱","毀","懂","寒","智","埔","寄","屆","躍","渡","挑","丹","艱","貝","碰","拔","爹","戴","碼","夢","芽","熔","赤","漁","哭","敬","顆","奔","鉛","仲","虎","稀","妹","乏","珍","申","桌","遵","允","隆","螺","倉","魏","銳","曉","氮","兼","隱","礙","赫","撥","忠","肅","缸","牽","搶","博","巧","殼","兄","杜","訊","誠","碧","祥","柯","頁","巡","矩","悲","灌","齡","倫","票","尋","桂","鋪","聖","恐","恰","鄭","趣","抬","荒","騰","貼","柔","滴","猛","闊","輛","妻","填","撤","儲","簽","鬧","擾","紫","砂","遞","戲","吊","陶","伐","餵","療","瓶","婆","撫","臂","摸","忍","蝦","蠟","鄰","胸","鞏","擠","偶","棄","槽","勁","乳","鄧","吉","仁","爛","磚","租","烏","艦","伴","瓜","淺","丙","暫","燥","橡","柳","迷","暖","牌","秧","膽","詳","簧","踏","瓷","譜","呆","賓","糊","洛","輝","憤","競","隙","怒","粘","乃","緒","肩","籍","敏","塗","熙","皆","偵","懸","掘","享","糾","醒","狂","鎖","淀","恨","牲","霸","爬","賞","逆","玩","陵","祝","秒","浙","貌","役","彼","悉","鴨","趨","鳳","晨","畜","輩","秩","卵","署","梯","炎","灘","棋","驅","篩","峽","冒","啥","壽","譯","浸","泉","帽","遲","矽","疆","貸","漏","稿","冠","嫩","脅","芯","牢","叛","蝕","奧","鳴","嶺","羊","憑","串","塘","繪","酵","融","盆","錫","廟","籌","凍","輔","攝","襲","筋","拒","僚","旱","鉀","鳥","漆","沈","眉","疏","添","棒","穗","硝","韓","逼","扭","僑","涼","挺","碗","栽","炒","杯","患","餾","勸","豪","遼","勃","鴻","旦","吏","拜","狗","埋","輥","掩","飲","搬","罵","辭","勾","扣","估","蔣","絨","霧","丈","朵","姆","擬","宇","輯","陝","雕","償","蓄","崇","剪","倡","廳","咬","駛","薯","刷","斥","番","賦","奉","佛","澆","漫","曼","扇","鈣","桃","扶","仔","返","俗","虧","腔","鞋","棱","覆","框","悄","叔","撞","騙","勘","旺","沸","孤","吐","孟","渠","屈","疾","妙","惜","仰","狠","脹","諧","拋","黴","桑","崗","嘛","衰","盜","滲","臟","賴","湧","甜","曹","閱","肌","哩","厲","烴","緯","毅","昨","偽","症","煮","嘆","釘","搭","莖","籠","酷","偷","弓","錐","恆","傑","坑","鼻","翼","綸","敘","獄","逮","罐","絡","棚","抑","膨","蔬","寺","驟","穆","冶","枯","冊","屍","凸","紳","坯","犧","焰","轟","欣","晉","瘦","禦","錠","錦","喪","旬","鍛","壟","搜","撲","邀","亭","酯","邁","舒","脆","酶","閒","憂","酚","頑","羽","漲","卸","仗","陪","闢","懲","杭","姚","肚","捉","飄","漂","昆","欺","吾","郎","烷","汁","呵","飾","蕭","雅","郵","遷","燕","撒","姻","赴","宴","煩","債","帳","斑","鈴","旨","醇","董","餅","雛","姿","拌","傅","腹","妥","揉","賢","拆","歪","葡","胺","丟","浩","徽","昂","墊","擋","覽","貪","慰","繳","汪","慌","馮","諾","姜","誼","兇","劣","誣","耀","昏","躺","盈","騎","喬","溪","叢","盧","抹","悶","諮","刮","駕","纜","悟","摘","鉺","擲","頗","幻","柄","惠","慘","佳","仇","臘","窩","滌","劍","瞧","堡","潑","蔥","罩","霍","撈","胎","蒼","濱","倆","捅","湘","砍","霞","邵","萄","瘋","淮","遂","熊","糞","烘","宿","檔","戈","駁","嫂","裕","徙","箭","捐","腸","撐","曬","辨","殿","蓮","攤","攪","醬","屏","疫","哀","蔡","堵","沫","皺","暢","疊","閣","萊","敲","轄","鉤","痕","壩","巷","餓","禍","丘","玄","溜","曰","邏","彭","嘗","卿","妨","艇","吞","韋","怨","矮","歇"]'),qc=JSON.parse('["가격","가끔","가난","가능","가득","가르침","가뭄","가방","가상","가슴","가운데","가을","가이드","가입","가장","가정","가족","가죽","각오","각자","간격","간부","간섭","간장","간접","간판","갈등","갈비","갈색","갈증","감각","감기","감소","감수성","감자","감정","갑자기","강남","강당","강도","강력히","강변","강북","강사","강수량","강아지","강원도","강의","강제","강조","같이","개구리","개나리","개방","개별","개선","개성","개인","객관적","거실","거액","거울","거짓","거품","걱정","건강","건물","건설","건조","건축","걸음","검사","검토","게시판","게임","겨울","견해","결과","결국","결론","결석","결승","결심","결정","결혼","경계","경고","경기","경력","경복궁","경비","경상도","경영","경우","경쟁","경제","경주","경찰","경치","경향","경험","계곡","계단","계란","계산","계속","계약","계절","계층","계획","고객","고구려","고궁","고급","고등학생","고무신","고민","고양이","고장","고전","고집","고춧가루","고통","고향","곡식","골목","골짜기","골프","공간","공개","공격","공군","공급","공기","공동","공무원","공부","공사","공식","공업","공연","공원","공장","공짜","공책","공통","공포","공항","공휴일","과목","과일","과장","과정","과학","관객","관계","관광","관념","관람","관련","관리","관습","관심","관점","관찰","광경","광고","광장","광주","괴로움","굉장히","교과서","교문","교복","교실","교양","교육","교장","교직","교통","교환","교훈","구경","구름","구멍","구별","구분","구석","구성","구속","구역","구입","구청","구체적","국가","국기","국내","국립","국물","국민","국수","국어","국왕","국적","국제","국회","군대","군사","군인","궁극적","권리","권위","권투","귀국","귀신","규정","규칙","균형","그날","그냥","그늘","그러나","그룹","그릇","그림","그제서야","그토록","극복","극히","근거","근교","근래","근로","근무","근본","근원","근육","근처","글씨","글자","금강산","금고","금년","금메달","금액","금연","금요일","금지","긍정적","기간","기관","기념","기능","기독교","기둥","기록","기름","기법","기본","기분","기쁨","기숙사","기술","기억","기업","기온","기운","기원","기적","기준","기침","기혼","기획","긴급","긴장","길이","김밥","김치","김포공항","깍두기","깜빡","깨달음","깨소금","껍질","꼭대기","꽃잎","나들이","나란히","나머지","나물","나침반","나흘","낙엽","난방","날개","날씨","날짜","남녀","남대문","남매","남산","남자","남편","남학생","낭비","낱말","내년","내용","내일","냄비","냄새","냇물","냉동","냉면","냉방","냉장고","넥타이","넷째","노동","노란색","노력","노인","녹음","녹차","녹화","논리","논문","논쟁","놀이","농구","농담","농민","농부","농업","농장","농촌","높이","눈동자","눈물","눈썹","뉴욕","느낌","늑대","능동적","능력","다방","다양성","다음","다이어트","다행","단계","단골","단독","단맛","단순","단어","단위","단점","단체","단추","단편","단풍","달걀","달러","달력","달리","닭고기","담당","담배","담요","담임","답변","답장","당근","당분간","당연히","당장","대규모","대낮","대단히","대답","대도시","대략","대량","대륙","대문","대부분","대신","대응","대장","대전","대접","대중","대책","대출","대충","대통령","대학","대한민국","대합실","대형","덩어리","데이트","도대체","도덕","도둑","도망","도서관","도심","도움","도입","도자기","도저히","도전","도중","도착","독감","독립","독서","독일","독창적","동화책","뒷모습","뒷산","딸아이","마누라","마늘","마당","마라톤","마련","마무리","마사지","마약","마요네즈","마을","마음","마이크","마중","마지막","마찬가지","마찰","마흔","막걸리","막내","막상","만남","만두","만세","만약","만일","만점","만족","만화","많이","말기","말씀","말투","맘대로","망원경","매년","매달","매력","매번","매스컴","매일","매장","맥주","먹이","먼저","먼지","멀리","메일","며느리","며칠","면담","멸치","명단","명령","명예","명의","명절","명칭","명함","모금","모니터","모델","모든","모범","모습","모양","모임","모조리","모집","모퉁이","목걸이","목록","목사","목소리","목숨","목적","목표","몰래","몸매","몸무게","몸살","몸속","몸짓","몸통","몹시","무관심","무궁화","무더위","무덤","무릎","무슨","무엇","무역","무용","무조건","무지개","무척","문구","문득","문법","문서","문제","문학","문화","물가","물건","물결","물고기","물론","물리학","물음","물질","물체","미국","미디어","미사일","미술","미역","미용실","미움","미인","미팅","미혼","민간","민족","민주","믿음","밀가루","밀리미터","밑바닥","바가지","바구니","바나나","바늘","바닥","바닷가","바람","바이러스","바탕","박물관","박사","박수","반대","반드시","반말","반발","반성","반응","반장","반죽","반지","반찬","받침","발가락","발걸음","발견","발달","발레","발목","발바닥","발생","발음","발자국","발전","발톱","발표","밤하늘","밥그릇","밥맛","밥상","밥솥","방금","방면","방문","방바닥","방법","방송","방식","방안","방울","방지","방학","방해","방향","배경","배꼽","배달","배드민턴","백두산","백색","백성","백인","백제","백화점","버릇","버섯","버튼","번개","번역","번지","번호","벌금","벌레","벌써","범위","범인","범죄","법률","법원","법적","법칙","베이징","벨트","변경","변동","변명","변신","변호사","변화","별도","별명","별일","병실","병아리","병원","보관","보너스","보라색","보람","보름","보상","보안","보자기","보장","보전","보존","보통","보편적","보험","복도","복사","복숭아","복습","볶음","본격적","본래","본부","본사","본성","본인","본질","볼펜","봉사","봉지","봉투","부근","부끄러움","부담","부동산","부문","부분","부산","부상","부엌","부인","부작용","부장","부정","부족","부지런히","부친","부탁","부품","부회장","북부","북한","분노","분량","분리","분명","분석","분야","분위기","분필","분홍색","불고기","불과","불교","불꽃","불만","불법","불빛","불안","불이익","불행","브랜드","비극","비난","비닐","비둘기","비디오","비로소","비만","비명","비밀","비바람","비빔밥","비상","비용","비율","비중","비타민","비판","빌딩","빗물","빗방울","빗줄기","빛깔","빨간색","빨래","빨리","사건","사계절","사나이","사냥","사람","사랑","사립","사모님","사물","사방","사상","사생활","사설","사슴","사실","사업","사용","사월","사장","사전","사진","사촌","사춘기","사탕","사투리","사흘","산길","산부인과","산업","산책","살림","살인","살짝","삼계탕","삼국","삼십","삼월","삼촌","상관","상금","상대","상류","상반기","상상","상식","상업","상인","상자","상점","상처","상추","상태","상표","상품","상황","새벽","색깔","색연필","생각","생명","생물","생방송","생산","생선","생신","생일","생활","서랍","서른","서명","서민","서비스","서양","서울","서적","서점","서쪽","서클","석사","석유","선거","선물","선배","선생","선수","선원","선장","선전","선택","선풍기","설거지","설날","설렁탕","설명","설문","설사","설악산","설치","설탕","섭씨","성공","성당","성명","성별","성인","성장","성적","성질","성함","세금","세미나","세상","세월","세종대왕","세탁","센터","센티미터","셋째","소규모","소극적","소금","소나기","소년","소득","소망","소문","소설","소속","소아과","소용","소원","소음","소중히","소지품","소질","소풍","소형","속담","속도","속옷","손가락","손길","손녀","손님","손등","손목","손뼉","손실","손질","손톱","손해","솔직히","솜씨","송아지","송이","송편","쇠고기","쇼핑","수건","수년","수단","수돗물","수동적","수면","수명","수박","수상","수석","수술","수시로","수업","수염","수영","수입","수준","수집","수출","수컷","수필","수학","수험생","수화기","숙녀","숙소","숙제","순간","순서","순수","순식간","순위","숟가락","술병","술집","숫자","스님","스물","스스로","스승","스웨터","스위치","스케이트","스튜디오","스트레스","스포츠","슬쩍","슬픔","습관","습기","승객","승리","승부","승용차","승진","시각","시간","시골","시금치","시나리오","시댁","시리즈","시멘트","시민","시부모","시선","시설","시스템","시아버지","시어머니","시월","시인","시일","시작","시장","시절","시점","시중","시즌","시집","시청","시합","시험","식구","식기","식당","식량","식료품","식물","식빵","식사","식생활","식초","식탁","식품","신고","신규","신념","신문","신발","신비","신사","신세","신용","신제품","신청","신체","신화","실감","실내","실력","실례","실망","실수","실습","실시","실장","실정","실질적","실천","실체","실컷","실태","실패","실험","실현","심리","심부름","심사","심장","심정","심판","쌍둥이","씨름","씨앗","아가씨","아나운서","아드님","아들","아쉬움","아스팔트","아시아","아울러","아저씨","아줌마","아직","아침","아파트","아프리카","아픔","아홉","아흔","악기","악몽","악수","안개","안경","안과","안내","안녕","안동","안방","안부","안주","알루미늄","알코올","암시","암컷","압력","앞날","앞문","애인","애정","액수","앨범","야간","야단","야옹","약간","약국","약속","약수","약점","약품","약혼녀","양념","양력","양말","양배추","양주","양파","어둠","어려움","어른","어젯밤","어쨌든","어쩌다가","어쩐지","언니","언덕","언론","언어","얼굴","얼른","얼음","얼핏","엄마","업무","업종","업체","엉덩이","엉망","엉터리","엊그제","에너지","에어컨","엔진","여건","여고생","여관","여군","여권","여대생","여덟","여동생","여든","여론","여름","여섯","여성","여왕","여인","여전히","여직원","여학생","여행","역사","역시","역할","연결","연구","연극","연기","연락","연설","연세","연속","연습","연애","연예인","연인","연장","연주","연출","연필","연합","연휴","열기","열매","열쇠","열심히","열정","열차","열흘","염려","엽서","영국","영남","영상","영양","영역","영웅","영원히","영하","영향","영혼","영화","옆구리","옆방","옆집","예감","예금","예방","예산","예상","예선","예술","예습","예식장","예약","예전","예절","예정","예컨대","옛날","오늘","오락","오랫동안","오렌지","오로지","오른발","오븐","오십","오염","오월","오전","오직","오징어","오페라","오피스텔","오히려","옥상","옥수수","온갖","온라인","온몸","온종일","온통","올가을","올림픽","올해","옷차림","와이셔츠","와인","완성","완전","왕비","왕자","왜냐하면","왠지","외갓집","외국","외로움","외삼촌","외출","외침","외할머니","왼발","왼손","왼쪽","요금","요일","요즘","요청","용기","용서","용어","우산","우선","우승","우연히","우정","우체국","우편","운동","운명","운반","운전","운행","울산","울음","움직임","웃어른","웃음","워낙","원고","원래","원서","원숭이","원인","원장","원피스","월급","월드컵","월세","월요일","웨이터","위반","위법","위성","위원","위험","위협","윗사람","유난히","유럽","유명","유물","유산","유적","유치원","유학","유행","유형","육군","육상","육십","육체","은행","음력","음료","음반","음성","음식","음악","음주","의견","의논","의문","의복","의식","의심","의외로","의욕","의원","의학","이것","이곳","이념","이놈","이달","이대로","이동","이렇게","이력서","이론적","이름","이민","이발소","이별","이불","이빨","이상","이성","이슬","이야기","이용","이웃","이월","이윽고","이익","이전","이중","이튿날","이틀","이혼","인간","인격","인공","인구","인근","인기","인도","인류","인물","인생","인쇄","인연","인원","인재","인종","인천","인체","인터넷","인하","인형","일곱","일기","일단","일대","일등","일반","일본","일부","일상","일생","일손","일요일","일월","일정","일종","일주일","일찍","일체","일치","일행","일회용","임금","임무","입대","입력","입맛","입사","입술","입시","입원","입장","입학","자가용","자격","자극","자동","자랑","자부심","자식","자신","자연","자원","자율","자전거","자정","자존심","자판","작가","작년","작성","작업","작용","작은딸","작품","잔디","잔뜩","잔치","잘못","잠깐","잠수함","잠시","잠옷","잠자리","잡지","장관","장군","장기간","장래","장례","장르","장마","장면","장모","장미","장비","장사","장소","장식","장애인","장인","장점","장차","장학금","재능","재빨리","재산","재생","재작년","재정","재채기","재판","재학","재활용","저것","저고리","저곳","저녁","저런","저렇게","저번","저울","저절로","저축","적극","적당히","적성","적용","적응","전개","전공","전기","전달","전라도","전망","전문","전반","전부","전세","전시","전용","전자","전쟁","전주","전철","전체","전통","전혀","전후","절대","절망","절반","절약","절차","점검","점수","점심","점원","점점","점차","접근","접시","접촉","젓가락","정거장","정도","정류장","정리","정말","정면","정문","정반대","정보","정부","정비","정상","정성","정오","정원","정장","정지","정치","정확히","제공","제과점","제대로","제목","제발","제법","제삿날","제안","제일","제작","제주도","제출","제품","제한","조각","조건","조금","조깅","조명","조미료","조상","조선","조용히","조절","조정","조직","존댓말","존재","졸업","졸음","종교","종로","종류","종소리","종업원","종종","종합","좌석","죄인","주관적","주름","주말","주머니","주먹","주문","주민","주방","주변","주식","주인","주일","주장","주전자","주택","준비","줄거리","줄기","줄무늬","중간","중계방송","중국","중년","중단","중독","중반","중부","중세","중소기업","중순","중앙","중요","중학교","즉석","즉시","즐거움","증가","증거","증권","증상","증세","지각","지갑","지경","지극히","지금","지급","지능","지름길","지리산","지방","지붕","지식","지역","지우개","지원","지적","지점","지진","지출","직선","직업","직원","직장","진급","진동","진로","진료","진리","진짜","진찰","진출","진통","진행","질문","질병","질서","짐작","집단","집안","집중","짜증","찌꺼기","차남","차라리","차량","차림","차별","차선","차츰","착각","찬물","찬성","참가","참기름","참새","참석","참여","참외","참조","찻잔","창가","창고","창구","창문","창밖","창작","창조","채널","채점","책가방","책방","책상","책임","챔피언","처벌","처음","천국","천둥","천장","천재","천천히","철도","철저히","철학","첫날","첫째","청년","청바지","청소","청춘","체계","체력","체온","체육","체중","체험","초등학생","초반","초밥","초상화","초순","초여름","초원","초저녁","초점","초청","초콜릿","촛불","총각","총리","총장","촬영","최근","최상","최선","최신","최악","최종","추석","추억","추진","추천","추측","축구","축소","축제","축하","출근","출발","출산","출신","출연","출입","출장","출판","충격","충고","충돌","충분히","충청도","취업","취직","취향","치약","친구","친척","칠십","칠월","칠판","침대","침묵","침실","칫솔","칭찬","카메라","카운터","칼국수","캐릭터","캠퍼스","캠페인","커튼","컨디션","컬러","컴퓨터","코끼리","코미디","콘서트","콜라","콤플렉스","콩나물","쾌감","쿠데타","크림","큰길","큰딸","큰소리","큰아들","큰어머니","큰일","큰절","클래식","클럽","킬로","타입","타자기","탁구","탁자","탄생","태권도","태양","태풍","택시","탤런트","터널","터미널","테니스","테스트","테이블","텔레비전","토론","토마토","토요일","통계","통과","통로","통신","통역","통일","통장","통제","통증","통합","통화","퇴근","퇴원","퇴직금","튀김","트럭","특급","특별","특성","특수","특징","특히","튼튼히","티셔츠","파란색","파일","파출소","판결","판단","판매","판사","팔십","팔월","팝송","패션","팩스","팩시밀리","팬티","퍼센트","페인트","편견","편의","편지","편히","평가","평균","평생","평소","평양","평일","평화","포스터","포인트","포장","포함","표면","표정","표준","표현","품목","품질","풍경","풍속","풍습","프랑스","프린터","플라스틱","피곤","피망","피아노","필름","필수","필요","필자","필통","핑계","하느님","하늘","하드웨어","하룻밤","하반기","하숙집","하순","하여튼","하지만","하천","하품","하필","학과","학교","학급","학기","학년","학력","학번","학부모","학비","학생","학술","학습","학용품","학원","학위","학자","학점","한계","한글","한꺼번에","한낮","한눈","한동안","한때","한라산","한마디","한문","한번","한복","한식","한여름","한쪽","할머니","할아버지","할인","함께","함부로","합격","합리적","항공","항구","항상","항의","해결","해군","해답","해당","해물","해석","해설","해수욕장","해안","핵심","핸드백","햄버거","햇볕","햇살","행동","행복","행사","행운","행위","향기","향상","향수","허락","허용","헬기","현관","현금","현대","현상","현실","현장","현재","현지","혈액","협력","형부","형사","형수","형식","형제","형태","형편","혜택","호기심","호남","호랑이","호박","호텔","호흡","혹시","홀로","홈페이지","홍보","홍수","홍차","화면","화분","화살","화요일","화장","화학","확보","확인","확장","확정","환갑","환경","환영","환율","환자","활기","활동","활발히","활용","활짝","회견","회관","회복","회색","회원","회장","회전","횟수","횡단보도","효율적","후반","후춧가루","훈련","훨씬","휴식","휴일","흉내","흐름","흑백","흑인","흔적","흔히","흥미","흥분","희곡","희망","희생","흰색","힘껏"]'),Uc=JSON.parse('["abaisser","abandon","abdiquer","abeille","abolir","aborder","aboutir","aboyer","abrasif","abreuver","abriter","abroger","abrupt","absence","absolu","absurde","abusif","abyssal","académie","acajou","acarien","accabler","accepter","acclamer","accolade","accroche","accuser","acerbe","achat","acheter","aciduler","acier","acompte","acquérir","acronyme","acteur","actif","actuel","adepte","adéquat","adhésif","adjectif","adjuger","admettre","admirer","adopter","adorer","adoucir","adresse","adroit","adulte","adverbe","aérer","aéronef","affaire","affecter","affiche","affreux","affubler","agacer","agencer","agile","agiter","agrafer","agréable","agrume","aider","aiguille","ailier","aimable","aisance","ajouter","ajuster","alarmer","alchimie","alerte","algèbre","algue","aliéner","aliment","alléger","alliage","allouer","allumer","alourdir","alpaga","altesse","alvéole","amateur","ambigu","ambre","aménager","amertume","amidon","amiral","amorcer","amour","amovible","amphibie","ampleur","amusant","analyse","anaphore","anarchie","anatomie","ancien","anéantir","angle","angoisse","anguleux","animal","annexer","annonce","annuel","anodin","anomalie","anonyme","anormal","antenne","antidote","anxieux","apaiser","apéritif","aplanir","apologie","appareil","appeler","apporter","appuyer","aquarium","aqueduc","arbitre","arbuste","ardeur","ardoise","argent","arlequin","armature","armement","armoire","armure","arpenter","arracher","arriver","arroser","arsenic","artériel","article","aspect","asphalte","aspirer","assaut","asservir","assiette","associer","assurer","asticot","astre","astuce","atelier","atome","atrium","atroce","attaque","attentif","attirer","attraper","aubaine","auberge","audace","audible","augurer","aurore","automne","autruche","avaler","avancer","avarice","avenir","averse","aveugle","aviateur","avide","avion","aviser","avoine","avouer","avril","axial","axiome","badge","bafouer","bagage","baguette","baignade","balancer","balcon","baleine","balisage","bambin","bancaire","bandage","banlieue","bannière","banquier","barbier","baril","baron","barque","barrage","bassin","bastion","bataille","bateau","batterie","baudrier","bavarder","belette","bélier","belote","bénéfice","berceau","berger","berline","bermuda","besace","besogne","bétail","beurre","biberon","bicycle","bidule","bijou","bilan","bilingue","billard","binaire","biologie","biopsie","biotype","biscuit","bison","bistouri","bitume","bizarre","blafard","blague","blanchir","blessant","blinder","blond","bloquer","blouson","bobard","bobine","boire","boiser","bolide","bonbon","bondir","bonheur","bonifier","bonus","bordure","borne","botte","boucle","boueux","bougie","boulon","bouquin","bourse","boussole","boutique","boxeur","branche","brasier","brave","brebis","brèche","breuvage","bricoler","brigade","brillant","brioche","brique","brochure","broder","bronzer","brousse","broyeur","brume","brusque","brutal","bruyant","buffle","buisson","bulletin","bureau","burin","bustier","butiner","butoir","buvable","buvette","cabanon","cabine","cachette","cadeau","cadre","caféine","caillou","caisson","calculer","calepin","calibre","calmer","calomnie","calvaire","camarade","caméra","camion","campagne","canal","caneton","canon","cantine","canular","capable","caporal","caprice","capsule","capter","capuche","carabine","carbone","caresser","caribou","carnage","carotte","carreau","carton","cascade","casier","casque","cassure","causer","caution","cavalier","caverne","caviar","cédille","ceinture","céleste","cellule","cendrier","censurer","central","cercle","cérébral","cerise","cerner","cerveau","cesser","chagrin","chaise","chaleur","chambre","chance","chapitre","charbon","chasseur","chaton","chausson","chavirer","chemise","chenille","chéquier","chercher","cheval","chien","chiffre","chignon","chimère","chiot","chlorure","chocolat","choisir","chose","chouette","chrome","chute","cigare","cigogne","cimenter","cinéma","cintrer","circuler","cirer","cirque","citerne","citoyen","citron","civil","clairon","clameur","claquer","classe","clavier","client","cligner","climat","clivage","cloche","clonage","cloporte","cobalt","cobra","cocasse","cocotier","coder","codifier","coffre","cogner","cohésion","coiffer","coincer","colère","colibri","colline","colmater","colonel","combat","comédie","commande","compact","concert","conduire","confier","congeler","connoter","consonne","contact","convexe","copain","copie","corail","corbeau","cordage","corniche","corpus","correct","cortège","cosmique","costume","coton","coude","coupure","courage","couteau","couvrir","coyote","crabe","crainte","cravate","crayon","créature","créditer","crémeux","creuser","crevette","cribler","crier","cristal","critère","croire","croquer","crotale","crucial","cruel","crypter","cubique","cueillir","cuillère","cuisine","cuivre","culminer","cultiver","cumuler","cupide","curatif","curseur","cyanure","cycle","cylindre","cynique","daigner","damier","danger","danseur","dauphin","débattre","débiter","déborder","débrider","débutant","décaler","décembre","déchirer","décider","déclarer","décorer","décrire","décupler","dédale","déductif","déesse","défensif","défiler","défrayer","dégager","dégivrer","déglutir","dégrafer","déjeuner","délice","déloger","demander","demeurer","démolir","dénicher","dénouer","dentelle","dénuder","départ","dépenser","déphaser","déplacer","déposer","déranger","dérober","désastre","descente","désert","désigner","désobéir","dessiner","destrier","détacher","détester","détourer","détresse","devancer","devenir","deviner","devoir","diable","dialogue","diamant","dicter","différer","digérer","digital","digne","diluer","dimanche","diminuer","dioxyde","directif","diriger","discuter","disposer","dissiper","distance","divertir","diviser","docile","docteur","dogme","doigt","domaine","domicile","dompter","donateur","donjon","donner","dopamine","dortoir","dorure","dosage","doseur","dossier","dotation","douanier","double","douceur","douter","doyen","dragon","draper","dresser","dribbler","droiture","duperie","duplexe","durable","durcir","dynastie","éblouir","écarter","écharpe","échelle","éclairer","éclipse","éclore","écluse","école","économie","écorce","écouter","écraser","écrémer","écrivain","écrou","écume","écureuil","édifier","éduquer","effacer","effectif","effigie","effort","effrayer","effusion","égaliser","égarer","éjecter","élaborer","élargir","électron","élégant","éléphant","élève","éligible","élitisme","éloge","élucider","éluder","emballer","embellir","embryon","émeraude","émission","emmener","émotion","émouvoir","empereur","employer","emporter","emprise","émulsion","encadrer","enchère","enclave","encoche","endiguer","endosser","endroit","enduire","énergie","enfance","enfermer","enfouir","engager","engin","englober","énigme","enjamber","enjeu","enlever","ennemi","ennuyeux","enrichir","enrobage","enseigne","entasser","entendre","entier","entourer","entraver","énumérer","envahir","enviable","envoyer","enzyme","éolien","épaissir","épargne","épatant","épaule","épicerie","épidémie","épier","épilogue","épine","épisode","épitaphe","époque","épreuve","éprouver","épuisant","équerre","équipe","ériger","érosion","erreur","éruption","escalier","espadon","espèce","espiègle","espoir","esprit","esquiver","essayer","essence","essieu","essorer","estime","estomac","estrade","étagère","étaler","étanche","étatique","éteindre","étendoir","éternel","éthanol","éthique","ethnie","étirer","étoffer","étoile","étonnant","étourdir","étrange","étroit","étude","euphorie","évaluer","évasion","éventail","évidence","éviter","évolutif","évoquer","exact","exagérer","exaucer","exceller","excitant","exclusif","excuse","exécuter","exemple","exercer","exhaler","exhorter","exigence","exiler","exister","exotique","expédier","explorer","exposer","exprimer","exquis","extensif","extraire","exulter","fable","fabuleux","facette","facile","facture","faiblir","falaise","fameux","famille","farceur","farfelu","farine","farouche","fasciner","fatal","fatigue","faucon","fautif","faveur","favori","fébrile","féconder","fédérer","félin","femme","fémur","fendoir","féodal","fermer","féroce","ferveur","festival","feuille","feutre","février","fiasco","ficeler","fictif","fidèle","figure","filature","filetage","filière","filleul","filmer","filou","filtrer","financer","finir","fiole","firme","fissure","fixer","flairer","flamme","flasque","flatteur","fléau","flèche","fleur","flexion","flocon","flore","fluctuer","fluide","fluvial","folie","fonderie","fongible","fontaine","forcer","forgeron","formuler","fortune","fossile","foudre","fougère","fouiller","foulure","fourmi","fragile","fraise","franchir","frapper","frayeur","frégate","freiner","frelon","frémir","frénésie","frère","friable","friction","frisson","frivole","froid","fromage","frontal","frotter","fruit","fugitif","fuite","fureur","furieux","furtif","fusion","futur","gagner","galaxie","galerie","gambader","garantir","gardien","garnir","garrigue","gazelle","gazon","géant","gélatine","gélule","gendarme","général","génie","genou","gentil","géologie","géomètre","géranium","germe","gestuel","geyser","gibier","gicler","girafe","givre","glace","glaive","glisser","globe","gloire","glorieux","golfeur","gomme","gonfler","gorge","gorille","goudron","gouffre","goulot","goupille","gourmand","goutte","graduel","graffiti","graine","grand","grappin","gratuit","gravir","grenat","griffure","griller","grimper","grogner","gronder","grotte","groupe","gruger","grutier","gruyère","guépard","guerrier","guide","guimauve","guitare","gustatif","gymnaste","gyrostat","habitude","hachoir","halte","hameau","hangar","hanneton","haricot","harmonie","harpon","hasard","hélium","hématome","herbe","hérisson","hermine","héron","hésiter","heureux","hiberner","hibou","hilarant","histoire","hiver","homard","hommage","homogène","honneur","honorer","honteux","horde","horizon","horloge","hormone","horrible","houleux","housse","hublot","huileux","humain","humble","humide","humour","hurler","hydromel","hygiène","hymne","hypnose","idylle","ignorer","iguane","illicite","illusion","image","imbiber","imiter","immense","immobile","immuable","impact","impérial","implorer","imposer","imprimer","imputer","incarner","incendie","incident","incliner","incolore","indexer","indice","inductif","inédit","ineptie","inexact","infini","infliger","informer","infusion","ingérer","inhaler","inhiber","injecter","injure","innocent","inoculer","inonder","inscrire","insecte","insigne","insolite","inspirer","instinct","insulter","intact","intense","intime","intrigue","intuitif","inutile","invasion","inventer","inviter","invoquer","ironique","irradier","irréel","irriter","isoler","ivoire","ivresse","jaguar","jaillir","jambe","janvier","jardin","jauger","jaune","javelot","jetable","jeton","jeudi","jeunesse","joindre","joncher","jongler","joueur","jouissif","journal","jovial","joyau","joyeux","jubiler","jugement","junior","jupon","juriste","justice","juteux","juvénile","kayak","kimono","kiosque","label","labial","labourer","lacérer","lactose","lagune","laine","laisser","laitier","lambeau","lamelle","lampe","lanceur","langage","lanterne","lapin","largeur","larme","laurier","lavabo","lavoir","lecture","légal","léger","légume","lessive","lettre","levier","lexique","lézard","liasse","libérer","libre","licence","licorne","liège","lièvre","ligature","ligoter","ligue","limer","limite","limonade","limpide","linéaire","lingot","lionceau","liquide","lisière","lister","lithium","litige","littoral","livreur","logique","lointain","loisir","lombric","loterie","louer","lourd","loutre","louve","loyal","lubie","lucide","lucratif","lueur","lugubre","luisant","lumière","lunaire","lundi","luron","lutter","luxueux","machine","magasin","magenta","magique","maigre","maillon","maintien","mairie","maison","majorer","malaxer","maléfice","malheur","malice","mallette","mammouth","mandater","maniable","manquant","manteau","manuel","marathon","marbre","marchand","mardi","maritime","marqueur","marron","marteler","mascotte","massif","matériel","matière","matraque","maudire","maussade","mauve","maximal","méchant","méconnu","médaille","médecin","méditer","méduse","meilleur","mélange","mélodie","membre","mémoire","menacer","mener","menhir","mensonge","mentor","mercredi","mérite","merle","messager","mesure","métal","météore","méthode","métier","meuble","miauler","microbe","miette","mignon","migrer","milieu","million","mimique","mince","minéral","minimal","minorer","minute","miracle","miroiter","missile","mixte","mobile","moderne","moelleux","mondial","moniteur","monnaie","monotone","monstre","montagne","monument","moqueur","morceau","morsure","mortier","moteur","motif","mouche","moufle","moulin","mousson","mouton","mouvant","multiple","munition","muraille","murène","murmure","muscle","muséum","musicien","mutation","muter","mutuel","myriade","myrtille","mystère","mythique","nageur","nappe","narquois","narrer","natation","nation","nature","naufrage","nautique","navire","nébuleux","nectar","néfaste","négation","négliger","négocier","neige","nerveux","nettoyer","neurone","neutron","neveu","niche","nickel","nitrate","niveau","noble","nocif","nocturne","noirceur","noisette","nomade","nombreux","nommer","normatif","notable","notifier","notoire","nourrir","nouveau","novateur","novembre","novice","nuage","nuancer","nuire","nuisible","numéro","nuptial","nuque","nutritif","obéir","objectif","obliger","obscur","observer","obstacle","obtenir","obturer","occasion","occuper","océan","octobre","octroyer","octupler","oculaire","odeur","odorant","offenser","officier","offrir","ogive","oiseau","oisillon","olfactif","olivier","ombrage","omettre","onctueux","onduler","onéreux","onirique","opale","opaque","opérer","opinion","opportun","opprimer","opter","optique","orageux","orange","orbite","ordonner","oreille","organe","orgueil","orifice","ornement","orque","ortie","osciller","osmose","ossature","otarie","ouragan","ourson","outil","outrager","ouvrage","ovation","oxyde","oxygène","ozone","paisible","palace","palmarès","palourde","palper","panache","panda","pangolin","paniquer","panneau","panorama","pantalon","papaye","papier","papoter","papyrus","paradoxe","parcelle","paresse","parfumer","parler","parole","parrain","parsemer","partager","parure","parvenir","passion","pastèque","paternel","patience","patron","pavillon","pavoiser","payer","paysage","peigne","peintre","pelage","pélican","pelle","pelouse","peluche","pendule","pénétrer","pénible","pensif","pénurie","pépite","péplum","perdrix","perforer","période","permuter","perplexe","persil","perte","peser","pétale","petit","pétrir","peuple","pharaon","phobie","phoque","photon","phrase","physique","piano","pictural","pièce","pierre","pieuvre","pilote","pinceau","pipette","piquer","pirogue","piscine","piston","pivoter","pixel","pizza","placard","plafond","plaisir","planer","plaque","plastron","plateau","pleurer","plexus","pliage","plomb","plonger","pluie","plumage","pochette","poésie","poète","pointe","poirier","poisson","poivre","polaire","policier","pollen","polygone","pommade","pompier","ponctuel","pondérer","poney","portique","position","posséder","posture","potager","poteau","potion","pouce","poulain","poumon","pourpre","poussin","pouvoir","prairie","pratique","précieux","prédire","préfixe","prélude","prénom","présence","prétexte","prévoir","primitif","prince","prison","priver","problème","procéder","prodige","profond","progrès","proie","projeter","prologue","promener","propre","prospère","protéger","prouesse","proverbe","prudence","pruneau","psychose","public","puceron","puiser","pulpe","pulsar","punaise","punitif","pupitre","purifier","puzzle","pyramide","quasar","querelle","question","quiétude","quitter","quotient","racine","raconter","radieux","ragondin","raideur","raisin","ralentir","rallonge","ramasser","rapide","rasage","ratisser","ravager","ravin","rayonner","réactif","réagir","réaliser","réanimer","recevoir","réciter","réclamer","récolter","recruter","reculer","recycler","rédiger","redouter","refaire","réflexe","réformer","refrain","refuge","régalien","région","réglage","régulier","réitérer","rejeter","rejouer","relatif","relever","relief","remarque","remède","remise","remonter","remplir","remuer","renard","renfort","renifler","renoncer","rentrer","renvoi","replier","reporter","reprise","reptile","requin","réserve","résineux","résoudre","respect","rester","résultat","rétablir","retenir","réticule","retomber","retracer","réunion","réussir","revanche","revivre","révolte","révulsif","richesse","rideau","rieur","rigide","rigoler","rincer","riposter","risible","risque","rituel","rival","rivière","rocheux","romance","rompre","ronce","rondin","roseau","rosier","rotatif","rotor","rotule","rouge","rouille","rouleau","routine","royaume","ruban","rubis","ruche","ruelle","rugueux","ruiner","ruisseau","ruser","rustique","rythme","sabler","saboter","sabre","sacoche","safari","sagesse","saisir","salade","salive","salon","saluer","samedi","sanction","sanglier","sarcasme","sardine","saturer","saugrenu","saumon","sauter","sauvage","savant","savonner","scalpel","scandale","scélérat","scénario","sceptre","schéma","science","scinder","score","scrutin","sculpter","séance","sécable","sécher","secouer","sécréter","sédatif","séduire","seigneur","séjour","sélectif","semaine","sembler","semence","séminal","sénateur","sensible","sentence","séparer","séquence","serein","sergent","sérieux","serrure","sérum","service","sésame","sévir","sevrage","sextuple","sidéral","siècle","siéger","siffler","sigle","signal","silence","silicium","simple","sincère","sinistre","siphon","sirop","sismique","situer","skier","social","socle","sodium","soigneux","soldat","soleil","solitude","soluble","sombre","sommeil","somnoler","sonde","songeur","sonnette","sonore","sorcier","sortir","sosie","sottise","soucieux","soudure","souffle","soulever","soupape","source","soutirer","souvenir","spacieux","spatial","spécial","sphère","spiral","stable","station","sternum","stimulus","stipuler","strict","studieux","stupeur","styliste","sublime","substrat","subtil","subvenir","succès","sucre","suffixe","suggérer","suiveur","sulfate","superbe","supplier","surface","suricate","surmener","surprise","sursaut","survie","suspect","syllabe","symbole","symétrie","synapse","syntaxe","système","tabac","tablier","tactile","tailler","talent","talisman","talonner","tambour","tamiser","tangible","tapis","taquiner","tarder","tarif","tartine","tasse","tatami","tatouage","taupe","taureau","taxer","témoin","temporel","tenaille","tendre","teneur","tenir","tension","terminer","terne","terrible","tétine","texte","thème","théorie","thérapie","thorax","tibia","tiède","timide","tirelire","tiroir","tissu","titane","titre","tituber","toboggan","tolérant","tomate","tonique","tonneau","toponyme","torche","tordre","tornade","torpille","torrent","torse","tortue","totem","toucher","tournage","tousser","toxine","traction","trafic","tragique","trahir","train","trancher","travail","trèfle","tremper","trésor","treuil","triage","tribunal","tricoter","trilogie","triomphe","tripler","triturer","trivial","trombone","tronc","tropical","troupeau","tuile","tulipe","tumulte","tunnel","turbine","tuteur","tutoyer","tuyau","tympan","typhon","typique","tyran","ubuesque","ultime","ultrason","unanime","unifier","union","unique","unitaire","univers","uranium","urbain","urticant","usage","usine","usuel","usure","utile","utopie","vacarme","vaccin","vagabond","vague","vaillant","vaincre","vaisseau","valable","valise","vallon","valve","vampire","vanille","vapeur","varier","vaseux","vassal","vaste","vecteur","vedette","végétal","véhicule","veinard","véloce","vendredi","vénérer","venger","venimeux","ventouse","verdure","vérin","vernir","verrou","verser","vertu","veston","vétéran","vétuste","vexant","vexer","viaduc","viande","victoire","vidange","vidéo","vignette","vigueur","vilain","village","vinaigre","violon","vipère","virement","virtuose","virus","visage","viseur","vision","visqueux","visuel","vital","vitesse","viticole","vitrine","vivace","vivipare","vocation","voguer","voile","voisin","voiture","volaille","volcan","voltiger","volume","vorace","vortex","voter","vouloir","voyage","voyelle","wagon","xénon","yacht","zèbre","zénith","zeste","zoologie"]'),Lc=JSON.parse('["abaco","abbaglio","abbinato","abete","abisso","abolire","abrasivo","abrogato","accadere","accenno","accusato","acetone","achille","acido","acqua","acre","acrilico","acrobata","acuto","adagio","addebito","addome","adeguato","aderire","adipe","adottare","adulare","affabile","affetto","affisso","affranto","aforisma","afoso","africano","agave","agente","agevole","aggancio","agire","agitare","agonismo","agricolo","agrumeto","aguzzo","alabarda","alato","albatro","alberato","albo","albume","alce","alcolico","alettone","alfa","algebra","aliante","alibi","alimento","allagato","allegro","allievo","allodola","allusivo","almeno","alogeno","alpaca","alpestre","altalena","alterno","alticcio","altrove","alunno","alveolo","alzare","amalgama","amanita","amarena","ambito","ambrato","ameba","america","ametista","amico","ammasso","ammenda","ammirare","ammonito","amore","ampio","ampliare","amuleto","anacardo","anagrafe","analista","anarchia","anatra","anca","ancella","ancora","andare","andrea","anello","angelo","angolare","angusto","anima","annegare","annidato","anno","annuncio","anonimo","anticipo","anzi","apatico","apertura","apode","apparire","appetito","appoggio","approdo","appunto","aprile","arabica","arachide","aragosta","araldica","arancio","aratura","arazzo","arbitro","archivio","ardito","arenile","argento","argine","arguto","aria","armonia","arnese","arredato","arringa","arrosto","arsenico","arso","artefice","arzillo","asciutto","ascolto","asepsi","asettico","asfalto","asino","asola","aspirato","aspro","assaggio","asse","assoluto","assurdo","asta","astenuto","astice","astratto","atavico","ateismo","atomico","atono","attesa","attivare","attorno","attrito","attuale","ausilio","austria","autista","autonomo","autunno","avanzato","avere","avvenire","avviso","avvolgere","azione","azoto","azzimo","azzurro","babele","baccano","bacino","baco","badessa","badilata","bagnato","baita","balcone","baldo","balena","ballata","balzano","bambino","bandire","baraonda","barbaro","barca","baritono","barlume","barocco","basilico","basso","batosta","battuto","baule","bava","bavosa","becco","beffa","belgio","belva","benda","benevole","benigno","benzina","bere","berlina","beta","bibita","bici","bidone","bifido","biga","bilancia","bimbo","binocolo","biologo","bipede","bipolare","birbante","birra","biscotto","bisesto","bisnonno","bisonte","bisturi","bizzarro","blando","blatta","bollito","bonifico","bordo","bosco","botanico","bottino","bozzolo","braccio","bradipo","brama","branca","bravura","bretella","brevetto","brezza","briglia","brillante","brindare","broccolo","brodo","bronzina","brullo","bruno","bubbone","buca","budino","buffone","buio","bulbo","buono","burlone","burrasca","bussola","busta","cadetto","caduco","calamaro","calcolo","calesse","calibro","calmo","caloria","cambusa","camerata","camicia","cammino","camola","campale","canapa","candela","cane","canino","canotto","cantina","capace","capello","capitolo","capogiro","cappero","capra","capsula","carapace","carcassa","cardo","carisma","carovana","carretto","cartolina","casaccio","cascata","caserma","caso","cassone","castello","casuale","catasta","catena","catrame","cauto","cavillo","cedibile","cedrata","cefalo","celebre","cellulare","cena","cenone","centesimo","ceramica","cercare","certo","cerume","cervello","cesoia","cespo","ceto","chela","chiaro","chicca","chiedere","chimera","china","chirurgo","chitarra","ciao","ciclismo","cifrare","cigno","cilindro","ciottolo","circa","cirrosi","citrico","cittadino","ciuffo","civetta","civile","classico","clinica","cloro","cocco","codardo","codice","coerente","cognome","collare","colmato","colore","colposo","coltivato","colza","coma","cometa","commando","comodo","computer","comune","conciso","condurre","conferma","congelare","coniuge","connesso","conoscere","consumo","continuo","convegno","coperto","copione","coppia","copricapo","corazza","cordata","coricato","cornice","corolla","corpo","corredo","corsia","cortese","cosmico","costante","cottura","covato","cratere","cravatta","creato","credere","cremoso","crescita","creta","criceto","crinale","crisi","critico","croce","cronaca","crostata","cruciale","crusca","cucire","cuculo","cugino","cullato","cupola","curatore","cursore","curvo","cuscino","custode","dado","daino","dalmata","damerino","daniela","dannoso","danzare","datato","davanti","davvero","debutto","decennio","deciso","declino","decollo","decreto","dedicato","definito","deforme","degno","delegare","delfino","delirio","delta","demenza","denotato","dentro","deposito","derapata","derivare","deroga","descritto","deserto","desiderio","desumere","detersivo","devoto","diametro","dicembre","diedro","difeso","diffuso","digerire","digitale","diluvio","dinamico","dinnanzi","dipinto","diploma","dipolo","diradare","dire","dirotto","dirupo","disagio","discreto","disfare","disgelo","disposto","distanza","disumano","dito","divano","divelto","dividere","divorato","doblone","docente","doganale","dogma","dolce","domato","domenica","dominare","dondolo","dono","dormire","dote","dottore","dovuto","dozzina","drago","druido","dubbio","dubitare","ducale","duna","duomo","duplice","duraturo","ebano","eccesso","ecco","eclissi","economia","edera","edicola","edile","editoria","educare","egemonia","egli","egoismo","egregio","elaborato","elargire","elegante","elencato","eletto","elevare","elfico","elica","elmo","elsa","eluso","emanato","emblema","emesso","emiro","emotivo","emozione","empirico","emulo","endemico","enduro","energia","enfasi","enoteca","entrare","enzima","epatite","epilogo","episodio","epocale","eppure","equatore","erario","erba","erboso","erede","eremita","erigere","ermetico","eroe","erosivo","errante","esagono","esame","esanime","esaudire","esca","esempio","esercito","esibito","esigente","esistere","esito","esofago","esortato","esoso","espanso","espresso","essenza","esso","esteso","estimare","estonia","estroso","esultare","etilico","etnico","etrusco","etto","euclideo","europa","evaso","evidenza","evitato","evoluto","evviva","fabbrica","faccenda","fachiro","falco","famiglia","fanale","fanfara","fango","fantasma","fare","farfalla","farinoso","farmaco","fascia","fastoso","fasullo","faticare","fato","favoloso","febbre","fecola","fede","fegato","felpa","feltro","femmina","fendere","fenomeno","fermento","ferro","fertile","fessura","festivo","fetta","feudo","fiaba","fiducia","fifa","figurato","filo","finanza","finestra","finire","fiore","fiscale","fisico","fiume","flacone","flamenco","flebo","flemma","florido","fluente","fluoro","fobico","focaccia","focoso","foderato","foglio","folata","folclore","folgore","fondente","fonetico","fonia","fontana","forbito","forchetta","foresta","formica","fornaio","foro","fortezza","forzare","fosfato","fosso","fracasso","frana","frassino","fratello","freccetta","frenata","fresco","frigo","frollino","fronde","frugale","frutta","fucilata","fucsia","fuggente","fulmine","fulvo","fumante","fumetto","fumoso","fune","funzione","fuoco","furbo","furgone","furore","fuso","futile","gabbiano","gaffe","galateo","gallina","galoppo","gambero","gamma","garanzia","garbo","garofano","garzone","gasdotto","gasolio","gastrico","gatto","gaudio","gazebo","gazzella","geco","gelatina","gelso","gemello","gemmato","gene","genitore","gennaio","genotipo","gergo","ghepardo","ghiaccio","ghisa","giallo","gilda","ginepro","giocare","gioiello","giorno","giove","girato","girone","gittata","giudizio","giurato","giusto","globulo","glutine","gnomo","gobba","golf","gomito","gommone","gonfio","gonna","governo","gracile","grado","grafico","grammo","grande","grattare","gravoso","grazia","greca","gregge","grifone","grigio","grinza","grotta","gruppo","guadagno","guaio","guanto","guardare","gufo","guidare","ibernato","icona","identico","idillio","idolo","idra","idrico","idrogeno","igiene","ignaro","ignorato","ilare","illeso","illogico","illudere","imballo","imbevuto","imbocco","imbuto","immane","immerso","immolato","impacco","impeto","impiego","importo","impronta","inalare","inarcare","inattivo","incanto","incendio","inchino","incisivo","incluso","incontro","incrocio","incubo","indagine","india","indole","inedito","infatti","infilare","inflitto","ingaggio","ingegno","inglese","ingordo","ingrosso","innesco","inodore","inoltrare","inondato","insano","insetto","insieme","insonnia","insulina","intasato","intero","intonaco","intuito","inumidire","invalido","invece","invito","iperbole","ipnotico","ipotesi","ippica","iride","irlanda","ironico","irrigato","irrorare","isolato","isotopo","isterico","istituto","istrice","italia","iterare","labbro","labirinto","lacca","lacerato","lacrima","lacuna","laddove","lago","lampo","lancetta","lanterna","lardoso","larga","laringe","lastra","latenza","latino","lattuga","lavagna","lavoro","legale","leggero","lembo","lentezza","lenza","leone","lepre","lesivo","lessato","lesto","letterale","leva","levigato","libero","lido","lievito","lilla","limatura","limitare","limpido","lineare","lingua","liquido","lira","lirica","lisca","lite","litigio","livrea","locanda","lode","logica","lombare","londra","longevo","loquace","lorenzo","loto","lotteria","luce","lucidato","lumaca","luminoso","lungo","lupo","luppolo","lusinga","lusso","lutto","macabro","macchina","macero","macinato","madama","magico","maglia","magnete","magro","maiolica","malafede","malgrado","malinteso","malsano","malto","malumore","mana","mancia","mandorla","mangiare","manifesto","mannaro","manovra","mansarda","mantide","manubrio","mappa","maratona","marcire","maretta","marmo","marsupio","maschera","massaia","mastino","materasso","matricola","mattone","maturo","mazurca","meandro","meccanico","mecenate","medesimo","meditare","mega","melassa","melis","melodia","meninge","meno","mensola","mercurio","merenda","merlo","meschino","mese","messere","mestolo","metallo","metodo","mettere","miagolare","mica","micelio","michele","microbo","midollo","miele","migliore","milano","milite","mimosa","minerale","mini","minore","mirino","mirtillo","miscela","missiva","misto","misurare","mitezza","mitigare","mitra","mittente","mnemonico","modello","modifica","modulo","mogano","mogio","mole","molosso","monastero","monco","mondina","monetario","monile","monotono","monsone","montato","monviso","mora","mordere","morsicato","mostro","motivato","motosega","motto","movenza","movimento","mozzo","mucca","mucosa","muffa","mughetto","mugnaio","mulatto","mulinello","multiplo","mummia","munto","muovere","murale","musa","muscolo","musica","mutevole","muto","nababbo","nafta","nanometro","narciso","narice","narrato","nascere","nastrare","naturale","nautica","naviglio","nebulosa","necrosi","negativo","negozio","nemmeno","neofita","neretto","nervo","nessuno","nettuno","neutrale","neve","nevrotico","nicchia","ninfa","nitido","nobile","nocivo","nodo","nome","nomina","nordico","normale","norvegese","nostrano","notare","notizia","notturno","novella","nucleo","nulla","numero","nuovo","nutrire","nuvola","nuziale","oasi","obbedire","obbligo","obelisco","oblio","obolo","obsoleto","occasione","occhio","occidente","occorrere","occultare","ocra","oculato","odierno","odorare","offerta","offrire","offuscato","oggetto","oggi","ognuno","olandese","olfatto","oliato","oliva","ologramma","oltre","omaggio","ombelico","ombra","omega","omissione","ondoso","onere","onice","onnivoro","onorevole","onta","operato","opinione","opposto","oracolo","orafo","ordine","orecchino","orefice","orfano","organico","origine","orizzonte","orma","ormeggio","ornativo","orologio","orrendo","orribile","ortensia","ortica","orzata","orzo","osare","oscurare","osmosi","ospedale","ospite","ossa","ossidare","ostacolo","oste","otite","otre","ottagono","ottimo","ottobre","ovale","ovest","ovino","oviparo","ovocito","ovunque","ovviare","ozio","pacchetto","pace","pacifico","padella","padrone","paese","paga","pagina","palazzina","palesare","pallido","palo","palude","pandoro","pannello","paolo","paonazzo","paprica","parabola","parcella","parere","pargolo","pari","parlato","parola","partire","parvenza","parziale","passivo","pasticca","patacca","patologia","pattume","pavone","peccato","pedalare","pedonale","peggio","peloso","penare","pendice","penisola","pennuto","penombra","pensare","pentola","pepe","pepita","perbene","percorso","perdonato","perforare","pergamena","periodo","permesso","perno","perplesso","persuaso","pertugio","pervaso","pesatore","pesista","peso","pestifero","petalo","pettine","petulante","pezzo","piacere","pianta","piattino","piccino","picozza","piega","pietra","piffero","pigiama","pigolio","pigro","pila","pilifero","pillola","pilota","pimpante","pineta","pinna","pinolo","pioggia","piombo","piramide","piretico","pirite","pirolisi","pitone","pizzico","placebo","planare","plasma","platano","plenario","pochezza","poderoso","podismo","poesia","poggiare","polenta","poligono","pollice","polmonite","polpetta","polso","poltrona","polvere","pomice","pomodoro","ponte","popoloso","porfido","poroso","porpora","porre","portata","posa","positivo","possesso","postulato","potassio","potere","pranzo","prassi","pratica","precluso","predica","prefisso","pregiato","prelievo","premere","prenotare","preparato","presenza","pretesto","prevalso","prima","principe","privato","problema","procura","produrre","profumo","progetto","prolunga","promessa","pronome","proposta","proroga","proteso","prova","prudente","prugna","prurito","psiche","pubblico","pudica","pugilato","pugno","pulce","pulito","pulsante","puntare","pupazzo","pupilla","puro","quadro","qualcosa","quasi","querela","quota","raccolto","raddoppio","radicale","radunato","raffica","ragazzo","ragione","ragno","ramarro","ramingo","ramo","randagio","rantolare","rapato","rapina","rappreso","rasatura","raschiato","rasente","rassegna","rastrello","rata","ravveduto","reale","recepire","recinto","recluta","recondito","recupero","reddito","redimere","regalato","registro","regola","regresso","relazione","remare","remoto","renna","replica","reprimere","reputare","resa","residente","responso","restauro","rete","retina","retorica","rettifica","revocato","riassunto","ribadire","ribelle","ribrezzo","ricarica","ricco","ricevere","riciclato","ricordo","ricreduto","ridicolo","ridurre","rifasare","riflesso","riforma","rifugio","rigare","rigettato","righello","rilassato","rilevato","rimanere","rimbalzo","rimedio","rimorchio","rinascita","rincaro","rinforzo","rinnovo","rinomato","rinsavito","rintocco","rinuncia","rinvenire","riparato","ripetuto","ripieno","riportare","ripresa","ripulire","risata","rischio","riserva","risibile","riso","rispetto","ristoro","risultato","risvolto","ritardo","ritegno","ritmico","ritrovo","riunione","riva","riverso","rivincita","rivolto","rizoma","roba","robotico","robusto","roccia","roco","rodaggio","rodere","roditore","rogito","rollio","romantico","rompere","ronzio","rosolare","rospo","rotante","rotondo","rotula","rovescio","rubizzo","rubrica","ruga","rullino","rumine","rumoroso","ruolo","rupe","russare","rustico","sabato","sabbiare","sabotato","sagoma","salasso","saldatura","salgemma","salivare","salmone","salone","saltare","saluto","salvo","sapere","sapido","saporito","saraceno","sarcasmo","sarto","sassoso","satellite","satira","satollo","saturno","savana","savio","saziato","sbadiglio","sbalzo","sbancato","sbarra","sbattere","sbavare","sbendare","sbirciare","sbloccato","sbocciato","sbrinare","sbruffone","sbuffare","scabroso","scadenza","scala","scambiare","scandalo","scapola","scarso","scatenare","scavato","scelto","scenico","scettro","scheda","schiena","sciarpa","scienza","scindere","scippo","sciroppo","scivolo","sclerare","scodella","scolpito","scomparto","sconforto","scoprire","scorta","scossone","scozzese","scriba","scrollare","scrutinio","scuderia","scultore","scuola","scuro","scusare","sdebitare","sdoganare","seccatura","secondo","sedano","seggiola","segnalato","segregato","seguito","selciato","selettivo","sella","selvaggio","semaforo","sembrare","seme","seminato","sempre","senso","sentire","sepolto","sequenza","serata","serbato","sereno","serio","serpente","serraglio","servire","sestina","setola","settimana","sfacelo","sfaldare","sfamato","sfarzoso","sfaticato","sfera","sfida","sfilato","sfinge","sfocato","sfoderare","sfogo","sfoltire","sforzato","sfratto","sfruttato","sfuggito","sfumare","sfuso","sgabello","sgarbato","sgonfiare","sgorbio","sgrassato","sguardo","sibilo","siccome","sierra","sigla","signore","silenzio","sillaba","simbolo","simpatico","simulato","sinfonia","singolo","sinistro","sino","sintesi","sinusoide","sipario","sisma","sistole","situato","slitta","slogatura","sloveno","smarrito","smemorato","smentito","smeraldo","smilzo","smontare","smottato","smussato","snellire","snervato","snodo","sobbalzo","sobrio","soccorso","sociale","sodale","soffitto","sogno","soldato","solenne","solido","sollazzo","solo","solubile","solvente","somatico","somma","sonda","sonetto","sonnifero","sopire","soppeso","sopra","sorgere","sorpasso","sorriso","sorso","sorteggio","sorvolato","sospiro","sosta","sottile","spada","spalla","spargere","spatola","spavento","spazzola","specie","spedire","spegnere","spelatura","speranza","spessore","spettrale","spezzato","spia","spigoloso","spillato","spinoso","spirale","splendido","sportivo","sposo","spranga","sprecare","spronato","spruzzo","spuntino","squillo","sradicare","srotolato","stabile","stacco","staffa","stagnare","stampato","stantio","starnuto","stasera","statuto","stelo","steppa","sterzo","stiletto","stima","stirpe","stivale","stizzoso","stonato","storico","strappo","stregato","stridulo","strozzare","strutto","stuccare","stufo","stupendo","subentro","succoso","sudore","suggerito","sugo","sultano","suonare","superbo","supporto","surgelato","surrogato","sussurro","sutura","svagare","svedese","sveglio","svelare","svenuto","svezia","sviluppo","svista","svizzera","svolta","svuotare","tabacco","tabulato","tacciare","taciturno","tale","talismano","tampone","tannino","tara","tardivo","targato","tariffa","tarpare","tartaruga","tasto","tattico","taverna","tavolata","tazza","teca","tecnico","telefono","temerario","tempo","temuto","tendone","tenero","tensione","tentacolo","teorema","terme","terrazzo","terzetto","tesi","tesserato","testato","tetro","tettoia","tifare","tigella","timbro","tinto","tipico","tipografo","tiraggio","tiro","titanio","titolo","titubante","tizio","tizzone","toccare","tollerare","tolto","tombola","tomo","tonfo","tonsilla","topazio","topologia","toppa","torba","tornare","torrone","tortora","toscano","tossire","tostatura","totano","trabocco","trachea","trafila","tragedia","tralcio","tramonto","transito","trapano","trarre","trasloco","trattato","trave","treccia","tremolio","trespolo","tributo","tricheco","trifoglio","trillo","trincea","trio","tristezza","triturato","trivella","tromba","trono","troppo","trottola","trovare","truccato","tubatura","tuffato","tulipano","tumulto","tunisia","turbare","turchino","tuta","tutela","ubicato","uccello","uccisore","udire","uditivo","uffa","ufficio","uguale","ulisse","ultimato","umano","umile","umorismo","uncinetto","ungere","ungherese","unicorno","unificato","unisono","unitario","unte","uovo","upupa","uragano","urgenza","urlo","usanza","usato","uscito","usignolo","usuraio","utensile","utilizzo","utopia","vacante","vaccinato","vagabondo","vagliato","valanga","valgo","valico","valletta","valoroso","valutare","valvola","vampata","vangare","vanitoso","vano","vantaggio","vanvera","vapore","varano","varcato","variante","vasca","vedetta","vedova","veduto","vegetale","veicolo","velcro","velina","velluto","veloce","venato","vendemmia","vento","verace","verbale","vergogna","verifica","vero","verruca","verticale","vescica","vessillo","vestale","veterano","vetrina","vetusto","viandante","vibrante","vicenda","vichingo","vicinanza","vidimare","vigilia","vigneto","vigore","vile","villano","vimini","vincitore","viola","vipera","virgola","virologo","virulento","viscoso","visione","vispo","vissuto","visura","vita","vitello","vittima","vivanda","vivido","viziare","voce","voga","volatile","volere","volpe","voragine","vulcano","zampogna","zanna","zappato","zattera","zavorra","zefiro","zelante","zelo","zenzero","zerbino","zibetto","zinco","zircone","zitto","zolla","zotico","zucchero","zufolo","zulu","zuppa"]'),Tc=JSON.parse('["ábaco","abdomen","abeja","abierto","abogado","abono","aborto","abrazo","abrir","abuelo","abuso","acabar","academia","acceso","acción","aceite","acelga","acento","aceptar","ácido","aclarar","acné","acoger","acoso","activo","acto","actriz","actuar","acudir","acuerdo","acusar","adicto","admitir","adoptar","adorno","aduana","adulto","aéreo","afectar","afición","afinar","afirmar","ágil","agitar","agonía","agosto","agotar","agregar","agrio","agua","agudo","águila","aguja","ahogo","ahorro","aire","aislar","ajedrez","ajeno","ajuste","alacrán","alambre","alarma","alba","álbum","alcalde","aldea","alegre","alejar","alerta","aleta","alfiler","alga","algodón","aliado","aliento","alivio","alma","almeja","almíbar","altar","alteza","altivo","alto","altura","alumno","alzar","amable","amante","amapola","amargo","amasar","ámbar","ámbito","ameno","amigo","amistad","amor","amparo","amplio","ancho","anciano","ancla","andar","andén","anemia","ángulo","anillo","ánimo","anís","anotar","antena","antiguo","antojo","anual","anular","anuncio","añadir","añejo","año","apagar","aparato","apetito","apio","aplicar","apodo","aporte","apoyo","aprender","aprobar","apuesta","apuro","arado","araña","arar","árbitro","árbol","arbusto","archivo","arco","arder","ardilla","arduo","área","árido","aries","armonía","arnés","aroma","arpa","arpón","arreglo","arroz","arruga","arte","artista","asa","asado","asalto","ascenso","asegurar","aseo","asesor","asiento","asilo","asistir","asno","asombro","áspero","astilla","astro","astuto","asumir","asunto","atajo","ataque","atar","atento","ateo","ático","atleta","átomo","atraer","atroz","atún","audaz","audio","auge","aula","aumento","ausente","autor","aval","avance","avaro","ave","avellana","avena","avestruz","avión","aviso","ayer","ayuda","ayuno","azafrán","azar","azote","azúcar","azufre","azul","baba","babor","bache","bahía","baile","bajar","balanza","balcón","balde","bambú","banco","banda","baño","barba","barco","barniz","barro","báscula","bastón","basura","batalla","batería","batir","batuta","baúl","bazar","bebé","bebida","bello","besar","beso","bestia","bicho","bien","bingo","blanco","bloque","blusa","boa","bobina","bobo","boca","bocina","boda","bodega","boina","bola","bolero","bolsa","bomba","bondad","bonito","bono","bonsái","borde","borrar","bosque","bote","botín","bóveda","bozal","bravo","brazo","brecha","breve","brillo","brinco","brisa","broca","broma","bronce","brote","bruja","brusco","bruto","buceo","bucle","bueno","buey","bufanda","bufón","búho","buitre","bulto","burbuja","burla","burro","buscar","butaca","buzón","caballo","cabeza","cabina","cabra","cacao","cadáver","cadena","caer","café","caída","caimán","caja","cajón","cal","calamar","calcio","caldo","calidad","calle","calma","calor","calvo","cama","cambio","camello","camino","campo","cáncer","candil","canela","canguro","canica","canto","caña","cañón","caoba","caos","capaz","capitán","capote","captar","capucha","cara","carbón","cárcel","careta","carga","cariño","carne","carpeta","carro","carta","casa","casco","casero","caspa","castor","catorce","catre","caudal","causa","cazo","cebolla","ceder","cedro","celda","célebre","celoso","célula","cemento","ceniza","centro","cerca","cerdo","cereza","cero","cerrar","certeza","césped","cetro","chacal","chaleco","champú","chancla","chapa","charla","chico","chiste","chivo","choque","choza","chuleta","chupar","ciclón","ciego","cielo","cien","cierto","cifra","cigarro","cima","cinco","cine","cinta","ciprés","circo","ciruela","cisne","cita","ciudad","clamor","clan","claro","clase","clave","cliente","clima","clínica","cobre","cocción","cochino","cocina","coco","código","codo","cofre","coger","cohete","cojín","cojo","cola","colcha","colegio","colgar","colina","collar","colmo","columna","combate","comer","comida","cómodo","compra","conde","conejo","conga","conocer","consejo","contar","copa","copia","corazón","corbata","corcho","cordón","corona","correr","coser","cosmos","costa","cráneo","cráter","crear","crecer","creído","crema","cría","crimen","cripta","crisis","cromo","crónica","croqueta","crudo","cruz","cuadro","cuarto","cuatro","cubo","cubrir","cuchara","cuello","cuento","cuerda","cuesta","cueva","cuidar","culebra","culpa","culto","cumbre","cumplir","cuna","cuneta","cuota","cupón","cúpula","curar","curioso","curso","curva","cutis","dama","danza","dar","dardo","dátil","deber","débil","década","decir","dedo","defensa","definir","dejar","delfín","delgado","delito","demora","denso","dental","deporte","derecho","derrota","desayuno","deseo","desfile","desnudo","destino","desvío","detalle","detener","deuda","día","diablo","diadema","diamante","diana","diario","dibujo","dictar","diente","dieta","diez","difícil","digno","dilema","diluir","dinero","directo","dirigir","disco","diseño","disfraz","diva","divino","doble","doce","dolor","domingo","don","donar","dorado","dormir","dorso","dos","dosis","dragón","droga","ducha","duda","duelo","dueño","dulce","dúo","duque","durar","dureza","duro","ébano","ebrio","echar","eco","ecuador","edad","edición","edificio","editor","educar","efecto","eficaz","eje","ejemplo","elefante","elegir","elemento","elevar","elipse","élite","elixir","elogio","eludir","embudo","emitir","emoción","empate","empeño","empleo","empresa","enano","encargo","enchufe","encía","enemigo","enero","enfado","enfermo","engaño","enigma","enlace","enorme","enredo","ensayo","enseñar","entero","entrar","envase","envío","época","equipo","erizo","escala","escena","escolar","escribir","escudo","esencia","esfera","esfuerzo","espada","espejo","espía","esposa","espuma","esquí","estar","este","estilo","estufa","etapa","eterno","ética","etnia","evadir","evaluar","evento","evitar","exacto","examen","exceso","excusa","exento","exigir","exilio","existir","éxito","experto","explicar","exponer","extremo","fábrica","fábula","fachada","fácil","factor","faena","faja","falda","fallo","falso","faltar","fama","familia","famoso","faraón","farmacia","farol","farsa","fase","fatiga","fauna","favor","fax","febrero","fecha","feliz","feo","feria","feroz","fértil","fervor","festín","fiable","fianza","fiar","fibra","ficción","ficha","fideo","fiebre","fiel","fiera","fiesta","figura","fijar","fijo","fila","filete","filial","filtro","fin","finca","fingir","finito","firma","flaco","flauta","flecha","flor","flota","fluir","flujo","flúor","fobia","foca","fogata","fogón","folio","folleto","fondo","forma","forro","fortuna","forzar","fosa","foto","fracaso","frágil","franja","frase","fraude","freír","freno","fresa","frío","frito","fruta","fuego","fuente","fuerza","fuga","fumar","función","funda","furgón","furia","fusil","fútbol","futuro","gacela","gafas","gaita","gajo","gala","galería","gallo","gamba","ganar","gancho","ganga","ganso","garaje","garza","gasolina","gastar","gato","gavilán","gemelo","gemir","gen","género","genio","gente","geranio","gerente","germen","gesto","gigante","gimnasio","girar","giro","glaciar","globo","gloria","gol","golfo","goloso","golpe","goma","gordo","gorila","gorra","gota","goteo","gozar","grada","gráfico","grano","grasa","gratis","grave","grieta","grillo","gripe","gris","grito","grosor","grúa","grueso","grumo","grupo","guante","guapo","guardia","guerra","guía","guiño","guion","guiso","guitarra","gusano","gustar","haber","hábil","hablar","hacer","hacha","hada","hallar","hamaca","harina","haz","hazaña","hebilla","hebra","hecho","helado","helio","hembra","herir","hermano","héroe","hervir","hielo","hierro","hígado","higiene","hijo","himno","historia","hocico","hogar","hoguera","hoja","hombre","hongo","honor","honra","hora","hormiga","horno","hostil","hoyo","hueco","huelga","huerta","hueso","huevo","huida","huir","humano","húmedo","humilde","humo","hundir","huracán","hurto","icono","ideal","idioma","ídolo","iglesia","iglú","igual","ilegal","ilusión","imagen","imán","imitar","impar","imperio","imponer","impulso","incapaz","índice","inerte","infiel","informe","ingenio","inicio","inmenso","inmune","innato","insecto","instante","interés","íntimo","intuir","inútil","invierno","ira","iris","ironía","isla","islote","jabalí","jabón","jamón","jarabe","jardín","jarra","jaula","jazmín","jefe","jeringa","jinete","jornada","joroba","joven","joya","juerga","jueves","juez","jugador","jugo","juguete","juicio","junco","jungla","junio","juntar","júpiter","jurar","justo","juvenil","juzgar","kilo","koala","labio","lacio","lacra","lado","ladrón","lagarto","lágrima","laguna","laico","lamer","lámina","lámpara","lana","lancha","langosta","lanza","lápiz","largo","larva","lástima","lata","látex","latir","laurel","lavar","lazo","leal","lección","leche","lector","leer","legión","legumbre","lejano","lengua","lento","leña","león","leopardo","lesión","letal","letra","leve","leyenda","libertad","libro","licor","líder","lidiar","lienzo","liga","ligero","lima","límite","limón","limpio","lince","lindo","línea","lingote","lino","linterna","líquido","liso","lista","litera","litio","litro","llaga","llama","llanto","llave","llegar","llenar","llevar","llorar","llover","lluvia","lobo","loción","loco","locura","lógica","logro","lombriz","lomo","lonja","lote","lucha","lucir","lugar","lujo","luna","lunes","lupa","lustro","luto","luz","maceta","macho","madera","madre","maduro","maestro","mafia","magia","mago","maíz","maldad","maleta","malla","malo","mamá","mambo","mamut","manco","mando","manejar","manga","maniquí","manjar","mano","manso","manta","mañana","mapa","máquina","mar","marco","marea","marfil","margen","marido","mármol","marrón","martes","marzo","masa","máscara","masivo","matar","materia","matiz","matriz","máximo","mayor","mazorca","mecha","medalla","medio","médula","mejilla","mejor","melena","melón","memoria","menor","mensaje","mente","menú","mercado","merengue","mérito","mes","mesón","meta","meter","método","metro","mezcla","miedo","miel","miembro","miga","mil","milagro","militar","millón","mimo","mina","minero","mínimo","minuto","miope","mirar","misa","miseria","misil","mismo","mitad","mito","mochila","moción","moda","modelo","moho","mojar","molde","moler","molino","momento","momia","monarca","moneda","monja","monto","moño","morada","morder","moreno","morir","morro","morsa","mortal","mosca","mostrar","motivo","mover","móvil","mozo","mucho","mudar","mueble","muela","muerte","muestra","mugre","mujer","mula","muleta","multa","mundo","muñeca","mural","muro","músculo","museo","musgo","música","muslo","nácar","nación","nadar","naipe","naranja","nariz","narrar","nasal","natal","nativo","natural","náusea","naval","nave","navidad","necio","néctar","negar","negocio","negro","neón","nervio","neto","neutro","nevar","nevera","nicho","nido","niebla","nieto","niñez","niño","nítido","nivel","nobleza","noche","nómina","noria","norma","norte","nota","noticia","novato","novela","novio","nube","nuca","núcleo","nudillo","nudo","nuera","nueve","nuez","nulo","número","nutria","oasis","obeso","obispo","objeto","obra","obrero","observar","obtener","obvio","oca","ocaso","océano","ochenta","ocho","ocio","ocre","octavo","octubre","oculto","ocupar","ocurrir","odiar","odio","odisea","oeste","ofensa","oferta","oficio","ofrecer","ogro","oído","oír","ojo","ola","oleada","olfato","olivo","olla","olmo","olor","olvido","ombligo","onda","onza","opaco","opción","ópera","opinar","oponer","optar","óptica","opuesto","oración","orador","oral","órbita","orca","orden","oreja","órgano","orgía","orgullo","oriente","origen","orilla","oro","orquesta","oruga","osadía","oscuro","osezno","oso","ostra","otoño","otro","oveja","óvulo","óxido","oxígeno","oyente","ozono","pacto","padre","paella","página","pago","país","pájaro","palabra","palco","paleta","pálido","palma","paloma","palpar","pan","panal","pánico","pantera","pañuelo","papá","papel","papilla","paquete","parar","parcela","pared","parir","paro","párpado","parque","párrafo","parte","pasar","paseo","pasión","paso","pasta","pata","patio","patria","pausa","pauta","pavo","payaso","peatón","pecado","pecera","pecho","pedal","pedir","pegar","peine","pelar","peldaño","pelea","peligro","pellejo","pelo","peluca","pena","pensar","peñón","peón","peor","pepino","pequeño","pera","percha","perder","pereza","perfil","perico","perla","permiso","perro","persona","pesa","pesca","pésimo","pestaña","pétalo","petróleo","pez","pezuña","picar","pichón","pie","piedra","pierna","pieza","pijama","pilar","piloto","pimienta","pino","pintor","pinza","piña","piojo","pipa","pirata","pisar","piscina","piso","pista","pitón","pizca","placa","plan","plata","playa","plaza","pleito","pleno","plomo","pluma","plural","pobre","poco","poder","podio","poema","poesía","poeta","polen","policía","pollo","polvo","pomada","pomelo","pomo","pompa","poner","porción","portal","posada","poseer","posible","poste","potencia","potro","pozo","prado","precoz","pregunta","premio","prensa","preso","previo","primo","príncipe","prisión","privar","proa","probar","proceso","producto","proeza","profesor","programa","prole","promesa","pronto","propio","próximo","prueba","público","puchero","pudor","pueblo","puerta","puesto","pulga","pulir","pulmón","pulpo","pulso","puma","punto","puñal","puño","pupa","pupila","puré","quedar","queja","quemar","querer","queso","quieto","química","quince","quitar","rábano","rabia","rabo","ración","radical","raíz","rama","rampa","rancho","rango","rapaz","rápido","rapto","rasgo","raspa","rato","rayo","raza","razón","reacción","realidad","rebaño","rebote","recaer","receta","rechazo","recoger","recreo","recto","recurso","red","redondo","reducir","reflejo","reforma","refrán","refugio","regalo","regir","regla","regreso","rehén","reino","reír","reja","relato","relevo","relieve","relleno","reloj","remar","remedio","remo","rencor","rendir","renta","reparto","repetir","reposo","reptil","res","rescate","resina","respeto","resto","resumen","retiro","retorno","retrato","reunir","revés","revista","rey","rezar","rico","riego","rienda","riesgo","rifa","rígido","rigor","rincón","riñón","río","riqueza","risa","ritmo","rito","rizo","roble","roce","rociar","rodar","rodeo","rodilla","roer","rojizo","rojo","romero","romper","ron","ronco","ronda","ropa","ropero","rosa","rosca","rostro","rotar","rubí","rubor","rudo","rueda","rugir","ruido","ruina","ruleta","rulo","rumbo","rumor","ruptura","ruta","rutina","sábado","saber","sabio","sable","sacar","sagaz","sagrado","sala","saldo","salero","salir","salmón","salón","salsa","salto","salud","salvar","samba","sanción","sandía","sanear","sangre","sanidad","sano","santo","sapo","saque","sardina","sartén","sastre","satán","sauna","saxofón","sección","seco","secreto","secta","sed","seguir","seis","sello","selva","semana","semilla","senda","sensor","señal","señor","separar","sepia","sequía","ser","serie","sermón","servir","sesenta","sesión","seta","setenta","severo","sexo","sexto","sidra","siesta","siete","siglo","signo","sílaba","silbar","silencio","silla","símbolo","simio","sirena","sistema","sitio","situar","sobre","socio","sodio","sol","solapa","soldado","soledad","sólido","soltar","solución","sombra","sondeo","sonido","sonoro","sonrisa","sopa","soplar","soporte","sordo","sorpresa","sorteo","sostén","sótano","suave","subir","suceso","sudor","suegra","suelo","sueño","suerte","sufrir","sujeto","sultán","sumar","superar","suplir","suponer","supremo","sur","surco","sureño","surgir","susto","sutil","tabaco","tabique","tabla","tabú","taco","tacto","tajo","talar","talco","talento","talla","talón","tamaño","tambor","tango","tanque","tapa","tapete","tapia","tapón","taquilla","tarde","tarea","tarifa","tarjeta","tarot","tarro","tarta","tatuaje","tauro","taza","tazón","teatro","techo","tecla","técnica","tejado","tejer","tejido","tela","teléfono","tema","temor","templo","tenaz","tender","tener","tenis","tenso","teoría","terapia","terco","término","ternura","terror","tesis","tesoro","testigo","tetera","texto","tez","tibio","tiburón","tiempo","tienda","tierra","tieso","tigre","tijera","tilde","timbre","tímido","timo","tinta","tío","típico","tipo","tira","tirón","titán","títere","título","tiza","toalla","tobillo","tocar","tocino","todo","toga","toldo","tomar","tono","tonto","topar","tope","toque","tórax","torero","tormenta","torneo","toro","torpedo","torre","torso","tortuga","tos","tosco","toser","tóxico","trabajo","tractor","traer","tráfico","trago","traje","tramo","trance","trato","trauma","trazar","trébol","tregua","treinta","tren","trepar","tres","tribu","trigo","tripa","triste","triunfo","trofeo","trompa","tronco","tropa","trote","trozo","truco","trueno","trufa","tubería","tubo","tuerto","tumba","tumor","túnel","túnica","turbina","turismo","turno","tutor","ubicar","úlcera","umbral","unidad","unir","universo","uno","untar","uña","urbano","urbe","urgente","urna","usar","usuario","útil","utopía","uva","vaca","vacío","vacuna","vagar","vago","vaina","vajilla","vale","válido","valle","valor","válvula","vampiro","vara","variar","varón","vaso","vecino","vector","vehículo","veinte","vejez","vela","velero","veloz","vena","vencer","venda","veneno","vengar","venir","venta","venus","ver","verano","verbo","verde","vereda","verja","verso","verter","vía","viaje","vibrar","vicio","víctima","vida","vídeo","vidrio","viejo","viernes","vigor","vil","villa","vinagre","vino","viñedo","violín","viral","virgo","virtud","visor","víspera","vista","vitamina","viudo","vivaz","vivero","vivir","vivo","volcán","volumen","volver","voraz","votar","voto","voz","vuelo","vulgar","yacer","yate","yegua","yema","yerno","yeso","yodo","yoga","yogur","zafiro","zanja","zapato","zarza","zona","zorro","zumo","zurdo"]'),Rc=JSON.parse('["あいこくしん","あいさつ","あいだ","あおぞら","あかちゃん","あきる","あけがた","あける","あこがれる","あさい","あさひ","あしあと","あじわう","あずかる","あずき","あそぶ","あたえる","あたためる","あたりまえ","あたる","あつい","あつかう","あっしゅく","あつまり","あつめる","あてな","あてはまる","あひる","あぶら","あぶる","あふれる","あまい","あまど","あまやかす","あまり","あみもの","あめりか","あやまる","あゆむ","あらいぐま","あらし","あらすじ","あらためる","あらゆる","あらわす","ありがとう","あわせる","あわてる","あんい","あんがい","あんこ","あんぜん","あんてい","あんない","あんまり","いいだす","いおん","いがい","いがく","いきおい","いきなり","いきもの","いきる","いくじ","いくぶん","いけばな","いけん","いこう","いこく","いこつ","いさましい","いさん","いしき","いじゅう","いじょう","いじわる","いずみ","いずれ","いせい","いせえび","いせかい","いせき","いぜん","いそうろう","いそがしい","いだい","いだく","いたずら","いたみ","いたりあ","いちおう","いちじ","いちど","いちば","いちぶ","いちりゅう","いつか","いっしゅん","いっせい","いっそう","いったん","いっち","いってい","いっぽう","いてざ","いてん","いどう","いとこ","いない","いなか","いねむり","いのち","いのる","いはつ","いばる","いはん","いびき","いひん","いふく","いへん","いほう","いみん","いもうと","いもたれ","いもり","いやがる","いやす","いよかん","いよく","いらい","いらすと","いりぐち","いりょう","いれい","いれもの","いれる","いろえんぴつ","いわい","いわう","いわかん","いわば","いわゆる","いんげんまめ","いんさつ","いんしょう","いんよう","うえき","うえる","うおざ","うがい","うかぶ","うかべる","うきわ","うくらいな","うくれれ","うけたまわる","うけつけ","うけとる","うけもつ","うける","うごかす","うごく","うこん","うさぎ","うしなう","うしろがみ","うすい","うすぎ","うすぐらい","うすめる","うせつ","うちあわせ","うちがわ","うちき","うちゅう","うっかり","うつくしい","うったえる","うつる","うどん","うなぎ","うなじ","うなずく","うなる","うねる","うのう","うぶげ","うぶごえ","うまれる","うめる","うもう","うやまう","うよく","うらがえす","うらぐち","うらない","うりあげ","うりきれ","うるさい","うれしい","うれゆき","うれる","うろこ","うわき","うわさ","うんこう","うんちん","うんてん","うんどう","えいえん","えいが","えいきょう","えいご","えいせい","えいぶん","えいよう","えいわ","えおり","えがお","えがく","えきたい","えくせる","えしゃく","えすて","えつらん","えのぐ","えほうまき","えほん","えまき","えもじ","えもの","えらい","えらぶ","えりあ","えんえん","えんかい","えんぎ","えんげき","えんしゅう","えんぜつ","えんそく","えんちょう","えんとつ","おいかける","おいこす","おいしい","おいつく","おうえん","おうさま","おうじ","おうせつ","おうたい","おうふく","おうべい","おうよう","おえる","おおい","おおう","おおどおり","おおや","おおよそ","おかえり","おかず","おがむ","おかわり","おぎなう","おきる","おくさま","おくじょう","おくりがな","おくる","おくれる","おこす","おこなう","おこる","おさえる","おさない","おさめる","おしいれ","おしえる","おじぎ","おじさん","おしゃれ","おそらく","おそわる","おたがい","おたく","おだやか","おちつく","おっと","おつり","おでかけ","おとしもの","おとなしい","おどり","おどろかす","おばさん","おまいり","おめでとう","おもいで","おもう","おもたい","おもちゃ","おやつ","おやゆび","およぼす","おらんだ","おろす","おんがく","おんけい","おんしゃ","おんせん","おんだん","おんちゅう","おんどけい","かあつ","かいが","がいき","がいけん","がいこう","かいさつ","かいしゃ","かいすいよく","かいぜん","かいぞうど","かいつう","かいてん","かいとう","かいふく","がいへき","かいほう","かいよう","がいらい","かいわ","かえる","かおり","かかえる","かがく","かがし","かがみ","かくご","かくとく","かざる","がぞう","かたい","かたち","がちょう","がっきゅう","がっこう","がっさん","がっしょう","かなざわし","かのう","がはく","かぶか","かほう","かほご","かまう","かまぼこ","かめれおん","かゆい","かようび","からい","かるい","かろう","かわく","かわら","がんか","かんけい","かんこう","かんしゃ","かんそう","かんたん","かんち","がんばる","きあい","きあつ","きいろ","ぎいん","きうい","きうん","きえる","きおう","きおく","きおち","きおん","きかい","きかく","きかんしゃ","ききて","きくばり","きくらげ","きけんせい","きこう","きこえる","きこく","きさい","きさく","きさま","きさらぎ","ぎじかがく","ぎしき","ぎじたいけん","ぎじにってい","ぎじゅつしゃ","きすう","きせい","きせき","きせつ","きそう","きぞく","きぞん","きたえる","きちょう","きつえん","ぎっちり","きつつき","きつね","きてい","きどう","きどく","きない","きなが","きなこ","きぬごし","きねん","きのう","きのした","きはく","きびしい","きひん","きふく","きぶん","きぼう","きほん","きまる","きみつ","きむずかしい","きめる","きもだめし","きもち","きもの","きゃく","きやく","ぎゅうにく","きよう","きょうりゅう","きらい","きらく","きりん","きれい","きれつ","きろく","ぎろん","きわめる","ぎんいろ","きんかくじ","きんじょ","きんようび","ぐあい","くいず","くうかん","くうき","くうぐん","くうこう","ぐうせい","くうそう","ぐうたら","くうふく","くうぼ","くかん","くきょう","くげん","ぐこう","くさい","くさき","くさばな","くさる","くしゃみ","くしょう","くすのき","くすりゆび","くせげ","くせん","ぐたいてき","くださる","くたびれる","くちこみ","くちさき","くつした","ぐっすり","くつろぐ","くとうてん","くどく","くなん","くねくね","くのう","くふう","くみあわせ","くみたてる","くめる","くやくしょ","くらす","くらべる","くるま","くれる","くろう","くわしい","ぐんかん","ぐんしょく","ぐんたい","ぐんて","けあな","けいかく","けいけん","けいこ","けいさつ","げいじゅつ","けいたい","げいのうじん","けいれき","けいろ","けおとす","けおりもの","げきか","げきげん","げきだん","げきちん","げきとつ","げきは","げきやく","げこう","げこくじょう","げざい","けさき","げざん","けしき","けしごむ","けしょう","げすと","けたば","けちゃっぷ","けちらす","けつあつ","けつい","けつえき","けっこん","けつじょ","けっせき","けってい","けつまつ","げつようび","げつれい","けつろん","げどく","けとばす","けとる","けなげ","けなす","けなみ","けぬき","げねつ","けねん","けはい","げひん","けぶかい","げぼく","けまり","けみかる","けむし","けむり","けもの","けらい","けろけろ","けわしい","けんい","けんえつ","けんお","けんか","げんき","けんげん","けんこう","けんさく","けんしゅう","けんすう","げんそう","けんちく","けんてい","けんとう","けんない","けんにん","げんぶつ","けんま","けんみん","けんめい","けんらん","けんり","こあくま","こいぬ","こいびと","ごうい","こうえん","こうおん","こうかん","ごうきゅう","ごうけい","こうこう","こうさい","こうじ","こうすい","ごうせい","こうそく","こうたい","こうちゃ","こうつう","こうてい","こうどう","こうない","こうはい","ごうほう","ごうまん","こうもく","こうりつ","こえる","こおり","ごかい","ごがつ","ごかん","こくご","こくさい","こくとう","こくない","こくはく","こぐま","こけい","こける","ここのか","こころ","こさめ","こしつ","こすう","こせい","こせき","こぜん","こそだて","こたい","こたえる","こたつ","こちょう","こっか","こつこつ","こつばん","こつぶ","こてい","こてん","ことがら","ことし","ことば","ことり","こなごな","こねこね","このまま","このみ","このよ","ごはん","こひつじ","こふう","こふん","こぼれる","ごまあぶら","こまかい","ごますり","こまつな","こまる","こむぎこ","こもじ","こもち","こもの","こもん","こやく","こやま","こゆう","こゆび","こよい","こよう","こりる","これくしょん","ころっけ","こわもて","こわれる","こんいん","こんかい","こんき","こんしゅう","こんすい","こんだて","こんとん","こんなん","こんびに","こんぽん","こんまけ","こんや","こんれい","こんわく","ざいえき","さいかい","さいきん","ざいげん","ざいこ","さいしょ","さいせい","ざいたく","ざいちゅう","さいてき","ざいりょう","さうな","さかいし","さがす","さかな","さかみち","さがる","さぎょう","さくし","さくひん","さくら","さこく","さこつ","さずかる","ざせき","さたん","さつえい","ざつおん","ざっか","ざつがく","さっきょく","ざっし","さつじん","ざっそう","さつたば","さつまいも","さてい","さといも","さとう","さとおや","さとし","さとる","さのう","さばく","さびしい","さべつ","さほう","さほど","さます","さみしい","さみだれ","さむけ","さめる","さやえんどう","さゆう","さよう","さよく","さらだ","ざるそば","さわやか","さわる","さんいん","さんか","さんきゃく","さんこう","さんさい","ざんしょ","さんすう","さんせい","さんそ","さんち","さんま","さんみ","さんらん","しあい","しあげ","しあさって","しあわせ","しいく","しいん","しうち","しえい","しおけ","しかい","しかく","じかん","しごと","しすう","じだい","したうけ","したぎ","したて","したみ","しちょう","しちりん","しっかり","しつじ","しつもん","してい","してき","してつ","じてん","じどう","しなぎれ","しなもの","しなん","しねま","しねん","しのぐ","しのぶ","しはい","しばかり","しはつ","しはらい","しはん","しひょう","しふく","じぶん","しへい","しほう","しほん","しまう","しまる","しみん","しむける","じむしょ","しめい","しめる","しもん","しゃいん","しゃうん","しゃおん","じゃがいも","しやくしょ","しゃくほう","しゃけん","しゃこ","しゃざい","しゃしん","しゃせん","しゃそう","しゃたい","しゃちょう","しゃっきん","じゃま","しゃりん","しゃれい","じゆう","じゅうしょ","しゅくはく","じゅしん","しゅっせき","しゅみ","しゅらば","じゅんばん","しょうかい","しょくたく","しょっけん","しょどう","しょもつ","しらせる","しらべる","しんか","しんこう","じんじゃ","しんせいじ","しんちく","しんりん","すあげ","すあし","すあな","ずあん","すいえい","すいか","すいとう","ずいぶん","すいようび","すうがく","すうじつ","すうせん","すおどり","すきま","すくう","すくない","すける","すごい","すこし","ずさん","すずしい","すすむ","すすめる","すっかり","ずっしり","ずっと","すてき","すてる","すねる","すのこ","すはだ","すばらしい","ずひょう","ずぶぬれ","すぶり","すふれ","すべて","すべる","ずほう","すぼん","すまい","すめし","すもう","すやき","すらすら","するめ","すれちがう","すろっと","すわる","すんぜん","すんぽう","せあぶら","せいかつ","せいげん","せいじ","せいよう","せおう","せかいかん","せきにん","せきむ","せきゆ","せきらんうん","せけん","せこう","せすじ","せたい","せたけ","せっかく","せっきゃく","ぜっく","せっけん","せっこつ","せっさたくま","せつぞく","せつだん","せつでん","せっぱん","せつび","せつぶん","せつめい","せつりつ","せなか","せのび","せはば","せびろ","せぼね","せまい","せまる","せめる","せもたれ","せりふ","ぜんあく","せんい","せんえい","せんか","せんきょ","せんく","せんげん","ぜんご","せんさい","せんしゅ","せんすい","せんせい","せんぞ","せんたく","せんちょう","せんてい","せんとう","せんぬき","せんねん","せんぱい","ぜんぶ","ぜんぽう","せんむ","せんめんじょ","せんもん","せんやく","せんゆう","せんよう","ぜんら","ぜんりゃく","せんれい","せんろ","そあく","そいとげる","そいね","そうがんきょう","そうき","そうご","そうしん","そうだん","そうなん","そうび","そうめん","そうり","そえもの","そえん","そがい","そげき","そこう","そこそこ","そざい","そしな","そせい","そせん","そそぐ","そだてる","そつう","そつえん","そっかん","そつぎょう","そっけつ","そっこう","そっせん","そっと","そとがわ","そとづら","そなえる","そなた","そふぼ","そぼく","そぼろ","そまつ","そまる","そむく","そむりえ","そめる","そもそも","そよかぜ","そらまめ","そろう","そんかい","そんけい","そんざい","そんしつ","そんぞく","そんちょう","ぞんび","ぞんぶん","そんみん","たあい","たいいん","たいうん","たいえき","たいおう","だいがく","たいき","たいぐう","たいけん","たいこ","たいざい","だいじょうぶ","だいすき","たいせつ","たいそう","だいたい","たいちょう","たいてい","だいどころ","たいない","たいねつ","たいのう","たいはん","だいひょう","たいふう","たいへん","たいほ","たいまつばな","たいみんぐ","たいむ","たいめん","たいやき","たいよう","たいら","たいりょく","たいる","たいわん","たうえ","たえる","たおす","たおる","たおれる","たかい","たかね","たきび","たくさん","たこく","たこやき","たさい","たしざん","だじゃれ","たすける","たずさわる","たそがれ","たたかう","たたく","ただしい","たたみ","たちばな","だっかい","だっきゃく","だっこ","だっしゅつ","だったい","たてる","たとえる","たなばた","たにん","たぬき","たのしみ","たはつ","たぶん","たべる","たぼう","たまご","たまる","だむる","ためいき","ためす","ためる","たもつ","たやすい","たよる","たらす","たりきほんがん","たりょう","たりる","たると","たれる","たれんと","たろっと","たわむれる","だんあつ","たんい","たんおん","たんか","たんき","たんけん","たんご","たんさん","たんじょうび","だんせい","たんそく","たんたい","だんち","たんてい","たんとう","だんな","たんにん","だんねつ","たんのう","たんぴん","だんぼう","たんまつ","たんめい","だんれつ","だんろ","だんわ","ちあい","ちあん","ちいき","ちいさい","ちえん","ちかい","ちから","ちきゅう","ちきん","ちけいず","ちけん","ちこく","ちさい","ちしき","ちしりょう","ちせい","ちそう","ちたい","ちたん","ちちおや","ちつじょ","ちてき","ちてん","ちぬき","ちぬり","ちのう","ちひょう","ちへいせん","ちほう","ちまた","ちみつ","ちみどろ","ちめいど","ちゃんこなべ","ちゅうい","ちゆりょく","ちょうし","ちょさくけん","ちらし","ちらみ","ちりがみ","ちりょう","ちるど","ちわわ","ちんたい","ちんもく","ついか","ついたち","つうか","つうじょう","つうはん","つうわ","つかう","つかれる","つくね","つくる","つけね","つける","つごう","つたえる","つづく","つつじ","つつむ","つとめる","つながる","つなみ","つねづね","つのる","つぶす","つまらない","つまる","つみき","つめたい","つもり","つもる","つよい","つるぼ","つるみく","つわもの","つわり","てあし","てあて","てあみ","ていおん","ていか","ていき","ていけい","ていこく","ていさつ","ていし","ていせい","ていたい","ていど","ていねい","ていひょう","ていへん","ていぼう","てうち","ておくれ","てきとう","てくび","でこぼこ","てさぎょう","てさげ","てすり","てそう","てちがい","てちょう","てつがく","てつづき","でっぱ","てつぼう","てつや","でぬかえ","てぬき","てぬぐい","てのひら","てはい","てぶくろ","てふだ","てほどき","てほん","てまえ","てまきずし","てみじか","てみやげ","てらす","てれび","てわけ","てわたし","でんあつ","てんいん","てんかい","てんき","てんぐ","てんけん","てんごく","てんさい","てんし","てんすう","でんち","てんてき","てんとう","てんない","てんぷら","てんぼうだい","てんめつ","てんらんかい","でんりょく","でんわ","どあい","といれ","どうかん","とうきゅう","どうぐ","とうし","とうむぎ","とおい","とおか","とおく","とおす","とおる","とかい","とかす","ときおり","ときどき","とくい","とくしゅう","とくてん","とくに","とくべつ","とけい","とける","とこや","とさか","としょかん","とそう","とたん","とちゅう","とっきゅう","とっくん","とつぜん","とつにゅう","とどける","ととのえる","とない","となえる","となり","とのさま","とばす","どぶがわ","とほう","とまる","とめる","ともだち","ともる","どようび","とらえる","とんかつ","どんぶり","ないかく","ないこう","ないしょ","ないす","ないせん","ないそう","なおす","ながい","なくす","なげる","なこうど","なさけ","なたでここ","なっとう","なつやすみ","ななおし","なにごと","なにもの","なにわ","なのか","なふだ","なまいき","なまえ","なまみ","なみだ","なめらか","なめる","なやむ","ならう","ならび","ならぶ","なれる","なわとび","なわばり","にあう","にいがた","にうけ","におい","にかい","にがて","にきび","にくしみ","にくまん","にげる","にさんかたんそ","にしき","にせもの","にちじょう","にちようび","にっか","にっき","にっけい","にっこう","にっさん","にっしょく","にっすう","にっせき","にってい","になう","にほん","にまめ","にもつ","にやり","にゅういん","にりんしゃ","にわとり","にんい","にんか","にんき","にんげん","にんしき","にんずう","にんそう","にんたい","にんち","にんてい","にんにく","にんぷ","にんまり","にんむ","にんめい","にんよう","ぬいくぎ","ぬかす","ぬぐいとる","ぬぐう","ぬくもり","ぬすむ","ぬまえび","ぬめり","ぬらす","ぬんちゃく","ねあげ","ねいき","ねいる","ねいろ","ねぐせ","ねくたい","ねくら","ねこぜ","ねこむ","ねさげ","ねすごす","ねそべる","ねだん","ねつい","ねっしん","ねつぞう","ねったいぎょ","ねぶそく","ねふだ","ねぼう","ねほりはほり","ねまき","ねまわし","ねみみ","ねむい","ねむたい","ねもと","ねらう","ねわざ","ねんいり","ねんおし","ねんかん","ねんきん","ねんぐ","ねんざ","ねんし","ねんちゃく","ねんど","ねんぴ","ねんぶつ","ねんまつ","ねんりょう","ねんれい","のいず","のおづま","のがす","のきなみ","のこぎり","のこす","のこる","のせる","のぞく","のぞむ","のたまう","のちほど","のっく","のばす","のはら","のべる","のぼる","のみもの","のやま","のらいぬ","のらねこ","のりもの","のりゆき","のれん","のんき","ばあい","はあく","ばあさん","ばいか","ばいく","はいけん","はいご","はいしん","はいすい","はいせん","はいそう","はいち","ばいばい","はいれつ","はえる","はおる","はかい","ばかり","はかる","はくしゅ","はけん","はこぶ","はさみ","はさん","はしご","ばしょ","はしる","はせる","ぱそこん","はそん","はたん","はちみつ","はつおん","はっかく","はづき","はっきり","はっくつ","はっけん","はっこう","はっさん","はっしん","はったつ","はっちゅう","はってん","はっぴょう","はっぽう","はなす","はなび","はにかむ","はぶらし","はみがき","はむかう","はめつ","はやい","はやし","はらう","はろうぃん","はわい","はんい","はんえい","はんおん","はんかく","はんきょう","ばんぐみ","はんこ","はんしゃ","はんすう","はんだん","ぱんち","ぱんつ","はんてい","はんとし","はんのう","はんぱ","はんぶん","はんぺん","はんぼうき","はんめい","はんらん","はんろん","ひいき","ひうん","ひえる","ひかく","ひかり","ひかる","ひかん","ひくい","ひけつ","ひこうき","ひこく","ひさい","ひさしぶり","ひさん","びじゅつかん","ひしょ","ひそか","ひそむ","ひたむき","ひだり","ひたる","ひつぎ","ひっこし","ひっし","ひつじゅひん","ひっす","ひつぜん","ぴったり","ぴっちり","ひつよう","ひてい","ひとごみ","ひなまつり","ひなん","ひねる","ひはん","ひびく","ひひょう","ひほう","ひまわり","ひまん","ひみつ","ひめい","ひめじし","ひやけ","ひやす","ひよう","びょうき","ひらがな","ひらく","ひりつ","ひりょう","ひるま","ひるやすみ","ひれい","ひろい","ひろう","ひろき","ひろゆき","ひんかく","ひんけつ","ひんこん","ひんしゅ","ひんそう","ぴんち","ひんぱん","びんぼう","ふあん","ふいうち","ふうけい","ふうせん","ぷうたろう","ふうとう","ふうふ","ふえる","ふおん","ふかい","ふきん","ふくざつ","ふくぶくろ","ふこう","ふさい","ふしぎ","ふじみ","ふすま","ふせい","ふせぐ","ふそく","ぶたにく","ふたん","ふちょう","ふつう","ふつか","ふっかつ","ふっき","ふっこく","ぶどう","ふとる","ふとん","ふのう","ふはい","ふひょう","ふへん","ふまん","ふみん","ふめつ","ふめん","ふよう","ふりこ","ふりる","ふるい","ふんいき","ぶんがく","ぶんぐ","ふんしつ","ぶんせき","ふんそう","ぶんぽう","へいあん","へいおん","へいがい","へいき","へいげん","へいこう","へいさ","へいしゃ","へいせつ","へいそ","へいたく","へいてん","へいねつ","へいわ","へきが","へこむ","べにいろ","べにしょうが","へらす","へんかん","べんきょう","べんごし","へんさい","へんたい","べんり","ほあん","ほいく","ぼうぎょ","ほうこく","ほうそう","ほうほう","ほうもん","ほうりつ","ほえる","ほおん","ほかん","ほきょう","ぼきん","ほくろ","ほけつ","ほけん","ほこう","ほこる","ほしい","ほしつ","ほしゅ","ほしょう","ほせい","ほそい","ほそく","ほたて","ほたる","ぽちぶくろ","ほっきょく","ほっさ","ほったん","ほとんど","ほめる","ほんい","ほんき","ほんけ","ほんしつ","ほんやく","まいにち","まかい","まかせる","まがる","まける","まこと","まさつ","まじめ","ますく","まぜる","まつり","まとめ","まなぶ","まぬけ","まねく","まほう","まもる","まゆげ","まよう","まろやか","まわす","まわり","まわる","まんが","まんきつ","まんぞく","まんなか","みいら","みうち","みえる","みがく","みかた","みかん","みけん","みこん","みじかい","みすい","みすえる","みせる","みっか","みつかる","みつける","みてい","みとめる","みなと","みなみかさい","みねらる","みのう","みのがす","みほん","みもと","みやげ","みらい","みりょく","みわく","みんか","みんぞく","むいか","むえき","むえん","むかい","むかう","むかえ","むかし","むぎちゃ","むける","むげん","むさぼる","むしあつい","むしば","むじゅん","むしろ","むすう","むすこ","むすぶ","むすめ","むせる","むせん","むちゅう","むなしい","むのう","むやみ","むよう","むらさき","むりょう","むろん","めいあん","めいうん","めいえん","めいかく","めいきょく","めいさい","めいし","めいそう","めいぶつ","めいれい","めいわく","めぐまれる","めざす","めした","めずらしい","めだつ","めまい","めやす","めんきょ","めんせき","めんどう","もうしあげる","もうどうけん","もえる","もくし","もくてき","もくようび","もちろん","もどる","もらう","もんく","もんだい","やおや","やける","やさい","やさしい","やすい","やすたろう","やすみ","やせる","やそう","やたい","やちん","やっと","やっぱり","やぶる","やめる","ややこしい","やよい","やわらかい","ゆうき","ゆうびんきょく","ゆうべ","ゆうめい","ゆけつ","ゆしゅつ","ゆせん","ゆそう","ゆたか","ゆちゃく","ゆでる","ゆにゅう","ゆびわ","ゆらい","ゆれる","ようい","ようか","ようきゅう","ようじ","ようす","ようちえん","よかぜ","よかん","よきん","よくせい","よくぼう","よけい","よごれる","よさん","よしゅう","よそう","よそく","よっか","よてい","よどがわく","よねつ","よやく","よゆう","よろこぶ","よろしい","らいう","らくがき","らくご","らくさつ","らくだ","らしんばん","らせん","らぞく","らたい","らっか","られつ","りえき","りかい","りきさく","りきせつ","りくぐん","りくつ","りけん","りこう","りせい","りそう","りそく","りてん","りねん","りゆう","りゅうがく","りよう","りょうり","りょかん","りょくちゃ","りょこう","りりく","りれき","りろん","りんご","るいけい","るいさい","るいじ","るいせき","るすばん","るりがわら","れいかん","れいぎ","れいせい","れいぞうこ","れいとう","れいぼう","れきし","れきだい","れんあい","れんけい","れんこん","れんさい","れんしゅう","れんぞく","れんらく","ろうか","ろうご","ろうじん","ろうそく","ろくが","ろこつ","ろじうら","ろしゅつ","ろせん","ろてん","ろめん","ろれつ","ろんぎ","ろんぱ","ろんぶん","ろんり","わかす","わかめ","わかやま","わかれる","わしつ","わじまし","わすれもの","わらう","われる"]'),Cc=JSON.parse('["abacate","abaixo","abalar","abater","abduzir","abelha","aberto","abismo","abotoar","abranger","abreviar","abrigar","abrupto","absinto","absoluto","absurdo","abutre","acabado","acalmar","acampar","acanhar","acaso","aceitar","acelerar","acenar","acervo","acessar","acetona","achatar","acidez","acima","acionado","acirrar","aclamar","aclive","acolhida","acomodar","acoplar","acordar","acumular","acusador","adaptar","adega","adentro","adepto","adequar","aderente","adesivo","adeus","adiante","aditivo","adjetivo","adjunto","admirar","adorar","adquirir","adubo","adverso","advogado","aeronave","afastar","aferir","afetivo","afinador","afivelar","aflito","afluente","afrontar","agachar","agarrar","agasalho","agenciar","agilizar","agiota","agitado","agora","agradar","agreste","agrupar","aguardar","agulha","ajoelhar","ajudar","ajustar","alameda","alarme","alastrar","alavanca","albergue","albino","alcatra","aldeia","alecrim","alegria","alertar","alface","alfinete","algum","alheio","aliar","alicate","alienar","alinhar","aliviar","almofada","alocar","alpiste","alterar","altitude","alucinar","alugar","aluno","alusivo","alvo","amaciar","amador","amarelo","amassar","ambas","ambiente","ameixa","amenizar","amido","amistoso","amizade","amolador","amontoar","amoroso","amostra","amparar","ampliar","ampola","anagrama","analisar","anarquia","anatomia","andaime","anel","anexo","angular","animar","anjo","anomalia","anotado","ansioso","anterior","anuidade","anunciar","anzol","apagador","apalpar","apanhado","apego","apelido","apertada","apesar","apetite","apito","aplauso","aplicada","apoio","apontar","aposta","aprendiz","aprovar","aquecer","arame","aranha","arara","arcada","ardente","areia","arejar","arenito","aresta","argiloso","argola","arma","arquivo","arraial","arrebate","arriscar","arroba","arrumar","arsenal","arterial","artigo","arvoredo","asfaltar","asilado","aspirar","assador","assinar","assoalho","assunto","astral","atacado","atadura","atalho","atarefar","atear","atender","aterro","ateu","atingir","atirador","ativo","atoleiro","atracar","atrevido","atriz","atual","atum","auditor","aumentar","aura","aurora","autismo","autoria","autuar","avaliar","avante","avaria","avental","avesso","aviador","avisar","avulso","axila","azarar","azedo","azeite","azulejo","babar","babosa","bacalhau","bacharel","bacia","bagagem","baiano","bailar","baioneta","bairro","baixista","bajular","baleia","baliza","balsa","banal","bandeira","banho","banir","banquete","barato","barbado","baronesa","barraca","barulho","baseado","bastante","batata","batedor","batida","batom","batucar","baunilha","beber","beijo","beirada","beisebol","beldade","beleza","belga","beliscar","bendito","bengala","benzer","berimbau","berlinda","berro","besouro","bexiga","bezerro","bico","bicudo","bienal","bifocal","bifurcar","bigorna","bilhete","bimestre","bimotor","biologia","biombo","biosfera","bipolar","birrento","biscoito","bisneto","bispo","bissexto","bitola","bizarro","blindado","bloco","bloquear","boato","bobagem","bocado","bocejo","bochecha","boicotar","bolada","boletim","bolha","bolo","bombeiro","bonde","boneco","bonita","borbulha","borda","boreal","borracha","bovino","boxeador","branco","brasa","braveza","breu","briga","brilho","brincar","broa","brochura","bronzear","broto","bruxo","bucha","budismo","bufar","bule","buraco","busca","busto","buzina","cabana","cabelo","cabide","cabo","cabrito","cacau","cacetada","cachorro","cacique","cadastro","cadeado","cafezal","caiaque","caipira","caixote","cajado","caju","calafrio","calcular","caldeira","calibrar","calmante","calota","camada","cambista","camisa","camomila","campanha","camuflar","canavial","cancelar","caneta","canguru","canhoto","canivete","canoa","cansado","cantar","canudo","capacho","capela","capinar","capotar","capricho","captador","capuz","caracol","carbono","cardeal","careca","carimbar","carneiro","carpete","carreira","cartaz","carvalho","casaco","casca","casebre","castelo","casulo","catarata","cativar","caule","causador","cautelar","cavalo","caverna","cebola","cedilha","cegonha","celebrar","celular","cenoura","censo","centeio","cercar","cerrado","certeiro","cerveja","cetim","cevada","chacota","chaleira","chamado","chapada","charme","chatice","chave","chefe","chegada","cheiro","cheque","chicote","chifre","chinelo","chocalho","chover","chumbo","chutar","chuva","cicatriz","ciclone","cidade","cidreira","ciente","cigana","cimento","cinto","cinza","ciranda","circuito","cirurgia","citar","clareza","clero","clicar","clone","clube","coado","coagir","cobaia","cobertor","cobrar","cocada","coelho","coentro","coeso","cogumelo","coibir","coifa","coiote","colar","coleira","colher","colidir","colmeia","colono","coluna","comando","combinar","comentar","comitiva","comover","complexo","comum","concha","condor","conectar","confuso","congelar","conhecer","conjugar","consumir","contrato","convite","cooperar","copeiro","copiador","copo","coquetel","coragem","cordial","corneta","coronha","corporal","correio","cortejo","coruja","corvo","cosseno","costela","cotonete","couro","couve","covil","cozinha","cratera","cravo","creche","credor","creme","crer","crespo","criada","criminal","crioulo","crise","criticar","crosta","crua","cruzeiro","cubano","cueca","cuidado","cujo","culatra","culminar","culpar","cultura","cumprir","cunhado","cupido","curativo","curral","cursar","curto","cuspir","custear","cutelo","damasco","datar","debater","debitar","deboche","debulhar","decalque","decimal","declive","decote","decretar","dedal","dedicado","deduzir","defesa","defumar","degelo","degrau","degustar","deitado","deixar","delator","delegado","delinear","delonga","demanda","demitir","demolido","dentista","depenado","depilar","depois","depressa","depurar","deriva","derramar","desafio","desbotar","descanso","desenho","desfiado","desgaste","desigual","deslize","desmamar","desova","despesa","destaque","desviar","detalhar","detentor","detonar","detrito","deusa","dever","devido","devotado","dezena","diagrama","dialeto","didata","difuso","digitar","dilatado","diluente","diminuir","dinastia","dinheiro","diocese","direto","discreta","disfarce","disparo","disquete","dissipar","distante","ditador","diurno","diverso","divisor","divulgar","dizer","dobrador","dolorido","domador","dominado","donativo","donzela","dormente","dorsal","dosagem","dourado","doutor","drenagem","drible","drogaria","duelar","duende","dueto","duplo","duquesa","durante","duvidoso","eclodir","ecoar","ecologia","edificar","edital","educado","efeito","efetivar","ejetar","elaborar","eleger","eleitor","elenco","elevador","eliminar","elogiar","embargo","embolado","embrulho","embutido","emenda","emergir","emissor","empatia","empenho","empinado","empolgar","emprego","empurrar","emulador","encaixe","encenado","enchente","encontro","endeusar","endossar","enfaixar","enfeite","enfim","engajado","engenho","englobar","engomado","engraxar","enguia","enjoar","enlatar","enquanto","enraizar","enrolado","enrugar","ensaio","enseada","ensino","ensopado","entanto","enteado","entidade","entortar","entrada","entulho","envergar","enviado","envolver","enxame","enxerto","enxofre","enxuto","epiderme","equipar","ereto","erguido","errata","erva","ervilha","esbanjar","esbelto","escama","escola","escrita","escuta","esfinge","esfolar","esfregar","esfumado","esgrima","esmalte","espanto","espelho","espiga","esponja","espreita","espumar","esquerda","estaca","esteira","esticar","estofado","estrela","estudo","esvaziar","etanol","etiqueta","euforia","europeu","evacuar","evaporar","evasivo","eventual","evidente","evoluir","exagero","exalar","examinar","exato","exausto","excesso","excitar","exclamar","executar","exemplo","exibir","exigente","exonerar","expandir","expelir","expirar","explanar","exposto","expresso","expulsar","externo","extinto","extrato","fabricar","fabuloso","faceta","facial","fada","fadiga","faixa","falar","falta","familiar","fandango","fanfarra","fantoche","fardado","farelo","farinha","farofa","farpa","fartura","fatia","fator","favorita","faxina","fazenda","fechado","feijoada","feirante","felino","feminino","fenda","feno","fera","feriado","ferrugem","ferver","festejar","fetal","feudal","fiapo","fibrose","ficar","ficheiro","figurado","fileira","filho","filme","filtrar","firmeza","fisgada","fissura","fita","fivela","fixador","fixo","flacidez","flamingo","flanela","flechada","flora","flutuar","fluxo","focal","focinho","fofocar","fogo","foguete","foice","folgado","folheto","forjar","formiga","forno","forte","fosco","fossa","fragata","fralda","frango","frasco","fraterno","freira","frente","fretar","frieza","friso","fritura","fronha","frustrar","fruteira","fugir","fulano","fuligem","fundar","fungo","funil","furador","furioso","futebol","gabarito","gabinete","gado","gaiato","gaiola","gaivota","galega","galho","galinha","galocha","ganhar","garagem","garfo","gargalo","garimpo","garoupa","garrafa","gasoduto","gasto","gata","gatilho","gaveta","gazela","gelado","geleia","gelo","gemada","gemer","gemido","generoso","gengiva","genial","genoma","genro","geologia","gerador","germinar","gesso","gestor","ginasta","gincana","gingado","girafa","girino","glacial","glicose","global","glorioso","goela","goiaba","golfe","golpear","gordura","gorjeta","gorro","gostoso","goteira","governar","gracejo","gradual","grafite","gralha","grampo","granada","gratuito","graveto","graxa","grego","grelhar","greve","grilo","grisalho","gritaria","grosso","grotesco","grudado","grunhido","gruta","guache","guarani","guaxinim","guerrear","guiar","guincho","guisado","gula","guloso","guru","habitar","harmonia","haste","haver","hectare","herdar","heresia","hesitar","hiato","hibernar","hidratar","hiena","hino","hipismo","hipnose","hipoteca","hoje","holofote","homem","honesto","honrado","hormonal","hospedar","humorado","iate","ideia","idoso","ignorado","igreja","iguana","ileso","ilha","iludido","iluminar","ilustrar","imagem","imediato","imenso","imersivo","iminente","imitador","imortal","impacto","impedir","implante","impor","imprensa","impune","imunizar","inalador","inapto","inativo","incenso","inchar","incidir","incluir","incolor","indeciso","indireto","indutor","ineficaz","inerente","infantil","infestar","infinito","inflamar","informal","infrator","ingerir","inibido","inicial","inimigo","injetar","inocente","inodoro","inovador","inox","inquieto","inscrito","inseto","insistir","inspetor","instalar","insulto","intacto","integral","intimar","intocado","intriga","invasor","inverno","invicto","invocar","iogurte","iraniano","ironizar","irreal","irritado","isca","isento","isolado","isqueiro","italiano","janeiro","jangada","janta","jararaca","jardim","jarro","jasmim","jato","javali","jazida","jejum","joaninha","joelhada","jogador","joia","jornal","jorrar","jovem","juba","judeu","judoca","juiz","julgador","julho","jurado","jurista","juro","justa","labareda","laboral","lacre","lactante","ladrilho","lagarta","lagoa","laje","lamber","lamentar","laminar","lampejo","lanche","lapidar","lapso","laranja","lareira","largura","lasanha","lastro","lateral","latido","lavanda","lavoura","lavrador","laxante","lazer","lealdade","lebre","legado","legendar","legista","leigo","leiloar","leitura","lembrete","leme","lenhador","lentilha","leoa","lesma","leste","letivo","letreiro","levar","leveza","levitar","liberal","libido","liderar","ligar","ligeiro","limitar","limoeiro","limpador","linda","linear","linhagem","liquidez","listagem","lisura","litoral","livro","lixa","lixeira","locador","locutor","lojista","lombo","lona","longe","lontra","lorde","lotado","loteria","loucura","lousa","louvar","luar","lucidez","lucro","luneta","lustre","lutador","luva","macaco","macete","machado","macio","madeira","madrinha","magnata","magreza","maior","mais","malandro","malha","malote","maluco","mamilo","mamoeiro","mamute","manada","mancha","mandato","manequim","manhoso","manivela","manobrar","mansa","manter","manusear","mapeado","maquinar","marcador","maresia","marfim","margem","marinho","marmita","maroto","marquise","marreco","martelo","marujo","mascote","masmorra","massagem","mastigar","matagal","materno","matinal","matutar","maxilar","medalha","medida","medusa","megafone","meiga","melancia","melhor","membro","memorial","menino","menos","mensagem","mental","merecer","mergulho","mesada","mesclar","mesmo","mesquita","mestre","metade","meteoro","metragem","mexer","mexicano","micro","migalha","migrar","milagre","milenar","milhar","mimado","minerar","minhoca","ministro","minoria","miolo","mirante","mirtilo","misturar","mocidade","moderno","modular","moeda","moer","moinho","moita","moldura","moleza","molho","molinete","molusco","montanha","moqueca","morango","morcego","mordomo","morena","mosaico","mosquete","mostarda","motel","motim","moto","motriz","muda","muito","mulata","mulher","multar","mundial","munido","muralha","murcho","muscular","museu","musical","nacional","nadador","naja","namoro","narina","narrado","nascer","nativa","natureza","navalha","navegar","navio","neblina","nebuloso","negativa","negociar","negrito","nervoso","neta","neural","nevasca","nevoeiro","ninar","ninho","nitidez","nivelar","nobreza","noite","noiva","nomear","nominal","nordeste","nortear","notar","noticiar","noturno","novelo","novilho","novo","nublado","nudez","numeral","nupcial","nutrir","nuvem","obcecado","obedecer","objetivo","obrigado","obscuro","obstetra","obter","obturar","ocidente","ocioso","ocorrer","oculista","ocupado","ofegante","ofensiva","oferenda","oficina","ofuscado","ogiva","olaria","oleoso","olhar","oliveira","ombro","omelete","omisso","omitir","ondulado","oneroso","ontem","opcional","operador","oponente","oportuno","oposto","orar","orbitar","ordem","ordinal","orfanato","orgasmo","orgulho","oriental","origem","oriundo","orla","ortodoxo","orvalho","oscilar","ossada","osso","ostentar","otimismo","ousadia","outono","outubro","ouvido","ovelha","ovular","oxidar","oxigenar","pacato","paciente","pacote","pactuar","padaria","padrinho","pagar","pagode","painel","pairar","paisagem","palavra","palestra","palheta","palito","palmada","palpitar","pancada","panela","panfleto","panqueca","pantanal","papagaio","papelada","papiro","parafina","parcial","pardal","parede","partida","pasmo","passado","pastel","patamar","patente","patinar","patrono","paulada","pausar","peculiar","pedalar","pedestre","pediatra","pedra","pegada","peitoral","peixe","pele","pelicano","penca","pendurar","peneira","penhasco","pensador","pente","perceber","perfeito","pergunta","perito","permitir","perna","perplexo","persiana","pertence","peruca","pescado","pesquisa","pessoa","petiscar","piada","picado","piedade","pigmento","pilastra","pilhado","pilotar","pimenta","pincel","pinguim","pinha","pinote","pintar","pioneiro","pipoca","piquete","piranha","pires","pirueta","piscar","pistola","pitanga","pivete","planta","plaqueta","platina","plebeu","plumagem","pluvial","pneu","poda","poeira","poetisa","polegada","policiar","poluente","polvilho","pomar","pomba","ponderar","pontaria","populoso","porta","possuir","postal","pote","poupar","pouso","povoar","praia","prancha","prato","praxe","prece","predador","prefeito","premiar","prensar","preparar","presilha","pretexto","prevenir","prezar","primata","princesa","prisma","privado","processo","produto","profeta","proibido","projeto","prometer","propagar","prosa","protetor","provador","publicar","pudim","pular","pulmonar","pulseira","punhal","punir","pupilo","pureza","puxador","quadra","quantia","quarto","quase","quebrar","queda","queijo","quente","querido","quimono","quina","quiosque","rabanada","rabisco","rachar","racionar","radial","raiar","rainha","raio","raiva","rajada","ralado","ramal","ranger","ranhura","rapadura","rapel","rapidez","raposa","raquete","raridade","rasante","rascunho","rasgar","raspador","rasteira","rasurar","ratazana","ratoeira","realeza","reanimar","reaver","rebaixar","rebelde","rebolar","recado","recente","recheio","recibo","recordar","recrutar","recuar","rede","redimir","redonda","reduzida","reenvio","refinar","refletir","refogar","refresco","refugiar","regalia","regime","regra","reinado","reitor","rejeitar","relativo","remador","remendo","remorso","renovado","reparo","repelir","repleto","repolho","represa","repudiar","requerer","resenha","resfriar","resgatar","residir","resolver","respeito","ressaca","restante","resumir","retalho","reter","retirar","retomada","retratar","revelar","revisor","revolta","riacho","rica","rigidez","rigoroso","rimar","ringue","risada","risco","risonho","robalo","rochedo","rodada","rodeio","rodovia","roedor","roleta","romano","roncar","rosado","roseira","rosto","rota","roteiro","rotina","rotular","rouco","roupa","roxo","rubro","rugido","rugoso","ruivo","rumo","rupestre","russo","sabor","saciar","sacola","sacudir","sadio","safira","saga","sagrada","saibro","salada","saleiro","salgado","saliva","salpicar","salsicha","saltar","salvador","sambar","samurai","sanar","sanfona","sangue","sanidade","sapato","sarda","sargento","sarjeta","saturar","saudade","saxofone","sazonal","secar","secular","seda","sedento","sediado","sedoso","sedutor","segmento","segredo","segundo","seiva","seleto","selvagem","semanal","semente","senador","senhor","sensual","sentado","separado","sereia","seringa","serra","servo","setembro","setor","sigilo","silhueta","silicone","simetria","simpatia","simular","sinal","sincero","singular","sinopse","sintonia","sirene","siri","situado","soberano","sobra","socorro","sogro","soja","solda","soletrar","solteiro","sombrio","sonata","sondar","sonegar","sonhador","sono","soprano","soquete","sorrir","sorteio","sossego","sotaque","soterrar","sovado","sozinho","suavizar","subida","submerso","subsolo","subtrair","sucata","sucesso","suco","sudeste","sufixo","sugador","sugerir","sujeito","sulfato","sumir","suor","superior","suplicar","suposto","suprimir","surdina","surfista","surpresa","surreal","surtir","suspiro","sustento","tabela","tablete","tabuada","tacho","tagarela","talher","talo","talvez","tamanho","tamborim","tampa","tangente","tanto","tapar","tapioca","tardio","tarefa","tarja","tarraxa","tatuagem","taurino","taxativo","taxista","teatral","tecer","tecido","teclado","tedioso","teia","teimar","telefone","telhado","tempero","tenente","tensor","tentar","termal","terno","terreno","tese","tesoura","testado","teto","textura","texugo","tiara","tigela","tijolo","timbrar","timidez","tingido","tinteiro","tiragem","titular","toalha","tocha","tolerar","tolice","tomada","tomilho","tonel","tontura","topete","tora","torcido","torneio","torque","torrada","torto","tostar","touca","toupeira","toxina","trabalho","tracejar","tradutor","trafegar","trajeto","trama","trancar","trapo","traseiro","tratador","travar","treino","tremer","trepidar","trevo","triagem","tribo","triciclo","tridente","trilogia","trindade","triplo","triturar","triunfal","trocar","trombeta","trova","trunfo","truque","tubular","tucano","tudo","tulipa","tupi","turbo","turma","turquesa","tutelar","tutorial","uivar","umbigo","unha","unidade","uniforme","urologia","urso","urtiga","urubu","usado","usina","usufruir","vacina","vadiar","vagaroso","vaidoso","vala","valente","validade","valores","vantagem","vaqueiro","varanda","vareta","varrer","vascular","vasilha","vassoura","vazar","vazio","veado","vedar","vegetar","veicular","veleiro","velhice","veludo","vencedor","vendaval","venerar","ventre","verbal","verdade","vereador","vergonha","vermelho","verniz","versar","vertente","vespa","vestido","vetorial","viaduto","viagem","viajar","viatura","vibrador","videira","vidraria","viela","viga","vigente","vigiar","vigorar","vilarejo","vinco","vinheta","vinil","violeta","virada","virtude","visitar","visto","vitral","viveiro","vizinho","voador","voar","vogal","volante","voleibol","voltagem","volumoso","vontade","vulto","vuvuzela","xadrez","xarope","xeque","xeretar","xerife","xingar","zangado","zarpar","zebu","zelador","zombar","zoologia","zumbido"]'),Oc=JSON.parse('["abandon","ability","able","about","above","absent","absorb","abstract","absurd","abuse","access","accident","account","accuse","achieve","acid","acoustic","acquire","across","act","action","actor","actress","actual","adapt","add","addict","address","adjust","admit","adult","advance","advice","aerobic","affair","afford","afraid","again","age","agent","agree","ahead","aim","air","airport","aisle","alarm","album","alcohol","alert","alien","all","alley","allow","almost","alone","alpha","already","also","alter","always","amateur","amazing","among","amount","amused","analyst","anchor","ancient","anger","angle","angry","animal","ankle","announce","annual","another","answer","antenna","antique","anxiety","any","apart","apology","appear","apple","approve","april","arch","arctic","area","arena","argue","arm","armed","armor","army","around","arrange","arrest","arrive","arrow","art","artefact","artist","artwork","ask","aspect","assault","asset","assist","assume","asthma","athlete","atom","attack","attend","attitude","attract","auction","audit","august","aunt","author","auto","autumn","average","avocado","avoid","awake","aware","away","awesome","awful","awkward","axis","baby","bachelor","bacon","badge","bag","balance","balcony","ball","bamboo","banana","banner","bar","barely","bargain","barrel","base","basic","basket","battle","beach","bean","beauty","because","become","beef","before","begin","behave","behind","believe","below","belt","bench","benefit","best","betray","better","between","beyond","bicycle","bid","bike","bind","biology","bird","birth","bitter","black","blade","blame","blanket","blast","bleak","bless","blind","blood","blossom","blouse","blue","blur","blush","board","boat","body","boil","bomb","bone","bonus","book","boost","border","boring","borrow","boss","bottom","bounce","box","boy","bracket","brain","brand","brass","brave","bread","breeze","brick","bridge","brief","bright","bring","brisk","broccoli","broken","bronze","broom","brother","brown","brush","bubble","buddy","budget","buffalo","build","bulb","bulk","bullet","bundle","bunker","burden","burger","burst","bus","business","busy","butter","buyer","buzz","cabbage","cabin","cable","cactus","cage","cake","call","calm","camera","camp","can","canal","cancel","candy","cannon","canoe","canvas","canyon","capable","capital","captain","car","carbon","card","cargo","carpet","carry","cart","case","cash","casino","castle","casual","cat","catalog","catch","category","cattle","caught","cause","caution","cave","ceiling","celery","cement","census","century","cereal","certain","chair","chalk","champion","change","chaos","chapter","charge","chase","chat","cheap","check","cheese","chef","cherry","chest","chicken","chief","child","chimney","choice","choose","chronic","chuckle","chunk","churn","cigar","cinnamon","circle","citizen","city","civil","claim","clap","clarify","claw","clay","clean","clerk","clever","click","client","cliff","climb","clinic","clip","clock","clog","close","cloth","cloud","clown","club","clump","cluster","clutch","coach","coast","coconut","code","coffee","coil","coin","collect","color","column","combine","come","comfort","comic","common","company","concert","conduct","confirm","congress","connect","consider","control","convince","cook","cool","copper","copy","coral","core","corn","correct","cost","cotton","couch","country","couple","course","cousin","cover","coyote","crack","cradle","craft","cram","crane","crash","crater","crawl","crazy","cream","credit","creek","crew","cricket","crime","crisp","critic","crop","cross","crouch","crowd","crucial","cruel","cruise","crumble","crunch","crush","cry","crystal","cube","culture","cup","cupboard","curious","current","curtain","curve","cushion","custom","cute","cycle","dad","damage","damp","dance","danger","daring","dash","daughter","dawn","day","deal","debate","debris","decade","december","decide","decline","decorate","decrease","deer","defense","define","defy","degree","delay","deliver","demand","demise","denial","dentist","deny","depart","depend","deposit","depth","deputy","derive","describe","desert","design","desk","despair","destroy","detail","detect","develop","device","devote","diagram","dial","diamond","diary","dice","diesel","diet","differ","digital","dignity","dilemma","dinner","dinosaur","direct","dirt","disagree","discover","disease","dish","dismiss","disorder","display","distance","divert","divide","divorce","dizzy","doctor","document","dog","doll","dolphin","domain","donate","donkey","donor","door","dose","double","dove","draft","dragon","drama","drastic","draw","dream","dress","drift","drill","drink","drip","drive","drop","drum","dry","duck","dumb","dune","during","dust","dutch","duty","dwarf","dynamic","eager","eagle","early","earn","earth","easily","east","easy","echo","ecology","economy","edge","edit","educate","effort","egg","eight","either","elbow","elder","electric","elegant","element","elephant","elevator","elite","else","embark","embody","embrace","emerge","emotion","employ","empower","empty","enable","enact","end","endless","endorse","enemy","energy","enforce","engage","engine","enhance","enjoy","enlist","enough","enrich","enroll","ensure","enter","entire","entry","envelope","episode","equal","equip","era","erase","erode","erosion","error","erupt","escape","essay","essence","estate","eternal","ethics","evidence","evil","evoke","evolve","exact","example","excess","exchange","excite","exclude","excuse","execute","exercise","exhaust","exhibit","exile","exist","exit","exotic","expand","expect","expire","explain","expose","express","extend","extra","eye","eyebrow","fabric","face","faculty","fade","faint","faith","fall","false","fame","family","famous","fan","fancy","fantasy","farm","fashion","fat","fatal","father","fatigue","fault","favorite","feature","february","federal","fee","feed","feel","female","fence","festival","fetch","fever","few","fiber","fiction","field","figure","file","film","filter","final","find","fine","finger","finish","fire","firm","first","fiscal","fish","fit","fitness","fix","flag","flame","flash","flat","flavor","flee","flight","flip","float","flock","floor","flower","fluid","flush","fly","foam","focus","fog","foil","fold","follow","food","foot","force","forest","forget","fork","fortune","forum","forward","fossil","foster","found","fox","fragile","frame","frequent","fresh","friend","fringe","frog","front","frost","frown","frozen","fruit","fuel","fun","funny","furnace","fury","future","gadget","gain","galaxy","gallery","game","gap","garage","garbage","garden","garlic","garment","gas","gasp","gate","gather","gauge","gaze","general","genius","genre","gentle","genuine","gesture","ghost","giant","gift","giggle","ginger","giraffe","girl","give","glad","glance","glare","glass","glide","glimpse","globe","gloom","glory","glove","glow","glue","goat","goddess","gold","good","goose","gorilla","gospel","gossip","govern","gown","grab","grace","grain","grant","grape","grass","gravity","great","green","grid","grief","grit","grocery","group","grow","grunt","guard","guess","guide","guilt","guitar","gun","gym","habit","hair","half","hammer","hamster","hand","happy","harbor","hard","harsh","harvest","hat","have","hawk","hazard","head","health","heart","heavy","hedgehog","height","hello","helmet","help","hen","hero","hidden","high","hill","hint","hip","hire","history","hobby","hockey","hold","hole","holiday","hollow","home","honey","hood","hope","horn","horror","horse","hospital","host","hotel","hour","hover","hub","huge","human","humble","humor","hundred","hungry","hunt","hurdle","hurry","hurt","husband","hybrid","ice","icon","idea","identify","idle","ignore","ill","illegal","illness","image","imitate","immense","immune","impact","impose","improve","impulse","inch","include","income","increase","index","indicate","indoor","industry","infant","inflict","inform","inhale","inherit","initial","inject","injury","inmate","inner","innocent","input","inquiry","insane","insect","inside","inspire","install","intact","interest","into","invest","invite","involve","iron","island","isolate","issue","item","ivory","jacket","jaguar","jar","jazz","jealous","jeans","jelly","jewel","job","join","joke","journey","joy","judge","juice","jump","jungle","junior","junk","just","kangaroo","keen","keep","ketchup","key","kick","kid","kidney","kind","kingdom","kiss","kit","kitchen","kite","kitten","kiwi","knee","knife","knock","know","lab","label","labor","ladder","lady","lake","lamp","language","laptop","large","later","latin","laugh","laundry","lava","law","lawn","lawsuit","layer","lazy","leader","leaf","learn","leave","lecture","left","leg","legal","legend","leisure","lemon","lend","length","lens","leopard","lesson","letter","level","liar","liberty","library","license","life","lift","light","like","limb","limit","link","lion","liquid","list","little","live","lizard","load","loan","lobster","local","lock","logic","lonely","long","loop","lottery","loud","lounge","love","loyal","lucky","luggage","lumber","lunar","lunch","luxury","lyrics","machine","mad","magic","magnet","maid","mail","main","major","make","mammal","man","manage","mandate","mango","mansion","manual","maple","marble","march","margin","marine","market","marriage","mask","mass","master","match","material","math","matrix","matter","maximum","maze","meadow","mean","measure","meat","mechanic","medal","media","melody","melt","member","memory","mention","menu","mercy","merge","merit","merry","mesh","message","metal","method","middle","midnight","milk","million","mimic","mind","minimum","minor","minute","miracle","mirror","misery","miss","mistake","mix","mixed","mixture","mobile","model","modify","mom","moment","monitor","monkey","monster","month","moon","moral","more","morning","mosquito","mother","motion","motor","mountain","mouse","move","movie","much","muffin","mule","multiply","muscle","museum","mushroom","music","must","mutual","myself","mystery","myth","naive","name","napkin","narrow","nasty","nation","nature","near","neck","need","negative","neglect","neither","nephew","nerve","nest","net","network","neutral","never","news","next","nice","night","noble","noise","nominee","noodle","normal","north","nose","notable","note","nothing","notice","novel","now","nuclear","number","nurse","nut","oak","obey","object","oblige","obscure","observe","obtain","obvious","occur","ocean","october","odor","off","offer","office","often","oil","okay","old","olive","olympic","omit","once","one","onion","online","only","open","opera","opinion","oppose","option","orange","orbit","orchard","order","ordinary","organ","orient","original","orphan","ostrich","other","outdoor","outer","output","outside","oval","oven","over","own","owner","oxygen","oyster","ozone","pact","paddle","page","pair","palace","palm","panda","panel","panic","panther","paper","parade","parent","park","parrot","party","pass","patch","path","patient","patrol","pattern","pause","pave","payment","peace","peanut","pear","peasant","pelican","pen","penalty","pencil","people","pepper","perfect","permit","person","pet","phone","photo","phrase","physical","piano","picnic","picture","piece","pig","pigeon","pill","pilot","pink","pioneer","pipe","pistol","pitch","pizza","place","planet","plastic","plate","play","please","pledge","pluck","plug","plunge","poem","poet","point","polar","pole","police","pond","pony","pool","popular","portion","position","possible","post","potato","pottery","poverty","powder","power","practice","praise","predict","prefer","prepare","present","pretty","prevent","price","pride","primary","print","priority","prison","private","prize","problem","process","produce","profit","program","project","promote","proof","property","prosper","protect","proud","provide","public","pudding","pull","pulp","pulse","pumpkin","punch","pupil","puppy","purchase","purity","purpose","purse","push","put","puzzle","pyramid","quality","quantum","quarter","question","quick","quit","quiz","quote","rabbit","raccoon","race","rack","radar","radio","rail","rain","raise","rally","ramp","ranch","random","range","rapid","rare","rate","rather","raven","raw","razor","ready","real","reason","rebel","rebuild","recall","receive","recipe","record","recycle","reduce","reflect","reform","refuse","region","regret","regular","reject","relax","release","relief","rely","remain","remember","remind","remove","render","renew","rent","reopen","repair","repeat","replace","report","require","rescue","resemble","resist","resource","response","result","retire","retreat","return","reunion","reveal","review","reward","rhythm","rib","ribbon","rice","rich","ride","ridge","rifle","right","rigid","ring","riot","ripple","risk","ritual","rival","river","road","roast","robot","robust","rocket","romance","roof","rookie","room","rose","rotate","rough","round","route","royal","rubber","rude","rug","rule","run","runway","rural","sad","saddle","sadness","safe","sail","salad","salmon","salon","salt","salute","same","sample","sand","satisfy","satoshi","sauce","sausage","save","say","scale","scan","scare","scatter","scene","scheme","school","science","scissors","scorpion","scout","scrap","screen","script","scrub","sea","search","season","seat","second","secret","section","security","seed","seek","segment","select","sell","seminar","senior","sense","sentence","series","service","session","settle","setup","seven","shadow","shaft","shallow","share","shed","shell","sheriff","shield","shift","shine","ship","shiver","shock","shoe","shoot","shop","short","shoulder","shove","shrimp","shrug","shuffle","shy","sibling","sick","side","siege","sight","sign","silent","silk","silly","silver","similar","simple","since","sing","siren","sister","situate","six","size","skate","sketch","ski","skill","skin","skirt","skull","slab","slam","sleep","slender","slice","slide","slight","slim","slogan","slot","slow","slush","small","smart","smile","smoke","smooth","snack","snake","snap","sniff","snow","soap","soccer","social","sock","soda","soft","solar","soldier","solid","solution","solve","someone","song","soon","sorry","sort","soul","sound","soup","source","south","space","spare","spatial","spawn","speak","special","speed","spell","spend","sphere","spice","spider","spike","spin","spirit","split","spoil","sponsor","spoon","sport","spot","spray","spread","spring","spy","square","squeeze","squirrel","stable","stadium","staff","stage","stairs","stamp","stand","start","state","stay","steak","steel","stem","step","stereo","stick","still","sting","stock","stomach","stone","stool","story","stove","strategy","street","strike","strong","struggle","student","stuff","stumble","style","subject","submit","subway","success","such","sudden","suffer","sugar","suggest","suit","summer","sun","sunny","sunset","super","supply","supreme","sure","surface","surge","surprise","surround","survey","suspect","sustain","swallow","swamp","swap","swarm","swear","sweet","swift","swim","swing","switch","sword","symbol","symptom","syrup","system","table","tackle","tag","tail","talent","talk","tank","tape","target","task","taste","tattoo","taxi","teach","team","tell","ten","tenant","tennis","tent","term","test","text","thank","that","theme","then","theory","there","they","thing","this","thought","three","thrive","throw","thumb","thunder","ticket","tide","tiger","tilt","timber","time","tiny","tip","tired","tissue","title","toast","tobacco","today","toddler","toe","together","toilet","token","tomato","tomorrow","tone","tongue","tonight","tool","tooth","top","topic","topple","torch","tornado","tortoise","toss","total","tourist","toward","tower","town","toy","track","trade","traffic","tragic","train","transfer","trap","trash","travel","tray","treat","tree","trend","trial","tribe","trick","trigger","trim","trip","trophy","trouble","truck","true","truly","trumpet","trust","truth","try","tube","tuition","tumble","tuna","tunnel","turkey","turn","turtle","twelve","twenty","twice","twin","twist","two","type","typical","ugly","umbrella","unable","unaware","uncle","uncover","under","undo","unfair","unfold","unhappy","uniform","unique","unit","universe","unknown","unlock","until","unusual","unveil","update","upgrade","uphold","upon","upper","upset","urban","urge","usage","use","used","useful","useless","usual","utility","vacant","vacuum","vague","valid","valley","valve","van","vanish","vapor","various","vast","vault","vehicle","velvet","vendor","venture","venue","verb","verify","version","very","vessel","veteran","viable","vibrant","vicious","victory","video","view","village","vintage","violin","virtual","virus","visa","visit","visual","vital","vivid","vocal","voice","void","volcano","volume","vote","voyage","wage","wagon","wait","walk","wall","walnut","want","warfare","warm","warrior","wash","wasp","waste","water","wave","way","wealth","weapon","wear","weasel","weather","web","wedding","weekend","weird","welcome","west","wet","whale","what","wheat","wheel","when","where","whip","whisper","wide","width","wife","wild","will","win","window","wine","wing","wink","winner","winter","wire","wisdom","wise","wish","witness","wolf","woman","wonder","wood","wool","word","work","world","worry","worth","wrap","wreck","wrestle","wrist","write","wrong","yard","year","yellow","you","young","youth","zebra","zero","zone","zoo"]');var un;function fn(){if(un)return Ea;un=1,Object.defineProperty(Ea,"__esModule",{value:!0});const a={};Ea.wordlists=a;let e;Ea._default=e;try{Ea._default=e=_c,a.czech=e}catch{}try{Ea._default=e=Hc,a.chinese_simplified=e}catch{}try{Ea._default=e=Ic,a.chinese_traditional=e}catch{}try{Ea._default=e=qc,a.korean=e}catch{}try{Ea._default=e=Uc,a.french=e}catch{}try{Ea._default=e=Lc,a.italian=e}catch{}try{Ea._default=e=Tc,a.spanish=e}catch{}try{Ea._default=e=Rc,a.japanese=e,a.JA=e}catch{}try{Ea._default=e=Cc,a.portuguese=e}catch{}try{Ea._default=e=Oc,a.english=e,a.EN=e}catch{}return Ea}var dn;function Nc(){if(dn)return Ia;dn=1,Object.defineProperty(Ia,"__esModule",{value:!0});const a=Ec(),e=Sc(),r=jc(),n=Wr(),s=fn();let i=s._default;const u="Invalid mnemonic",d="Invalid entropy",h="Invalid mnemonic checksum",b=`A wordlist is required but a default could not be found.
Please pass a 2048 word array explicitly.`;function m(x){return(x||"").normalize("NFKD")}function v(x,H,L){for(;x.length<L;)x=H+x;return x}function w(x){return parseInt(x,2)}function U(x){return x.map(H=>v(H.toString(2),"0",8)).join("")}function T(x){const L=x.length*8/32,ae=a.sha256(Uint8Array.from(x));return U(Array.from(ae)).slice(0,L)}function B(x){return"mnemonic"+(x||"")}function z(x,H){const L=Uint8Array.from(ga.from(m(x),"utf8")),ae=Uint8Array.from(ga.from(B(m(H)),"utf8")),te=r.pbkdf2(e.sha512,L,ae,{c:2048,dkLen:64});return ga.from(te)}Ia.mnemonicToSeedSync=z;function $(x,H){const L=Uint8Array.from(ga.from(m(x),"utf8")),ae=Uint8Array.from(ga.from(B(m(H)),"utf8"));return r.pbkdf2Async(e.sha512,L,ae,{c:2048,dkLen:64}).then(te=>ga.from(te))}Ia.mnemonicToSeed=$;function Y(x,H){if(H=H||i,!H)throw new Error(b);const L=m(x).split(" ");if(L.length%3!==0)throw new Error(u);const ae=L.map(g=>{const I=H.indexOf(g);if(I===-1)throw new Error(u);return v(I.toString(2),"0",11)}).join(""),te=Math.floor(ae.length/33)*32,V=ae.slice(0,te),X=ae.slice(te),Q=V.match(/(.{1,8})/g).map(w);if(Q.length<16)throw new Error(d);if(Q.length>32)throw new Error(d);if(Q.length%4!==0)throw new Error(d);const M=ga.from(Q);if(T(M)!==X)throw new Error(h);return M.toString("hex")}Ia.mnemonicToEntropy=Y;function E(x,H){if(ga.isBuffer(x)||(x=ga.from(x,"hex")),H=H||i,!H)throw new Error(b);if(x.length<16)throw new TypeError(d);if(x.length>32)throw new TypeError(d);if(x.length%4!==0)throw new TypeError(d);const L=U(Array.from(x)),ae=T(x),X=(L+ae).match(/(.{1,11})/g).map(Q=>{const M=w(Q);return H[M]});return H[0]==="あいこくしん"?X.join("　"):X.join(" ")}Ia.entropyToMnemonic=E;function K(x,H,L){if(x=x||128,x%32!==0)throw new TypeError(d);return H=H||(ae=>ga.from(n.randomBytes(ae))),E(H(x/8),L)}Ia.generateMnemonic=K;function D(x,H){try{Y(x,H)}catch{return!1}return!0}Ia.validateMnemonic=D;function C(x){const H=s.wordlists[x];if(H)i=H;else throw new Error('Could not find wordlist for language "'+x+'"')}Ia.setDefaultWordlist=C;function G(){if(!i)throw new Error("No Default Wordlist set");return Object.keys(s.wordlists).filter(x=>x==="JA"||x==="EN"?!1:s.wordlists[x].every((H,L)=>H===i[L]))[0]}Ia.getDefaultWordlist=G;var J=fn();return Ia.wordlists=J.wordlists,Ia}Nc();var Gt={};function Vc(a){throw new Error('Could not dynamically require "'+a+'". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.')}var Wt={exports:{}},hn;function Mc(){return hn||(hn=1,function(a){(function(e){var r=function(o){var l,c=new Float64Array(16);if(o)for(l=0;l<o.length;l++)c[l]=o[l];return c},n=function(){throw new Error("no PRNG")},s=new Uint8Array(16),i=new Uint8Array(32);i[0]=9;var u=r(),d=r([1]),h=r([56129,1]),b=r([30883,4953,19914,30187,55467,16705,2637,112,59544,30585,16505,36039,65139,11119,27886,20995]),m=r([61785,9906,39828,60374,45398,33411,5274,224,53552,61171,33010,6542,64743,22239,55772,9222]),v=r([54554,36645,11616,51542,42930,38181,51040,26924,56412,64982,57905,49316,21502,52590,14035,8553]),w=r([26200,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214]),U=r([41136,18958,6951,50414,58488,44335,6150,12099,55207,15867,153,11085,57099,20417,9344,11139]);function T(o,l,c,t){o[l]=c>>24&255,o[l+1]=c>>16&255,o[l+2]=c>>8&255,o[l+3]=c&255,o[l+4]=t>>24&255,o[l+5]=t>>16&255,o[l+6]=t>>8&255,o[l+7]=t&255}function B(o,l,c,t,f){var k,A=0;for(k=0;k<f;k++)A|=o[l+k]^c[t+k];return(1&A-1>>>8)-1}function z(o,l,c,t){return B(o,l,c,t,16)}function $(o,l,c,t){return B(o,l,c,t,32)}function Y(o,l,c,t){for(var f=t[0]&255|(t[1]&255)<<8|(t[2]&255)<<16|(t[3]&255)<<24,k=c[0]&255|(c[1]&255)<<8|(c[2]&255)<<16|(c[3]&255)<<24,A=c[4]&255|(c[5]&255)<<8|(c[6]&255)<<16|(c[7]&255)<<24,O=c[8]&255|(c[9]&255)<<8|(c[10]&255)<<16|(c[11]&255)<<24,ee=c[12]&255|(c[13]&255)<<8|(c[14]&255)<<16|(c[15]&255)<<24,ve=t[4]&255|(t[5]&255)<<8|(t[6]&255)<<16|(t[7]&255)<<24,ce=l[0]&255|(l[1]&255)<<8|(l[2]&255)<<16|(l[3]&255)<<24,Ne=l[4]&255|(l[5]&255)<<8|(l[6]&255)<<16|(l[7]&255)<<24,de=l[8]&255|(l[9]&255)<<8|(l[10]&255)<<16|(l[11]&255)<<24,ze=l[12]&255|(l[13]&255)<<8|(l[14]&255)<<16|(l[15]&255)<<24,Ae=t[8]&255|(t[9]&255)<<8|(t[10]&255)<<16|(t[11]&255)<<24,He=c[16]&255|(c[17]&255)<<8|(c[18]&255)<<16|(c[19]&255)<<24,_e=c[20]&255|(c[21]&255)<<8|(c[22]&255)<<16|(c[23]&255)<<24,Ee=c[24]&255|(c[25]&255)<<8|(c[26]&255)<<16|(c[27]&255)<<24,Be=c[28]&255|(c[29]&255)<<8|(c[30]&255)<<16|(c[31]&255)<<24,Se=t[12]&255|(t[13]&255)<<8|(t[14]&255)<<16|(t[15]&255)<<24,pe=f,xe=k,le=A,be=O,ge=ee,se=ve,j=ce,_=Ne,P=de,R=ze,N=Ae,W=He,we=_e,Ie=Ee,Ue=Be,qe=Se,p,Te=0;Te<20;Te+=2)p=pe+we|0,ge^=p<<7|p>>>25,p=ge+pe|0,P^=p<<9|p>>>23,p=P+ge|0,we^=p<<13|p>>>19,p=we+P|0,pe^=p<<18|p>>>14,p=se+xe|0,R^=p<<7|p>>>25,p=R+se|0,Ie^=p<<9|p>>>23,p=Ie+R|0,xe^=p<<13|p>>>19,p=xe+Ie|0,se^=p<<18|p>>>14,p=N+j|0,Ue^=p<<7|p>>>25,p=Ue+N|0,le^=p<<9|p>>>23,p=le+Ue|0,j^=p<<13|p>>>19,p=j+le|0,N^=p<<18|p>>>14,p=qe+W|0,be^=p<<7|p>>>25,p=be+qe|0,_^=p<<9|p>>>23,p=_+be|0,W^=p<<13|p>>>19,p=W+_|0,qe^=p<<18|p>>>14,p=pe+be|0,xe^=p<<7|p>>>25,p=xe+pe|0,le^=p<<9|p>>>23,p=le+xe|0,be^=p<<13|p>>>19,p=be+le|0,pe^=p<<18|p>>>14,p=se+ge|0,j^=p<<7|p>>>25,p=j+se|0,_^=p<<9|p>>>23,p=_+j|0,ge^=p<<13|p>>>19,p=ge+_|0,se^=p<<18|p>>>14,p=N+R|0,W^=p<<7|p>>>25,p=W+N|0,P^=p<<9|p>>>23,p=P+W|0,R^=p<<13|p>>>19,p=R+P|0,N^=p<<18|p>>>14,p=qe+Ue|0,we^=p<<7|p>>>25,p=we+qe|0,Ie^=p<<9|p>>>23,p=Ie+we|0,Ue^=p<<13|p>>>19,p=Ue+Ie|0,qe^=p<<18|p>>>14;pe=pe+f|0,xe=xe+k|0,le=le+A|0,be=be+O|0,ge=ge+ee|0,se=se+ve|0,j=j+ce|0,_=_+Ne|0,P=P+de|0,R=R+ze|0,N=N+Ae|0,W=W+He|0,we=we+_e|0,Ie=Ie+Ee|0,Ue=Ue+Be|0,qe=qe+Se|0,o[0]=pe>>>0&255,o[1]=pe>>>8&255,o[2]=pe>>>16&255,o[3]=pe>>>24&255,o[4]=xe>>>0&255,o[5]=xe>>>8&255,o[6]=xe>>>16&255,o[7]=xe>>>24&255,o[8]=le>>>0&255,o[9]=le>>>8&255,o[10]=le>>>16&255,o[11]=le>>>24&255,o[12]=be>>>0&255,o[13]=be>>>8&255,o[14]=be>>>16&255,o[15]=be>>>24&255,o[16]=ge>>>0&255,o[17]=ge>>>8&255,o[18]=ge>>>16&255,o[19]=ge>>>24&255,o[20]=se>>>0&255,o[21]=se>>>8&255,o[22]=se>>>16&255,o[23]=se>>>24&255,o[24]=j>>>0&255,o[25]=j>>>8&255,o[26]=j>>>16&255,o[27]=j>>>24&255,o[28]=_>>>0&255,o[29]=_>>>8&255,o[30]=_>>>16&255,o[31]=_>>>24&255,o[32]=P>>>0&255,o[33]=P>>>8&255,o[34]=P>>>16&255,o[35]=P>>>24&255,o[36]=R>>>0&255,o[37]=R>>>8&255,o[38]=R>>>16&255,o[39]=R>>>24&255,o[40]=N>>>0&255,o[41]=N>>>8&255,o[42]=N>>>16&255,o[43]=N>>>24&255,o[44]=W>>>0&255,o[45]=W>>>8&255,o[46]=W>>>16&255,o[47]=W>>>24&255,o[48]=we>>>0&255,o[49]=we>>>8&255,o[50]=we>>>16&255,o[51]=we>>>24&255,o[52]=Ie>>>0&255,o[53]=Ie>>>8&255,o[54]=Ie>>>16&255,o[55]=Ie>>>24&255,o[56]=Ue>>>0&255,o[57]=Ue>>>8&255,o[58]=Ue>>>16&255,o[59]=Ue>>>24&255,o[60]=qe>>>0&255,o[61]=qe>>>8&255,o[62]=qe>>>16&255,o[63]=qe>>>24&255}function E(o,l,c,t){for(var f=t[0]&255|(t[1]&255)<<8|(t[2]&255)<<16|(t[3]&255)<<24,k=c[0]&255|(c[1]&255)<<8|(c[2]&255)<<16|(c[3]&255)<<24,A=c[4]&255|(c[5]&255)<<8|(c[6]&255)<<16|(c[7]&255)<<24,O=c[8]&255|(c[9]&255)<<8|(c[10]&255)<<16|(c[11]&255)<<24,ee=c[12]&255|(c[13]&255)<<8|(c[14]&255)<<16|(c[15]&255)<<24,ve=t[4]&255|(t[5]&255)<<8|(t[6]&255)<<16|(t[7]&255)<<24,ce=l[0]&255|(l[1]&255)<<8|(l[2]&255)<<16|(l[3]&255)<<24,Ne=l[4]&255|(l[5]&255)<<8|(l[6]&255)<<16|(l[7]&255)<<24,de=l[8]&255|(l[9]&255)<<8|(l[10]&255)<<16|(l[11]&255)<<24,ze=l[12]&255|(l[13]&255)<<8|(l[14]&255)<<16|(l[15]&255)<<24,Ae=t[8]&255|(t[9]&255)<<8|(t[10]&255)<<16|(t[11]&255)<<24,He=c[16]&255|(c[17]&255)<<8|(c[18]&255)<<16|(c[19]&255)<<24,_e=c[20]&255|(c[21]&255)<<8|(c[22]&255)<<16|(c[23]&255)<<24,Ee=c[24]&255|(c[25]&255)<<8|(c[26]&255)<<16|(c[27]&255)<<24,Be=c[28]&255|(c[29]&255)<<8|(c[30]&255)<<16|(c[31]&255)<<24,Se=t[12]&255|(t[13]&255)<<8|(t[14]&255)<<16|(t[15]&255)<<24,pe=f,xe=k,le=A,be=O,ge=ee,se=ve,j=ce,_=Ne,P=de,R=ze,N=Ae,W=He,we=_e,Ie=Ee,Ue=Be,qe=Se,p,Te=0;Te<20;Te+=2)p=pe+we|0,ge^=p<<7|p>>>25,p=ge+pe|0,P^=p<<9|p>>>23,p=P+ge|0,we^=p<<13|p>>>19,p=we+P|0,pe^=p<<18|p>>>14,p=se+xe|0,R^=p<<7|p>>>25,p=R+se|0,Ie^=p<<9|p>>>23,p=Ie+R|0,xe^=p<<13|p>>>19,p=xe+Ie|0,se^=p<<18|p>>>14,p=N+j|0,Ue^=p<<7|p>>>25,p=Ue+N|0,le^=p<<9|p>>>23,p=le+Ue|0,j^=p<<13|p>>>19,p=j+le|0,N^=p<<18|p>>>14,p=qe+W|0,be^=p<<7|p>>>25,p=be+qe|0,_^=p<<9|p>>>23,p=_+be|0,W^=p<<13|p>>>19,p=W+_|0,qe^=p<<18|p>>>14,p=pe+be|0,xe^=p<<7|p>>>25,p=xe+pe|0,le^=p<<9|p>>>23,p=le+xe|0,be^=p<<13|p>>>19,p=be+le|0,pe^=p<<18|p>>>14,p=se+ge|0,j^=p<<7|p>>>25,p=j+se|0,_^=p<<9|p>>>23,p=_+j|0,ge^=p<<13|p>>>19,p=ge+_|0,se^=p<<18|p>>>14,p=N+R|0,W^=p<<7|p>>>25,p=W+N|0,P^=p<<9|p>>>23,p=P+W|0,R^=p<<13|p>>>19,p=R+P|0,N^=p<<18|p>>>14,p=qe+Ue|0,we^=p<<7|p>>>25,p=we+qe|0,Ie^=p<<9|p>>>23,p=Ie+we|0,Ue^=p<<13|p>>>19,p=Ue+Ie|0,qe^=p<<18|p>>>14;o[0]=pe>>>0&255,o[1]=pe>>>8&255,o[2]=pe>>>16&255,o[3]=pe>>>24&255,o[4]=se>>>0&255,o[5]=se>>>8&255,o[6]=se>>>16&255,o[7]=se>>>24&255,o[8]=N>>>0&255,o[9]=N>>>8&255,o[10]=N>>>16&255,o[11]=N>>>24&255,o[12]=qe>>>0&255,o[13]=qe>>>8&255,o[14]=qe>>>16&255,o[15]=qe>>>24&255,o[16]=j>>>0&255,o[17]=j>>>8&255,o[18]=j>>>16&255,o[19]=j>>>24&255,o[20]=_>>>0&255,o[21]=_>>>8&255,o[22]=_>>>16&255,o[23]=_>>>24&255,o[24]=P>>>0&255,o[25]=P>>>8&255,o[26]=P>>>16&255,o[27]=P>>>24&255,o[28]=R>>>0&255,o[29]=R>>>8&255,o[30]=R>>>16&255,o[31]=R>>>24&255}function K(o,l,c,t){Y(o,l,c,t)}function D(o,l,c,t){E(o,l,c,t)}var C=new Uint8Array([101,120,112,97,110,100,32,51,50,45,98,121,116,101,32,107]);function G(o,l,c,t,f,k,A){var O=new Uint8Array(16),ee=new Uint8Array(64),ve,ce;for(ce=0;ce<16;ce++)O[ce]=0;for(ce=0;ce<8;ce++)O[ce]=k[ce];for(;f>=64;){for(K(ee,O,A,C),ce=0;ce<64;ce++)o[l+ce]=c[t+ce]^ee[ce];for(ve=1,ce=8;ce<16;ce++)ve=ve+(O[ce]&255)|0,O[ce]=ve&255,ve>>>=8;f-=64,l+=64,t+=64}if(f>0)for(K(ee,O,A,C),ce=0;ce<f;ce++)o[l+ce]=c[t+ce]^ee[ce];return 0}function J(o,l,c,t,f){var k=new Uint8Array(16),A=new Uint8Array(64),O,ee;for(ee=0;ee<16;ee++)k[ee]=0;for(ee=0;ee<8;ee++)k[ee]=t[ee];for(;c>=64;){for(K(A,k,f,C),ee=0;ee<64;ee++)o[l+ee]=A[ee];for(O=1,ee=8;ee<16;ee++)O=O+(k[ee]&255)|0,k[ee]=O&255,O>>>=8;c-=64,l+=64}if(c>0)for(K(A,k,f,C),ee=0;ee<c;ee++)o[l+ee]=A[ee];return 0}function x(o,l,c,t,f){var k=new Uint8Array(32);D(k,t,f,C);for(var A=new Uint8Array(8),O=0;O<8;O++)A[O]=t[O+16];return J(o,l,c,A,k)}function H(o,l,c,t,f,k,A){var O=new Uint8Array(32);D(O,k,A,C);for(var ee=new Uint8Array(8),ve=0;ve<8;ve++)ee[ve]=k[ve+16];return G(o,l,c,t,f,ee,O)}var L=function(o){this.buffer=new Uint8Array(16),this.r=new Uint16Array(10),this.h=new Uint16Array(10),this.pad=new Uint16Array(8),this.leftover=0,this.fin=0;var l,c,t,f,k,A,O,ee;l=o[0]&255|(o[1]&255)<<8,this.r[0]=l&8191,c=o[2]&255|(o[3]&255)<<8,this.r[1]=(l>>>13|c<<3)&8191,t=o[4]&255|(o[5]&255)<<8,this.r[2]=(c>>>10|t<<6)&7939,f=o[6]&255|(o[7]&255)<<8,this.r[3]=(t>>>7|f<<9)&8191,k=o[8]&255|(o[9]&255)<<8,this.r[4]=(f>>>4|k<<12)&255,this.r[5]=k>>>1&8190,A=o[10]&255|(o[11]&255)<<8,this.r[6]=(k>>>14|A<<2)&8191,O=o[12]&255|(o[13]&255)<<8,this.r[7]=(A>>>11|O<<5)&8065,ee=o[14]&255|(o[15]&255)<<8,this.r[8]=(O>>>8|ee<<8)&8191,this.r[9]=ee>>>5&127,this.pad[0]=o[16]&255|(o[17]&255)<<8,this.pad[1]=o[18]&255|(o[19]&255)<<8,this.pad[2]=o[20]&255|(o[21]&255)<<8,this.pad[3]=o[22]&255|(o[23]&255)<<8,this.pad[4]=o[24]&255|(o[25]&255)<<8,this.pad[5]=o[26]&255|(o[27]&255)<<8,this.pad[6]=o[28]&255|(o[29]&255)<<8,this.pad[7]=o[30]&255|(o[31]&255)<<8};L.prototype.blocks=function(o,l,c){for(var t=this.fin?0:2048,f,k,A,O,ee,ve,ce,Ne,de,ze,Ae,He,_e,Ee,Be,Se,pe,xe,le,be=this.h[0],ge=this.h[1],se=this.h[2],j=this.h[3],_=this.h[4],P=this.h[5],R=this.h[6],N=this.h[7],W=this.h[8],we=this.h[9],Ie=this.r[0],Ue=this.r[1],qe=this.r[2],p=this.r[3],Te=this.r[4],Ve=this.r[5],Me=this.r[6],Le=this.r[7],Ce=this.r[8],Oe=this.r[9];c>=16;)f=o[l+0]&255|(o[l+1]&255)<<8,be+=f&8191,k=o[l+2]&255|(o[l+3]&255)<<8,ge+=(f>>>13|k<<3)&8191,A=o[l+4]&255|(o[l+5]&255)<<8,se+=(k>>>10|A<<6)&8191,O=o[l+6]&255|(o[l+7]&255)<<8,j+=(A>>>7|O<<9)&8191,ee=o[l+8]&255|(o[l+9]&255)<<8,_+=(O>>>4|ee<<12)&8191,P+=ee>>>1&8191,ve=o[l+10]&255|(o[l+11]&255)<<8,R+=(ee>>>14|ve<<2)&8191,ce=o[l+12]&255|(o[l+13]&255)<<8,N+=(ve>>>11|ce<<5)&8191,Ne=o[l+14]&255|(o[l+15]&255)<<8,W+=(ce>>>8|Ne<<8)&8191,we+=Ne>>>5|t,de=0,ze=de,ze+=be*Ie,ze+=ge*(5*Oe),ze+=se*(5*Ce),ze+=j*(5*Le),ze+=_*(5*Me),de=ze>>>13,ze&=8191,ze+=P*(5*Ve),ze+=R*(5*Te),ze+=N*(5*p),ze+=W*(5*qe),ze+=we*(5*Ue),de+=ze>>>13,ze&=8191,Ae=de,Ae+=be*Ue,Ae+=ge*Ie,Ae+=se*(5*Oe),Ae+=j*(5*Ce),Ae+=_*(5*Le),de=Ae>>>13,Ae&=8191,Ae+=P*(5*Me),Ae+=R*(5*Ve),Ae+=N*(5*Te),Ae+=W*(5*p),Ae+=we*(5*qe),de+=Ae>>>13,Ae&=8191,He=de,He+=be*qe,He+=ge*Ue,He+=se*Ie,He+=j*(5*Oe),He+=_*(5*Ce),de=He>>>13,He&=8191,He+=P*(5*Le),He+=R*(5*Me),He+=N*(5*Ve),He+=W*(5*Te),He+=we*(5*p),de+=He>>>13,He&=8191,_e=de,_e+=be*p,_e+=ge*qe,_e+=se*Ue,_e+=j*Ie,_e+=_*(5*Oe),de=_e>>>13,_e&=8191,_e+=P*(5*Ce),_e+=R*(5*Le),_e+=N*(5*Me),_e+=W*(5*Ve),_e+=we*(5*Te),de+=_e>>>13,_e&=8191,Ee=de,Ee+=be*Te,Ee+=ge*p,Ee+=se*qe,Ee+=j*Ue,Ee+=_*Ie,de=Ee>>>13,Ee&=8191,Ee+=P*(5*Oe),Ee+=R*(5*Ce),Ee+=N*(5*Le),Ee+=W*(5*Me),Ee+=we*(5*Ve),de+=Ee>>>13,Ee&=8191,Be=de,Be+=be*Ve,Be+=ge*Te,Be+=se*p,Be+=j*qe,Be+=_*Ue,de=Be>>>13,Be&=8191,Be+=P*Ie,Be+=R*(5*Oe),Be+=N*(5*Ce),Be+=W*(5*Le),Be+=we*(5*Me),de+=Be>>>13,Be&=8191,Se=de,Se+=be*Me,Se+=ge*Ve,Se+=se*Te,Se+=j*p,Se+=_*qe,de=Se>>>13,Se&=8191,Se+=P*Ue,Se+=R*Ie,Se+=N*(5*Oe),Se+=W*(5*Ce),Se+=we*(5*Le),de+=Se>>>13,Se&=8191,pe=de,pe+=be*Le,pe+=ge*Me,pe+=se*Ve,pe+=j*Te,pe+=_*p,de=pe>>>13,pe&=8191,pe+=P*qe,pe+=R*Ue,pe+=N*Ie,pe+=W*(5*Oe),pe+=we*(5*Ce),de+=pe>>>13,pe&=8191,xe=de,xe+=be*Ce,xe+=ge*Le,xe+=se*Me,xe+=j*Ve,xe+=_*Te,de=xe>>>13,xe&=8191,xe+=P*p,xe+=R*qe,xe+=N*Ue,xe+=W*Ie,xe+=we*(5*Oe),de+=xe>>>13,xe&=8191,le=de,le+=be*Oe,le+=ge*Ce,le+=se*Le,le+=j*Me,le+=_*Ve,de=le>>>13,le&=8191,le+=P*Te,le+=R*p,le+=N*qe,le+=W*Ue,le+=we*Ie,de+=le>>>13,le&=8191,de=(de<<2)+de|0,de=de+ze|0,ze=de&8191,de=de>>>13,Ae+=de,be=ze,ge=Ae,se=He,j=_e,_=Ee,P=Be,R=Se,N=pe,W=xe,we=le,l+=16,c-=16;this.h[0]=be,this.h[1]=ge,this.h[2]=se,this.h[3]=j,this.h[4]=_,this.h[5]=P,this.h[6]=R,this.h[7]=N,this.h[8]=W,this.h[9]=we},L.prototype.finish=function(o,l){var c=new Uint16Array(10),t,f,k,A;if(this.leftover){for(A=this.leftover,this.buffer[A++]=1;A<16;A++)this.buffer[A]=0;this.fin=1,this.blocks(this.buffer,0,16)}for(t=this.h[1]>>>13,this.h[1]&=8191,A=2;A<10;A++)this.h[A]+=t,t=this.h[A]>>>13,this.h[A]&=8191;for(this.h[0]+=t*5,t=this.h[0]>>>13,this.h[0]&=8191,this.h[1]+=t,t=this.h[1]>>>13,this.h[1]&=8191,this.h[2]+=t,c[0]=this.h[0]+5,t=c[0]>>>13,c[0]&=8191,A=1;A<10;A++)c[A]=this.h[A]+t,t=c[A]>>>13,c[A]&=8191;for(c[9]-=8192,f=(t^1)-1,A=0;A<10;A++)c[A]&=f;for(f=~f,A=0;A<10;A++)this.h[A]=this.h[A]&f|c[A];for(this.h[0]=(this.h[0]|this.h[1]<<13)&65535,this.h[1]=(this.h[1]>>>3|this.h[2]<<10)&65535,this.h[2]=(this.h[2]>>>6|this.h[3]<<7)&65535,this.h[3]=(this.h[3]>>>9|this.h[4]<<4)&65535,this.h[4]=(this.h[4]>>>12|this.h[5]<<1|this.h[6]<<14)&65535,this.h[5]=(this.h[6]>>>2|this.h[7]<<11)&65535,this.h[6]=(this.h[7]>>>5|this.h[8]<<8)&65535,this.h[7]=(this.h[8]>>>8|this.h[9]<<5)&65535,k=this.h[0]+this.pad[0],this.h[0]=k&65535,A=1;A<8;A++)k=(this.h[A]+this.pad[A]|0)+(k>>>16)|0,this.h[A]=k&65535;o[l+0]=this.h[0]>>>0&255,o[l+1]=this.h[0]>>>8&255,o[l+2]=this.h[1]>>>0&255,o[l+3]=this.h[1]>>>8&255,o[l+4]=this.h[2]>>>0&255,o[l+5]=this.h[2]>>>8&255,o[l+6]=this.h[3]>>>0&255,o[l+7]=this.h[3]>>>8&255,o[l+8]=this.h[4]>>>0&255,o[l+9]=this.h[4]>>>8&255,o[l+10]=this.h[5]>>>0&255,o[l+11]=this.h[5]>>>8&255,o[l+12]=this.h[6]>>>0&255,o[l+13]=this.h[6]>>>8&255,o[l+14]=this.h[7]>>>0&255,o[l+15]=this.h[7]>>>8&255},L.prototype.update=function(o,l,c){var t,f;if(this.leftover){for(f=16-this.leftover,f>c&&(f=c),t=0;t<f;t++)this.buffer[this.leftover+t]=o[l+t];if(c-=f,l+=f,this.leftover+=f,this.leftover<16)return;this.blocks(this.buffer,0,16),this.leftover=0}if(c>=16&&(f=c-c%16,this.blocks(o,l,f),l+=f,c-=f),c){for(t=0;t<c;t++)this.buffer[this.leftover+t]=o[l+t];this.leftover+=c}};function ae(o,l,c,t,f,k){var A=new L(k);return A.update(c,t,f),A.finish(o,l),0}function te(o,l,c,t,f,k){var A=new Uint8Array(16);return ae(A,0,c,t,f,k),z(o,l,A,0)}function V(o,l,c,t,f){var k;if(c<32)return-1;for(H(o,0,l,0,c,t,f),ae(o,16,o,32,c-32,o),k=0;k<16;k++)o[k]=0;return 0}function X(o,l,c,t,f){var k,A=new Uint8Array(32);if(c<32||(x(A,0,32,t,f),te(l,16,l,32,c-32,A)!==0))return-1;for(H(o,0,l,0,c,t,f),k=0;k<32;k++)o[k]=0;return 0}function Q(o,l){var c;for(c=0;c<16;c++)o[c]=l[c]|0}function M(o){var l,c,t=1;for(l=0;l<16;l++)c=o[l]+t+65535,t=Math.floor(c/65536),o[l]=c-t*65536;o[0]+=t-1+37*(t-1)}function q(o,l,c){for(var t,f=~(c-1),k=0;k<16;k++)t=f&(o[k]^l[k]),o[k]^=t,l[k]^=t}function g(o,l){var c,t,f,k=r(),A=r();for(c=0;c<16;c++)A[c]=l[c];for(M(A),M(A),M(A),t=0;t<2;t++){for(k[0]=A[0]-65517,c=1;c<15;c++)k[c]=A[c]-65535-(k[c-1]>>16&1),k[c-1]&=65535;k[15]=A[15]-32767-(k[14]>>16&1),f=k[15]>>16&1,k[14]&=65535,q(A,k,1-f)}for(c=0;c<16;c++)o[2*c]=A[c]&255,o[2*c+1]=A[c]>>8}function I(o,l){var c=new Uint8Array(32),t=new Uint8Array(32);return g(c,o),g(t,l),$(c,0,t,0)}function F(o){var l=new Uint8Array(32);return g(l,o),l[0]&1}function oe(o,l){var c;for(c=0;c<16;c++)o[c]=l[2*c]+(l[2*c+1]<<8);o[15]&=32767}function ne(o,l,c){for(var t=0;t<16;t++)o[t]=l[t]+c[t]}function me(o,l,c){for(var t=0;t<16;t++)o[t]=l[t]-c[t]}function ie(o,l,c){var t,f,k=0,A=0,O=0,ee=0,ve=0,ce=0,Ne=0,de=0,ze=0,Ae=0,He=0,_e=0,Ee=0,Be=0,Se=0,pe=0,xe=0,le=0,be=0,ge=0,se=0,j=0,_=0,P=0,R=0,N=0,W=0,we=0,Ie=0,Ue=0,qe=0,p=c[0],Te=c[1],Ve=c[2],Me=c[3],Le=c[4],Ce=c[5],Oe=c[6],la=c[7],Ye=c[8],ta=c[9],oa=c[10],na=c[11],ha=c[12],xa=c[13],ya=c[14],wa=c[15];t=l[0],k+=t*p,A+=t*Te,O+=t*Ve,ee+=t*Me,ve+=t*Le,ce+=t*Ce,Ne+=t*Oe,de+=t*la,ze+=t*Ye,Ae+=t*ta,He+=t*oa,_e+=t*na,Ee+=t*ha,Be+=t*xa,Se+=t*ya,pe+=t*wa,t=l[1],A+=t*p,O+=t*Te,ee+=t*Ve,ve+=t*Me,ce+=t*Le,Ne+=t*Ce,de+=t*Oe,ze+=t*la,Ae+=t*Ye,He+=t*ta,_e+=t*oa,Ee+=t*na,Be+=t*ha,Se+=t*xa,pe+=t*ya,xe+=t*wa,t=l[2],O+=t*p,ee+=t*Te,ve+=t*Ve,ce+=t*Me,Ne+=t*Le,de+=t*Ce,ze+=t*Oe,Ae+=t*la,He+=t*Ye,_e+=t*ta,Ee+=t*oa,Be+=t*na,Se+=t*ha,pe+=t*xa,xe+=t*ya,le+=t*wa,t=l[3],ee+=t*p,ve+=t*Te,ce+=t*Ve,Ne+=t*Me,de+=t*Le,ze+=t*Ce,Ae+=t*Oe,He+=t*la,_e+=t*Ye,Ee+=t*ta,Be+=t*oa,Se+=t*na,pe+=t*ha,xe+=t*xa,le+=t*ya,be+=t*wa,t=l[4],ve+=t*p,ce+=t*Te,Ne+=t*Ve,de+=t*Me,ze+=t*Le,Ae+=t*Ce,He+=t*Oe,_e+=t*la,Ee+=t*Ye,Be+=t*ta,Se+=t*oa,pe+=t*na,xe+=t*ha,le+=t*xa,be+=t*ya,ge+=t*wa,t=l[5],ce+=t*p,Ne+=t*Te,de+=t*Ve,ze+=t*Me,Ae+=t*Le,He+=t*Ce,_e+=t*Oe,Ee+=t*la,Be+=t*Ye,Se+=t*ta,pe+=t*oa,xe+=t*na,le+=t*ha,be+=t*xa,ge+=t*ya,se+=t*wa,t=l[6],Ne+=t*p,de+=t*Te,ze+=t*Ve,Ae+=t*Me,He+=t*Le,_e+=t*Ce,Ee+=t*Oe,Be+=t*la,Se+=t*Ye,pe+=t*ta,xe+=t*oa,le+=t*na,be+=t*ha,ge+=t*xa,se+=t*ya,j+=t*wa,t=l[7],de+=t*p,ze+=t*Te,Ae+=t*Ve,He+=t*Me,_e+=t*Le,Ee+=t*Ce,Be+=t*Oe,Se+=t*la,pe+=t*Ye,xe+=t*ta,le+=t*oa,be+=t*na,ge+=t*ha,se+=t*xa,j+=t*ya,_+=t*wa,t=l[8],ze+=t*p,Ae+=t*Te,He+=t*Ve,_e+=t*Me,Ee+=t*Le,Be+=t*Ce,Se+=t*Oe,pe+=t*la,xe+=t*Ye,le+=t*ta,be+=t*oa,ge+=t*na,se+=t*ha,j+=t*xa,_+=t*ya,P+=t*wa,t=l[9],Ae+=t*p,He+=t*Te,_e+=t*Ve,Ee+=t*Me,Be+=t*Le,Se+=t*Ce,pe+=t*Oe,xe+=t*la,le+=t*Ye,be+=t*ta,ge+=t*oa,se+=t*na,j+=t*ha,_+=t*xa,P+=t*ya,R+=t*wa,t=l[10],He+=t*p,_e+=t*Te,Ee+=t*Ve,Be+=t*Me,Se+=t*Le,pe+=t*Ce,xe+=t*Oe,le+=t*la,be+=t*Ye,ge+=t*ta,se+=t*oa,j+=t*na,_+=t*ha,P+=t*xa,R+=t*ya,N+=t*wa,t=l[11],_e+=t*p,Ee+=t*Te,Be+=t*Ve,Se+=t*Me,pe+=t*Le,xe+=t*Ce,le+=t*Oe,be+=t*la,ge+=t*Ye,se+=t*ta,j+=t*oa,_+=t*na,P+=t*ha,R+=t*xa,N+=t*ya,W+=t*wa,t=l[12],Ee+=t*p,Be+=t*Te,Se+=t*Ve,pe+=t*Me,xe+=t*Le,le+=t*Ce,be+=t*Oe,ge+=t*la,se+=t*Ye,j+=t*ta,_+=t*oa,P+=t*na,R+=t*ha,N+=t*xa,W+=t*ya,we+=t*wa,t=l[13],Be+=t*p,Se+=t*Te,pe+=t*Ve,xe+=t*Me,le+=t*Le,be+=t*Ce,ge+=t*Oe,se+=t*la,j+=t*Ye,_+=t*ta,P+=t*oa,R+=t*na,N+=t*ha,W+=t*xa,we+=t*ya,Ie+=t*wa,t=l[14],Se+=t*p,pe+=t*Te,xe+=t*Ve,le+=t*Me,be+=t*Le,ge+=t*Ce,se+=t*Oe,j+=t*la,_+=t*Ye,P+=t*ta,R+=t*oa,N+=t*na,W+=t*ha,we+=t*xa,Ie+=t*ya,Ue+=t*wa,t=l[15],pe+=t*p,xe+=t*Te,le+=t*Ve,be+=t*Me,ge+=t*Le,se+=t*Ce,j+=t*Oe,_+=t*la,P+=t*Ye,R+=t*ta,N+=t*oa,W+=t*na,we+=t*ha,Ie+=t*xa,Ue+=t*ya,qe+=t*wa,k+=38*xe,A+=38*le,O+=38*be,ee+=38*ge,ve+=38*se,ce+=38*j,Ne+=38*_,de+=38*P,ze+=38*R,Ae+=38*N,He+=38*W,_e+=38*we,Ee+=38*Ie,Be+=38*Ue,Se+=38*qe,f=1,t=k+f+65535,f=Math.floor(t/65536),k=t-f*65536,t=A+f+65535,f=Math.floor(t/65536),A=t-f*65536,t=O+f+65535,f=Math.floor(t/65536),O=t-f*65536,t=ee+f+65535,f=Math.floor(t/65536),ee=t-f*65536,t=ve+f+65535,f=Math.floor(t/65536),ve=t-f*65536,t=ce+f+65535,f=Math.floor(t/65536),ce=t-f*65536,t=Ne+f+65535,f=Math.floor(t/65536),Ne=t-f*65536,t=de+f+65535,f=Math.floor(t/65536),de=t-f*65536,t=ze+f+65535,f=Math.floor(t/65536),ze=t-f*65536,t=Ae+f+65535,f=Math.floor(t/65536),Ae=t-f*65536,t=He+f+65535,f=Math.floor(t/65536),He=t-f*65536,t=_e+f+65535,f=Math.floor(t/65536),_e=t-f*65536,t=Ee+f+65535,f=Math.floor(t/65536),Ee=t-f*65536,t=Be+f+65535,f=Math.floor(t/65536),Be=t-f*65536,t=Se+f+65535,f=Math.floor(t/65536),Se=t-f*65536,t=pe+f+65535,f=Math.floor(t/65536),pe=t-f*65536,k+=f-1+37*(f-1),f=1,t=k+f+65535,f=Math.floor(t/65536),k=t-f*65536,t=A+f+65535,f=Math.floor(t/65536),A=t-f*65536,t=O+f+65535,f=Math.floor(t/65536),O=t-f*65536,t=ee+f+65535,f=Math.floor(t/65536),ee=t-f*65536,t=ve+f+65535,f=Math.floor(t/65536),ve=t-f*65536,t=ce+f+65535,f=Math.floor(t/65536),ce=t-f*65536,t=Ne+f+65535,f=Math.floor(t/65536),Ne=t-f*65536,t=de+f+65535,f=Math.floor(t/65536),de=t-f*65536,t=ze+f+65535,f=Math.floor(t/65536),ze=t-f*65536,t=Ae+f+65535,f=Math.floor(t/65536),Ae=t-f*65536,t=He+f+65535,f=Math.floor(t/65536),He=t-f*65536,t=_e+f+65535,f=Math.floor(t/65536),_e=t-f*65536,t=Ee+f+65535,f=Math.floor(t/65536),Ee=t-f*65536,t=Be+f+65535,f=Math.floor(t/65536),Be=t-f*65536,t=Se+f+65535,f=Math.floor(t/65536),Se=t-f*65536,t=pe+f+65535,f=Math.floor(t/65536),pe=t-f*65536,k+=f-1+37*(f-1),o[0]=k,o[1]=A,o[2]=O,o[3]=ee,o[4]=ve,o[5]=ce,o[6]=Ne,o[7]=de,o[8]=ze,o[9]=Ae,o[10]=He,o[11]=_e,o[12]=Ee,o[13]=Be,o[14]=Se,o[15]=pe}function ye(o,l){ie(o,l,l)}function Re(o,l){var c=r(),t;for(t=0;t<16;t++)c[t]=l[t];for(t=253;t>=0;t--)ye(c,c),t!==2&&t!==4&&ie(c,c,l);for(t=0;t<16;t++)o[t]=c[t]}function Ze(o,l){var c=r(),t;for(t=0;t<16;t++)c[t]=l[t];for(t=250;t>=0;t--)ye(c,c),t!==1&&ie(c,c,l);for(t=0;t<16;t++)o[t]=c[t]}function Ge(o,l,c){var t=new Uint8Array(32),f=new Float64Array(80),k,A,O=r(),ee=r(),ve=r(),ce=r(),Ne=r(),de=r();for(A=0;A<31;A++)t[A]=l[A];for(t[31]=l[31]&127|64,t[0]&=248,oe(f,c),A=0;A<16;A++)ee[A]=f[A],ce[A]=O[A]=ve[A]=0;for(O[0]=ce[0]=1,A=254;A>=0;--A)k=t[A>>>3]>>>(A&7)&1,q(O,ee,k),q(ve,ce,k),ne(Ne,O,ve),me(O,O,ve),ne(ve,ee,ce),me(ee,ee,ce),ye(ce,Ne),ye(de,O),ie(O,ve,O),ie(ve,ee,Ne),ne(Ne,O,ve),me(O,O,ve),ye(ee,O),me(ve,ce,de),ie(O,ve,h),ne(O,O,ce),ie(ve,ve,O),ie(O,ce,de),ie(ce,ee,f),ye(ee,Ne),q(O,ee,k),q(ve,ce,k);for(A=0;A<16;A++)f[A+16]=O[A],f[A+32]=ve[A],f[A+48]=ee[A],f[A+64]=ce[A];var ze=f.subarray(32),Ae=f.subarray(16);return Re(ze,ze),ie(Ae,Ae,ze),g(o,Ae),0}function Qe(o,l){return Ge(o,l,i)}function Xe(o,l){return n(l,32),Qe(o,l)}function aa(o,l,c){var t=new Uint8Array(32);return Ge(t,c,l),D(o,s,t,C)}var da=V,Ha=X;function Ua(o,l,c,t,f,k){var A=new Uint8Array(32);return aa(A,f,k),da(o,l,c,t,A)}function Qr(o,l,c,t,f,k){var A=new Uint8Array(32);return aa(A,f,k),Ha(o,l,c,t,A)}var Jr=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591];function et(o,l,c,t){for(var f=new Int32Array(16),k=new Int32Array(16),A,O,ee,ve,ce,Ne,de,ze,Ae,He,_e,Ee,Be,Se,pe,xe,le,be,ge,se,j,_,P,R,N,W,we=o[0],Ie=o[1],Ue=o[2],qe=o[3],p=o[4],Te=o[5],Ve=o[6],Me=o[7],Le=l[0],Ce=l[1],Oe=l[2],la=l[3],Ye=l[4],ta=l[5],oa=l[6],na=l[7],ha=0;t>=128;){for(ge=0;ge<16;ge++)se=8*ge+ha,f[ge]=c[se+0]<<24|c[se+1]<<16|c[se+2]<<8|c[se+3],k[ge]=c[se+4]<<24|c[se+5]<<16|c[se+6]<<8|c[se+7];for(ge=0;ge<80;ge++)if(A=we,O=Ie,ee=Ue,ve=qe,ce=p,Ne=Te,de=Ve,ze=Me,Ae=Le,He=Ce,_e=Oe,Ee=la,Be=Ye,Se=ta,pe=oa,xe=na,j=Me,_=na,P=_&65535,R=_>>>16,N=j&65535,W=j>>>16,j=(p>>>14|Ye<<18)^(p>>>18|Ye<<14)^(Ye>>>9|p<<23),_=(Ye>>>14|p<<18)^(Ye>>>18|p<<14)^(p>>>9|Ye<<23),P+=_&65535,R+=_>>>16,N+=j&65535,W+=j>>>16,j=p&Te^~p&Ve,_=Ye&ta^~Ye&oa,P+=_&65535,R+=_>>>16,N+=j&65535,W+=j>>>16,j=Jr[ge*2],_=Jr[ge*2+1],P+=_&65535,R+=_>>>16,N+=j&65535,W+=j>>>16,j=f[ge%16],_=k[ge%16],P+=_&65535,R+=_>>>16,N+=j&65535,W+=j>>>16,R+=P>>>16,N+=R>>>16,W+=N>>>16,le=N&65535|W<<16,be=P&65535|R<<16,j=le,_=be,P=_&65535,R=_>>>16,N=j&65535,W=j>>>16,j=(we>>>28|Le<<4)^(Le>>>2|we<<30)^(Le>>>7|we<<25),_=(Le>>>28|we<<4)^(we>>>2|Le<<30)^(we>>>7|Le<<25),P+=_&65535,R+=_>>>16,N+=j&65535,W+=j>>>16,j=we&Ie^we&Ue^Ie&Ue,_=Le&Ce^Le&Oe^Ce&Oe,P+=_&65535,R+=_>>>16,N+=j&65535,W+=j>>>16,R+=P>>>16,N+=R>>>16,W+=N>>>16,ze=N&65535|W<<16,xe=P&65535|R<<16,j=ve,_=Ee,P=_&65535,R=_>>>16,N=j&65535,W=j>>>16,j=le,_=be,P+=_&65535,R+=_>>>16,N+=j&65535,W+=j>>>16,R+=P>>>16,N+=R>>>16,W+=N>>>16,ve=N&65535|W<<16,Ee=P&65535|R<<16,Ie=A,Ue=O,qe=ee,p=ve,Te=ce,Ve=Ne,Me=de,we=ze,Ce=Ae,Oe=He,la=_e,Ye=Ee,ta=Be,oa=Se,na=pe,Le=xe,ge%16===15)for(se=0;se<16;se++)j=f[se],_=k[se],P=_&65535,R=_>>>16,N=j&65535,W=j>>>16,j=f[(se+9)%16],_=k[(se+9)%16],P+=_&65535,R+=_>>>16,N+=j&65535,W+=j>>>16,le=f[(se+1)%16],be=k[(se+1)%16],j=(le>>>1|be<<31)^(le>>>8|be<<24)^le>>>7,_=(be>>>1|le<<31)^(be>>>8|le<<24)^(be>>>7|le<<25),P+=_&65535,R+=_>>>16,N+=j&65535,W+=j>>>16,le=f[(se+14)%16],be=k[(se+14)%16],j=(le>>>19|be<<13)^(be>>>29|le<<3)^le>>>6,_=(be>>>19|le<<13)^(le>>>29|be<<3)^(be>>>6|le<<26),P+=_&65535,R+=_>>>16,N+=j&65535,W+=j>>>16,R+=P>>>16,N+=R>>>16,W+=N>>>16,f[se]=N&65535|W<<16,k[se]=P&65535|R<<16;j=we,_=Le,P=_&65535,R=_>>>16,N=j&65535,W=j>>>16,j=o[0],_=l[0],P+=_&65535,R+=_>>>16,N+=j&65535,W+=j>>>16,R+=P>>>16,N+=R>>>16,W+=N>>>16,o[0]=we=N&65535|W<<16,l[0]=Le=P&65535|R<<16,j=Ie,_=Ce,P=_&65535,R=_>>>16,N=j&65535,W=j>>>16,j=o[1],_=l[1],P+=_&65535,R+=_>>>16,N+=j&65535,W+=j>>>16,R+=P>>>16,N+=R>>>16,W+=N>>>16,o[1]=Ie=N&65535|W<<16,l[1]=Ce=P&65535|R<<16,j=Ue,_=Oe,P=_&65535,R=_>>>16,N=j&65535,W=j>>>16,j=o[2],_=l[2],P+=_&65535,R+=_>>>16,N+=j&65535,W+=j>>>16,R+=P>>>16,N+=R>>>16,W+=N>>>16,o[2]=Ue=N&65535|W<<16,l[2]=Oe=P&65535|R<<16,j=qe,_=la,P=_&65535,R=_>>>16,N=j&65535,W=j>>>16,j=o[3],_=l[3],P+=_&65535,R+=_>>>16,N+=j&65535,W+=j>>>16,R+=P>>>16,N+=R>>>16,W+=N>>>16,o[3]=qe=N&65535|W<<16,l[3]=la=P&65535|R<<16,j=p,_=Ye,P=_&65535,R=_>>>16,N=j&65535,W=j>>>16,j=o[4],_=l[4],P+=_&65535,R+=_>>>16,N+=j&65535,W+=j>>>16,R+=P>>>16,N+=R>>>16,W+=N>>>16,o[4]=p=N&65535|W<<16,l[4]=Ye=P&65535|R<<16,j=Te,_=ta,P=_&65535,R=_>>>16,N=j&65535,W=j>>>16,j=o[5],_=l[5],P+=_&65535,R+=_>>>16,N+=j&65535,W+=j>>>16,R+=P>>>16,N+=R>>>16,W+=N>>>16,o[5]=Te=N&65535|W<<16,l[5]=ta=P&65535|R<<16,j=Ve,_=oa,P=_&65535,R=_>>>16,N=j&65535,W=j>>>16,j=o[6],_=l[6],P+=_&65535,R+=_>>>16,N+=j&65535,W+=j>>>16,R+=P>>>16,N+=R>>>16,W+=N>>>16,o[6]=Ve=N&65535|W<<16,l[6]=oa=P&65535|R<<16,j=Me,_=na,P=_&65535,R=_>>>16,N=j&65535,W=j>>>16,j=o[7],_=l[7],P+=_&65535,R+=_>>>16,N+=j&65535,W+=j>>>16,R+=P>>>16,N+=R>>>16,W+=N>>>16,o[7]=Me=N&65535|W<<16,l[7]=na=P&65535|R<<16,ha+=128,t-=128}return t}function Da(o,l,c){var t=new Int32Array(8),f=new Int32Array(8),k=new Uint8Array(256),A,O=c;for(t[0]=1779033703,t[1]=3144134277,t[2]=1013904242,t[3]=2773480762,t[4]=1359893119,t[5]=2600822924,t[6]=528734635,t[7]=1541459225,f[0]=4089235720,f[1]=2227873595,f[2]=4271175723,f[3]=1595750129,f[4]=2917565137,f[5]=725511199,f[6]=4215389547,f[7]=327033209,et(t,f,l,c),c%=128,A=0;A<c;A++)k[A]=l[O-c+A];for(k[c]=128,c=256-128*(c<112?1:0),k[c-9]=0,T(k,c-8,O/536870912|0,O<<3),et(t,f,k,c),A=0;A<8;A++)T(o,8*A,t[A],f[A]);return 0}function pr(o,l){var c=r(),t=r(),f=r(),k=r(),A=r(),O=r(),ee=r(),ve=r(),ce=r();me(c,o[1],o[0]),me(ce,l[1],l[0]),ie(c,c,ce),ne(t,o[0],o[1]),ne(ce,l[0],l[1]),ie(t,t,ce),ie(f,o[3],l[3]),ie(f,f,m),ie(k,o[2],l[2]),ne(k,k,k),me(A,t,c),me(O,k,f),ne(ee,k,f),ne(ve,t,c),ie(o[0],A,O),ie(o[1],ve,ee),ie(o[2],ee,O),ie(o[3],A,ve)}function ko(o,l,c){var t;for(t=0;t<4;t++)q(o[t],l[t],c)}function Et(o,l){var c=r(),t=r(),f=r();Re(f,l[2]),ie(c,l[0],f),ie(t,l[1],f),g(o,t),o[31]^=F(c)<<7}function St(o,l,c){var t,f;for(Q(o[0],u),Q(o[1],d),Q(o[2],d),Q(o[3],u),f=255;f>=0;--f)t=c[f/8|0]>>(f&7)&1,ko(o,l,t),pr(l,o),pr(o,o),ko(o,l,t)}function at(o,l){var c=[r(),r(),r(),r()];Q(c[0],v),Q(c[1],w),Q(c[2],d),ie(c[3],v,w),St(o,c,l)}function Bt(o,l,c){var t=new Uint8Array(64),f=[r(),r(),r(),r()],k;for(c||n(l,32),Da(t,l,32),t[0]&=248,t[31]&=127,t[31]|=64,at(f,t),Et(o,f),k=0;k<32;k++)l[k+32]=o[k];return 0}var rt=new Float64Array([237,211,245,92,26,99,18,88,214,156,247,162,222,249,222,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16]);function jt(o,l){var c,t,f,k;for(t=63;t>=32;--t){for(c=0,f=t-32,k=t-12;f<k;++f)l[f]+=c-16*l[t]*rt[f-(t-32)],c=Math.floor((l[f]+128)/256),l[f]-=c*256;l[f]+=c,l[t]=0}for(c=0,f=0;f<32;f++)l[f]+=c-(l[31]>>4)*rt[f],c=l[f]>>8,l[f]&=255;for(f=0;f<32;f++)l[f]-=c*rt[f];for(t=0;t<32;t++)l[t+1]+=l[t]>>8,o[t]=l[t]&255}function _t(o){var l=new Float64Array(64),c;for(c=0;c<64;c++)l[c]=o[c];for(c=0;c<64;c++)o[c]=0;jt(o,l)}function zo(o,l,c,t){var f=new Uint8Array(64),k=new Uint8Array(64),A=new Uint8Array(64),O,ee,ve=new Float64Array(64),ce=[r(),r(),r(),r()];Da(f,t,32),f[0]&=248,f[31]&=127,f[31]|=64;var Ne=c+64;for(O=0;O<c;O++)o[64+O]=l[O];for(O=0;O<32;O++)o[32+O]=f[32+O];for(Da(A,o.subarray(32),c+32),_t(A),at(ce,A),Et(o,ce),O=32;O<64;O++)o[O]=t[O];for(Da(k,o,c+64),_t(k),O=0;O<64;O++)ve[O]=0;for(O=0;O<32;O++)ve[O]=A[O];for(O=0;O<32;O++)for(ee=0;ee<32;ee++)ve[O+ee]+=k[O]*f[ee];return jt(o.subarray(32),ve),Ne}function fi(o,l){var c=r(),t=r(),f=r(),k=r(),A=r(),O=r(),ee=r();return Q(o[2],d),oe(o[1],l),ye(f,o[1]),ie(k,f,b),me(f,f,o[2]),ne(k,o[2],k),ye(A,k),ye(O,A),ie(ee,O,A),ie(c,ee,f),ie(c,c,k),Ze(c,c),ie(c,c,f),ie(c,c,k),ie(c,c,k),ie(o[0],c,k),ye(t,o[0]),ie(t,t,k),I(t,f)&&ie(o[0],o[0],U),ye(t,o[0]),ie(t,t,k),I(t,f)?-1:(F(o[0])===l[31]>>7&&me(o[0],u,o[0]),ie(o[3],o[0],o[1]),0)}function Ht(o,l,c,t){var f,k=new Uint8Array(32),A=new Uint8Array(64),O=[r(),r(),r(),r()],ee=[r(),r(),r(),r()];if(c<64||fi(ee,t))return-1;for(f=0;f<c;f++)o[f]=l[f];for(f=0;f<32;f++)o[f+32]=t[f];if(Da(A,o,c),_t(A),St(O,ee,A),at(ee,l.subarray(32)),pr(O,ee),Et(k,O),c-=64,$(l,0,k,0)){for(f=0;f<c;f++)o[f]=0;return-1}for(f=0;f<c;f++)o[f]=l[f+64];return c}var It=32,tt=24,qr=32,mr=16,Ur=32,ot=32,Lr=32,Tr=32,qt=32,Ao=tt,di=qr,hi=mr,$a=64,ir=32,br=64,Ut=32,Lt=64;e.lowlevel={crypto_core_hsalsa20:D,crypto_stream_xor:H,crypto_stream:x,crypto_stream_salsa20_xor:G,crypto_stream_salsa20:J,crypto_onetimeauth:ae,crypto_onetimeauth_verify:te,crypto_verify_16:z,crypto_verify_32:$,crypto_secretbox:V,crypto_secretbox_open:X,crypto_scalarmult:Ge,crypto_scalarmult_base:Qe,crypto_box_beforenm:aa,crypto_box_afternm:da,crypto_box:Ua,crypto_box_open:Qr,crypto_box_keypair:Xe,crypto_hash:Da,crypto_sign:zo,crypto_sign_keypair:Bt,crypto_sign_open:Ht,crypto_secretbox_KEYBYTES:It,crypto_secretbox_NONCEBYTES:tt,crypto_secretbox_ZEROBYTES:qr,crypto_secretbox_BOXZEROBYTES:mr,crypto_scalarmult_BYTES:Ur,crypto_scalarmult_SCALARBYTES:ot,crypto_box_PUBLICKEYBYTES:Lr,crypto_box_SECRETKEYBYTES:Tr,crypto_box_BEFORENMBYTES:qt,crypto_box_NONCEBYTES:Ao,crypto_box_ZEROBYTES:di,crypto_box_BOXZEROBYTES:hi,crypto_sign_BYTES:$a,crypto_sign_PUBLICKEYBYTES:ir,crypto_sign_SECRETKEYBYTES:br,crypto_sign_SEEDBYTES:Ut,crypto_hash_BYTES:Lt,gf:r,D:b,L:rt,pack25519:g,unpack25519:oe,M:ie,A:ne,S:ye,Z:me,pow2523:Ze,add:pr,set25519:Q,modL:jt,scalarmult:St,scalarbase:at};function Eo(o,l){if(o.length!==It)throw new Error("bad key size");if(l.length!==tt)throw new Error("bad nonce size")}function pi(o,l){if(o.length!==Lr)throw new Error("bad public key size");if(l.length!==Tr)throw new Error("bad secret key size")}function ja(){for(var o=0;o<arguments.length;o++)if(!(arguments[o]instanceof Uint8Array))throw new TypeError("unexpected type, use Uint8Array")}function So(o){for(var l=0;l<o.length;l++)o[l]=0}e.randomBytes=function(o){var l=new Uint8Array(o);return n(l,o),l},e.secretbox=function(o,l,c){ja(o,l,c),Eo(c,l);for(var t=new Uint8Array(qr+o.length),f=new Uint8Array(t.length),k=0;k<o.length;k++)t[k+qr]=o[k];return V(f,t,t.length,l,c),f.subarray(mr)},e.secretbox.open=function(o,l,c){ja(o,l,c),Eo(c,l);for(var t=new Uint8Array(mr+o.length),f=new Uint8Array(t.length),k=0;k<o.length;k++)t[k+mr]=o[k];return t.length<32||X(f,t,t.length,l,c)!==0?null:f.subarray(qr)},e.secretbox.keyLength=It,e.secretbox.nonceLength=tt,e.secretbox.overheadLength=mr,e.scalarMult=function(o,l){if(ja(o,l),o.length!==ot)throw new Error("bad n size");if(l.length!==Ur)throw new Error("bad p size");var c=new Uint8Array(Ur);return Ge(c,o,l),c},e.scalarMult.base=function(o){if(ja(o),o.length!==ot)throw new Error("bad n size");var l=new Uint8Array(Ur);return Qe(l,o),l},e.scalarMult.scalarLength=ot,e.scalarMult.groupElementLength=Ur,e.box=function(o,l,c,t){var f=e.box.before(c,t);return e.secretbox(o,l,f)},e.box.before=function(o,l){ja(o,l),pi(o,l);var c=new Uint8Array(qt);return aa(c,o,l),c},e.box.after=e.secretbox,e.box.open=function(o,l,c,t){var f=e.box.before(c,t);return e.secretbox.open(o,l,f)},e.box.open.after=e.secretbox.open,e.box.keyPair=function(){var o=new Uint8Array(Lr),l=new Uint8Array(Tr);return Xe(o,l),{publicKey:o,secretKey:l}},e.box.keyPair.fromSecretKey=function(o){if(ja(o),o.length!==Tr)throw new Error("bad secret key size");var l=new Uint8Array(Lr);return Qe(l,o),{publicKey:l,secretKey:new Uint8Array(o)}},e.box.publicKeyLength=Lr,e.box.secretKeyLength=Tr,e.box.sharedKeyLength=qt,e.box.nonceLength=Ao,e.box.overheadLength=e.secretbox.overheadLength,e.sign=function(o,l){if(ja(o,l),l.length!==br)throw new Error("bad secret key size");var c=new Uint8Array($a+o.length);return zo(c,o,o.length,l),c},e.sign.open=function(o,l){if(ja(o,l),l.length!==ir)throw new Error("bad public key size");var c=new Uint8Array(o.length),t=Ht(c,o,o.length,l);if(t<0)return null;for(var f=new Uint8Array(t),k=0;k<f.length;k++)f[k]=c[k];return f},e.sign.detached=function(o,l){for(var c=e.sign(o,l),t=new Uint8Array($a),f=0;f<t.length;f++)t[f]=c[f];return t},e.sign.detached.verify=function(o,l,c){if(ja(o,l,c),l.length!==$a)throw new Error("bad signature size");if(c.length!==ir)throw new Error("bad public key size");var t=new Uint8Array($a+o.length),f=new Uint8Array($a+o.length),k;for(k=0;k<$a;k++)t[k]=l[k];for(k=0;k<o.length;k++)t[k+$a]=o[k];return Ht(f,t,t.length,c)>=0},e.sign.keyPair=function(){var o=new Uint8Array(ir),l=new Uint8Array(br);return Bt(o,l),{publicKey:o,secretKey:l}},e.sign.keyPair.fromSecretKey=function(o){if(ja(o),o.length!==br)throw new Error("bad secret key size");for(var l=new Uint8Array(ir),c=0;c<l.length;c++)l[c]=o[32+c];return{publicKey:l,secretKey:new Uint8Array(o)}},e.sign.keyPair.fromSeed=function(o){if(ja(o),o.length!==Ut)throw new Error("bad seed size");for(var l=new Uint8Array(ir),c=new Uint8Array(br),t=0;t<32;t++)c[t]=o[t];return Bt(l,c,!0),{publicKey:l,secretKey:c}},e.sign.publicKeyLength=ir,e.sign.secretKeyLength=br,e.sign.seedLength=Ut,e.sign.signatureLength=$a,e.hash=function(o){ja(o);var l=new Uint8Array(Lt);return Da(l,o,o.length),l},e.hash.hashLength=Lt,e.verify=function(o,l){return ja(o,l),o.length===0||l.length===0||o.length!==l.length?!1:B(o,0,l,0,o.length)===0},e.setPRNG=function(o){n=o},function(){var o=typeof self<"u"?self.crypto||self.msCrypto:null;if(o&&o.getRandomValues){var l=65536;e.setPRNG(function(c,t){var f,k=new Uint8Array(t);for(f=0;f<t;f+=l)o.getRandomValues(k.subarray(f,f+Math.min(t-f,l)));for(f=0;f<t;f++)c[f]=k[f];So(k)})}else typeof Vc<"u"&&(o=bi(),o&&o.randomBytes&&e.setPRNG(function(c,t){var f,k=o.randomBytes(t);for(f=0;f<t;f++)c[f]=k[f];So(k)}))}()})(a.exports?a.exports:self.nacl=self.nacl||{})}(Wt)),Wt.exports}var sr={},pn;function Dc(){return pn||(pn=1,Object.defineProperty(sr,"__esModule",{value:!0}),sr.replaceDerive=sr.pathRegex=void 0,sr.pathRegex=new RegExp("^m(\\/[0-9]+')+$"),sr.replaceDerive=a=>a.replace("'","")),sr}var mn;function $c(){return mn||(mn=1,function(a){Object.defineProperty(a,"__esModule",{value:!0}),a.derivePath=a.isValidPath=a.getPublicKey=a.CKDPriv=a.getMasterKeyFromSeed=void 0;const e=gi(),r=Mc(),n=Dc(),s="ed25519 seed",i=2147483648;a.getMasterKeyFromSeed=u=>{const h=e("sha512",s).update(ga.from(u,"hex")).digest(),b=h.slice(0,32),m=h.slice(32);return{key:b,chainCode:m}},a.CKDPriv=({key:u,chainCode:d},h)=>{const b=ga.allocUnsafe(4);b.writeUInt32BE(h,0);const m=ga.concat([ga.alloc(1,0),u,b]),v=e("sha512",d).update(m).digest(),w=v.slice(0,32),U=v.slice(32);return{key:w,chainCode:U}},a.getPublicKey=(u,d=!0)=>{const b=r.sign.keyPair.fromSeed(u).secretKey.subarray(32),m=ga.alloc(1,0);return d?ga.concat([m,ga.from(b)]):ga.from(b)},a.isValidPath=u=>n.pathRegex.test(u)?!u.split("/").slice(1).map(n.replaceDerive).some(isNaN):!1,a.derivePath=(u,d,h=i)=>{if(!a.isValidPath(u))throw new Error("Invalid derivation path");const{key:b,chainCode:m}=a.getMasterKeyFromSeed(d);return u.split("/").slice(1).map(n.replaceDerive).map(w=>parseInt(w,10)).reduce((w,U)=>a.CKDPriv(w,U+h),{key:b,chainCode:m})}}(Gt)),Gt}$c();/*! noble-secp256k1 - MIT License (c) 2019 Paul Miller (paulmillr.com) */const De=BigInt(0),Je=BigInt(1),rr=BigInt(2),Vr=BigInt(3),bn=BigInt(8),ua=Object.freeze({a:De,b:BigInt(7),P:BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"),n:BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),h:Je,Gx:BigInt("55066263022277343669578718895168534326250603453777594175500187360389116729240"),Gy:BigInt("32670510020758816978083085130507043184471273380659243275938904335757337482424"),beta:BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee")}),gn=(a,e)=>(a+e/rr)/e,lt={beta:BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"),splitScalar(a){const{n:e}=ua,r=BigInt("0x3086d221a7d46bcde86c90e49284eb15"),n=-Je*BigInt("0xe4437ed6010e88286f547fa90abfe4c3"),s=BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),i=r,u=BigInt("0x100000000000000000000000000000000"),d=gn(i*a,e),h=gn(-n*a,e);let b=he(a-d*r-h*s,e),m=he(-d*n-h*i,e);const v=b>u,w=m>u;if(v&&(b=e-b),w&&(m=e-m),b>u||m>u)throw new Error("splitScalarEndo: Endomorphism failed, k="+a);return{k1neg:v,k1:b,k2neg:w,k2:m}}},Ra=32,jr=32,Fc=32,vn=Ra+1,xn=2*Ra+1;function yn(a){const{a:e,b:r}=ua,n=he(a*a),s=he(n*a);return he(s+e*a+r)}const ut=ua.a===De;class ii extends Error{constructor(e){super(e)}}function wn(a){if(!(a instanceof Fe))throw new TypeError("JacobianPoint expected")}class Fe{constructor(e,r,n){this.x=e,this.y=r,this.z=n}static fromAffine(e){if(!(e instanceof sa))throw new TypeError("JacobianPoint#fromAffine: expected Point");return e.equals(sa.ZERO)?Fe.ZERO:new Fe(e.x,e.y,Je)}static toAffineBatch(e){const r=Gc(e.map(n=>n.z));return e.map((n,s)=>n.toAffine(r[s]))}static normalizeZ(e){return Fe.toAffineBatch(e).map(Fe.fromAffine)}equals(e){wn(e);const{x:r,y:n,z:s}=this,{x:i,y:u,z:d}=e,h=he(s*s),b=he(d*d),m=he(r*b),v=he(i*h),w=he(he(n*d)*b),U=he(he(u*s)*h);return m===v&&w===U}negate(){return new Fe(this.x,he(-this.y),this.z)}double(){const{x:e,y:r,z:n}=this,s=he(e*e),i=he(r*r),u=he(i*i),d=e+i,h=he(rr*(he(d*d)-s-u)),b=he(Vr*s),m=he(b*b),v=he(m-rr*h),w=he(b*(h-v)-bn*u),U=he(rr*r*n);return new Fe(v,w,U)}add(e){wn(e);const{x:r,y:n,z:s}=this,{x:i,y:u,z:d}=e;if(i===De||u===De)return this;if(r===De||n===De)return e;const h=he(s*s),b=he(d*d),m=he(r*b),v=he(i*h),w=he(he(n*d)*b),U=he(he(u*s)*h),T=he(v-m),B=he(U-w);if(T===De)return B===De?this.double():Fe.ZERO;const z=he(T*T),$=he(T*z),Y=he(m*z),E=he(B*B-$-rr*Y),K=he(B*(Y-E)-w*$),D=he(s*d*T);return new Fe(E,K,D)}subtract(e){return this.add(e.negate())}multiplyUnsafe(e){const r=Fe.ZERO;if(typeof e=="bigint"&&e===De)return r;let n=En(e);if(n===Je)return this;if(!ut){let v=r,w=this;for(;n>De;)n&Je&&(v=v.add(w)),w=w.double(),n>>=Je;return v}let{k1neg:s,k1:i,k2neg:u,k2:d}=lt.splitScalar(n),h=r,b=r,m=this;for(;i>De||d>De;)i&Je&&(h=h.add(m)),d&Je&&(b=b.add(m)),m=m.double(),i>>=Je,d>>=Je;return s&&(h=h.negate()),u&&(b=b.negate()),b=new Fe(he(b.x*lt.beta),b.y,b.z),h.add(b)}precomputeWindow(e){const r=ut?128/e+1:256/e+1,n=[];let s=this,i=s;for(let u=0;u<r;u++){i=s,n.push(i);for(let d=1;d<2**(e-1);d++)i=i.add(s),n.push(i);s=i.double()}return n}wNAF(e,r){!r&&this.equals(Fe.BASE)&&(r=sa.BASE);const n=r&&r._WINDOW_SIZE||1;if(256%n)throw new Error("Point#wNAF: Invalid precomputation window, must be power of 2");let s=r&&io.get(r);s||(s=this.precomputeWindow(n),r&&n!==1&&(s=Fe.normalizeZ(s),io.set(r,s)));let i=Fe.ZERO,u=Fe.BASE;const d=1+(ut?128/n:256/n),h=2**(n-1),b=BigInt(2**n-1),m=2**n,v=BigInt(n);for(let w=0;w<d;w++){const U=w*h;let T=Number(e&b);e>>=v,T>h&&(T-=m,e+=Je);const B=U,z=U+Math.abs(T)-1,$=w%2!==0,Y=T<0;T===0?u=u.add(ft($,s[B])):i=i.add(ft(Y,s[z]))}return{p:i,f:u}}multiply(e,r){let n=En(e),s,i;if(ut){const{k1neg:u,k1:d,k2neg:h,k2:b}=lt.splitScalar(n);let{p:m,f:v}=this.wNAF(d,r),{p:w,f:U}=this.wNAF(b,r);m=ft(u,m),w=ft(h,w),w=new Fe(he(w.x*lt.beta),w.y,w.z),s=m.add(w),i=v.add(U)}else{const{p:u,f:d}=this.wNAF(n,r);s=u,i=d}return Fe.normalizeZ([s,i])[0]}toAffine(e){const{x:r,y:n,z:s}=this,i=this.equals(Fe.ZERO);e==null&&(e=i?bn:Xr(s));const u=e,d=he(u*u),h=he(d*u),b=he(r*d),m=he(n*h),v=he(s*u);if(i)return sa.ZERO;if(v!==Je)throw new Error("invZ was invalid");return new sa(b,m)}}Fe.BASE=new Fe(ua.Gx,ua.Gy,Je);Fe.ZERO=new Fe(De,Je,De);function ft(a,e){const r=e.negate();return a?r:e}const io=new WeakMap;class sa{constructor(e,r){this.x=e,this.y=r}_setWindowSize(e){this._WINDOW_SIZE=e,io.delete(this)}hasEvenY(){return this.y%rr===De}static fromCompressedHex(e){const r=e.length===32,n=nr(r?e:e.subarray(1));if(!Xt(n))throw new Error("Point is not on curve");const s=yn(n);let i=Kc(s);const u=(i&Je)===Je;r?u&&(i=he(-i)):(e[0]&1)===1!==u&&(i=he(-i));const d=new sa(n,i);return d.assertValidity(),d}static fromUncompressedHex(e){const r=nr(e.subarray(1,Ra+1)),n=nr(e.subarray(Ra+1,Ra*2+1)),s=new sa(r,n);return s.assertValidity(),s}static fromHex(e){const r=Fr(e),n=r.length,s=r[0];if(n===Ra)return this.fromCompressedHex(r);if(n===vn&&(s===2||s===3))return this.fromCompressedHex(r);if(n===xn&&s===4)return this.fromUncompressedHex(r);throw new Error(`Point.fromHex: received invalid point. Expected 32-${vn} compressed bytes or ${xn} uncompressed bytes, not ${n}`)}static fromPrivateKey(e){return sa.BASE.multiply(wt(e))}static fromSignature(e,r,n){const{r:s,s:i}=Jc(r);if(![0,1,2,3].includes(n))throw new Error("Cannot recover: invalid recovery bit");const u=ci(Fr(e)),{n:d}=ua,h=n===2||n===3?s+d:s,b=Xr(h,d),m=he(-u*b,d),v=he(i*b,d),w=n&1?"03":"02",U=sa.fromHex(w+wr(h)),T=sa.BASE.multiplyAndAddUnsafe(U,m,v);if(!T)throw new Error("Cannot recover signature: point at infinify");return T.assertValidity(),T}toRawBytes(e=!1){return fr(this.toHex(e))}toHex(e=!1){const r=wr(this.x);return e?`${this.hasEvenY()?"02":"03"}${r}`:`04${r}${wr(this.y)}`}toHexX(){return this.toHex(!0).slice(2)}toRawX(){return this.toRawBytes(!0).slice(1)}assertValidity(){const e="Point is not on elliptic curve",{x:r,y:n}=this;if(!Xt(r)||!Xt(n))throw new Error(e);const s=he(n*n),i=yn(r);if(he(s-i)!==De)throw new Error(e)}equals(e){return this.x===e.x&&this.y===e.y}negate(){return new sa(this.x,he(-this.y))}double(){return Fe.fromAffine(this).double().toAffine()}add(e){return Fe.fromAffine(this).add(Fe.fromAffine(e)).toAffine()}subtract(e){return this.add(e.negate())}multiply(e){return Fe.fromAffine(this).multiply(e,this).toAffine()}multiplyAndAddUnsafe(e,r,n){const s=Fe.fromAffine(this),i=r===De||r===Je||this!==sa.BASE?s.multiplyUnsafe(r):s.multiply(r),u=Fe.fromAffine(e).multiplyUnsafe(n),d=i.add(u);return d.equals(Fe.ZERO)?void 0:d.toAffine()}}sa.BASE=new sa(ua.Gx,ua.Gy);sa.ZERO=new sa(De,De);function kn(a){return Number.parseInt(a[0],16)>=8?"00"+a:a}function zn(a){if(a.length<2||a[0]!==2)throw new Error(`Invalid signature integer tag: ${_r(a)}`);const e=a[1],r=a.subarray(2,e+2);if(!e||r.length!==e)throw new Error("Invalid signature integer: wrong length");if(r[0]===0&&r[1]<=127)throw new Error("Invalid signature integer: trailing length");return{data:nr(r),left:a.subarray(e+2)}}function Pc(a){if(a.length<2||a[0]!=48)throw new Error(`Invalid signature tag: ${_r(a)}`);if(a[1]!==a.length-2)throw new Error("Invalid signature: incorrect length");const{data:e,left:r}=zn(a.subarray(2)),{data:n,left:s}=zn(r);if(s.length)throw new Error(`Invalid signature: left bytes after parsing: ${_r(s)}`);return{r:e,s:n}}class or{constructor(e,r){this.r=e,this.s=r,this.assertValidity()}static fromCompact(e){const r=$r(e),n="Signature.fromCompact";if(typeof e!="string"&&!r)throw new TypeError(`${n}: Expected string or Uint8Array`);const s=r?_r(e):e;if(s.length!==128)throw new Error(`${n}: Expected 64-byte hex`);return new or(yt(s.slice(0,64)),yt(s.slice(64,128)))}static fromDER(e){const r=$r(e);if(typeof e!="string"&&!r)throw new TypeError("Signature.fromDER: Expected string or Uint8Array");const{r:n,s}=Pc(r?e:fr(e));return new or(n,s)}static fromHex(e){return this.fromDER(e)}assertValidity(){const{r:e,s:r}=this;if(!Pr(e))throw new Error("Invalid Signature: r must be 0 < r < n");if(!Pr(r))throw new Error("Invalid Signature: s must be 0 < s < n")}hasHighS(){const e=ua.n>>Je;return this.s>e}normalizeS(){return this.hasHighS()?new or(this.r,he(-this.s,ua.n)):this}toDERRawBytes(){return fr(this.toDERHex())}toDERHex(){const e=kn(Or(this.s)),r=kn(Or(this.r)),n=e.length/2,s=r.length/2,i=Or(n),u=Or(s);return`30${Or(s+n+4)}02${u}${r}02${i}${e}`}toRawBytes(){return this.toDERRawBytes()}toHex(){return this.toDERHex()}toCompactRawBytes(){return fr(this.toCompactHex())}toCompactHex(){return wr(this.r)+wr(this.s)}}function $r(a){return a instanceof Uint8Array||ArrayBuffer.isView(a)&&a.constructor.name==="Uint8Array"}function si(a){if(!$r(a))throw new Error("Uint8Array expected")}function ar(...a){if(a.every(si),a.length===1)return a[0];const e=a.reduce((n,s)=>n+s.length,0),r=new Uint8Array(e);for(let n=0,s=0;n<a.length;n++){const i=a[n];r.set(i,s),s+=i.length}return r}const Zc=Array.from({length:256},(a,e)=>e.toString(16).padStart(2,"0"));function _r(a){si(a);let e="";for(let r=0;r<a.length;r++)e+=Zc[a[r]];return e}const Za={_0:48,_9:57,A:65,F:70,a:97,f:102};function An(a){if(a>=Za._0&&a<=Za._9)return a-Za._0;if(a>=Za.A&&a<=Za.F)return a-(Za.A-10);if(a>=Za.a&&a<=Za.f)return a-(Za.a-10)}function fr(a){if(typeof a!="string")throw new Error("hex string expected, got "+typeof a);const e=a.length,r=e/2;if(e%2)throw new Error("hex string expected, got unpadded hex of length "+e);const n=new Uint8Array(r);for(let s=0,i=0;s<r;s++,i+=2){const u=An(a.charCodeAt(i)),d=An(a.charCodeAt(i+1));if(u===void 0||d===void 0){const h=a[i]+a[i+1];throw new Error('hex string expected, got non-hex character "'+h+'" at index '+i)}n[s]=u*16+d}return n}const Yc=BigInt("0x10000000000000000000000000000000000000000000000000000000000000000");function wr(a){if(typeof a!="bigint")throw new Error("Expected bigint");if(!(De<=a&&a<Yc))throw new Error("Expected number 0 <= n < 2^256");return a.toString(16).padStart(64,"0")}function so(a){const e=fr(wr(a));if(e.length!==32)throw new Error("Error: expected 32 bytes");return e}function Or(a){const e=a.toString(16);return e.length&1?`0${e}`:e}function yt(a){if(typeof a!="string")throw new TypeError("hexToNumber: expected string, got "+typeof a);return BigInt(`0x${a}`)}function nr(a){return yt(_r(a))}function Fr(a){return $r(a)?Uint8Array.from(a):fr(a)}function En(a){if(typeof a=="number"&&Number.isSafeInteger(a)&&a>0)return BigInt(a);if(typeof a=="bigint"&&Pr(a))return a;throw new TypeError("Expected valid private scalar: 0 < scalar < curve.n")}function he(a,e=ua.P){const r=a%e;return r>=De?r:e+r}function qa(a,e){const{P:r}=ua;let n=a;for(;e-- >De;)n*=n,n%=r;return n}function Kc(a){const{P:e}=ua,r=BigInt(6),n=BigInt(11),s=BigInt(22),i=BigInt(23),u=BigInt(44),d=BigInt(88),h=a*a*a%e,b=h*h*a%e,m=qa(b,Vr)*b%e,v=qa(m,Vr)*b%e,w=qa(v,rr)*h%e,U=qa(w,n)*w%e,T=qa(U,s)*U%e,B=qa(T,u)*T%e,z=qa(B,d)*B%e,$=qa(z,u)*T%e,Y=qa($,Vr)*b%e,E=qa(Y,i)*U%e,K=qa(E,r)*h%e,D=qa(K,rr);if(D*D%e!==a)throw new Error("Cannot find square root");return D}function Xr(a,e=ua.P){if(a===De||e<=De)throw new Error(`invert: expected positive integers, got n=${a} mod=${e}`);let r=he(a,e),n=e,s=De,i=Je;for(;r!==De;){const d=n/r,h=n%r,b=s-i*d;n=r,r=h,s=i,i=b}if(n!==Je)throw new Error("invert: does not exist");return he(s,e)}function Gc(a,e=ua.P){const r=new Array(a.length),n=a.reduce((i,u,d)=>u===De?i:(r[d]=i,he(i*u,e)),Je),s=Xr(n,e);return a.reduceRight((i,u,d)=>u===De?i:(r[d]=he(i*r[d],e),he(i*u,e)),s),r}function Wc(a){const e=a.length*8-jr*8,r=nr(a);return e>0?r>>BigInt(e):r}function ci(a,e=!1){const r=Wc(a);if(e)return r;const{n}=ua;return r>=n?r-n:r}let kr,Mr;class Xc{constructor(e,r){if(this.hashLen=e,this.qByteLen=r,typeof e!="number"||e<2)throw new Error("hashLen must be a number");if(typeof r!="number"||r<2)throw new Error("qByteLen must be a number");this.v=new Uint8Array(e).fill(1),this.k=new Uint8Array(e).fill(0),this.counter=0}hmac(...e){return lr.hmacSha256(this.k,...e)}hmacSync(...e){return Mr(this.k,...e)}checkSync(){if(typeof Mr!="function")throw new ii("hmacSha256Sync needs to be set")}incr(){if(this.counter>=1e3)throw new Error("Tried 1,000 k values for sign(), all were invalid");this.counter+=1}async reseed(e=new Uint8Array){this.k=await this.hmac(this.v,Uint8Array.from([0]),e),this.v=await this.hmac(this.v),e.length!==0&&(this.k=await this.hmac(this.v,Uint8Array.from([1]),e),this.v=await this.hmac(this.v))}reseedSync(e=new Uint8Array){this.checkSync(),this.k=this.hmacSync(this.v,Uint8Array.from([0]),e),this.v=this.hmacSync(this.v),e.length!==0&&(this.k=this.hmacSync(this.v,Uint8Array.from([1]),e),this.v=this.hmacSync(this.v))}async generate(){this.incr();let e=0;const r=[];for(;e<this.qByteLen;){this.v=await this.hmac(this.v);const n=this.v.slice();r.push(n),e+=this.v.length}return ar(...r)}generateSync(){this.checkSync(),this.incr();let e=0;const r=[];for(;e<this.qByteLen;){this.v=this.hmacSync(this.v);const n=this.v.slice();r.push(n),e+=this.v.length}return ar(...r)}}function Pr(a){return De<a&&a<ua.n}function Xt(a){return De<a&&a<ua.P}function Qc(a,e,r,n=!0){const{n:s}=ua,i=ci(a,!0);if(!Pr(i))return;const u=Xr(i,s),d=sa.BASE.multiply(i),h=he(d.x,s);if(h===De)return;const b=he(u*he(e+r*h,s),s);if(b===De)return;let m=new or(h,b),v=(d.x===m.r?0:2)|Number(d.y&Je);return n&&m.hasHighS()&&(m=m.normalizeS(),v^=1),{sig:m,recovery:v}}function wt(a){let e;if(typeof a=="bigint")e=a;else if(typeof a=="number"&&Number.isSafeInteger(a)&&a>0)e=BigInt(a);else if(typeof a=="string"){if(a.length!==2*jr)throw new Error("Expected 32 bytes of private key");e=yt(a)}else if($r(a)){if(a.length!==jr)throw new Error("Expected 32 bytes of private key");e=nr(a)}else throw new TypeError("Expected valid private key");if(!Pr(e))throw new Error("Expected private key: 0 < key < n");return e}function Jc(a){if(a instanceof or)return a.assertValidity(),a;try{return or.fromDER(a)}catch{return or.fromCompact(a)}}function li(a){const e=a.length>Ra?a.slice(0,Ra):a;return nr(e)}function el(a){const e=li(a),r=he(e,ua.n);return ui(r<De?e:r)}function ui(a){return so(a)}function al(a,e,r){if(a==null)throw new Error(`sign: expected valid message hash, not "${a}"`);const n=Fr(a),s=wt(e),i=[ui(s),el(n)];if(r!=null){r===!0&&(r=lr.randomBytes(Ra));const h=Fr(r);if(h.length!==Ra)throw new Error(`sign: Expected ${Ra} bytes of extra data`);i.push(h)}const u=ar(...i),d=li(n);return{seed:u,m:d,d:s}}function rl(a,e){const{sig:r,recovery:n}=a,{der:s,recovered:i}=Object.assign({canonical:!0,der:!0},e),u=s?r.toDERRawBytes():r.toCompactRawBytes();return i?[u,n]:u}async function tl(a,e,r={}){const{seed:n,m:s,d:i}=al(a,e,r.extraEntropy),u=new Xc(Fc,jr);await u.reseed(n);let d;for(;!(d=Qc(await u.generate(),s,i,r.canonical));)await u.reseed();return rl(d,r)}sa.BASE._setWindowSize(8);const _a={node:yi,web:typeof self=="object"&&"crypto"in self?self.crypto:void 0},dt={},lr={bytesToHex:_r,hexToBytes:fr,concatBytes:ar,mod:he,invert:Xr,isValidPrivateKey(a){try{return wt(a),!0}catch{return!1}},_bigintTo32Bytes:so,_normalizePrivateKey:wt,hashToPrivateKey:a=>{a=Fr(a);const e=jr+8;if(a.length<e||a.length>1024)throw new Error("Expected valid bytes of private key as per FIPS 186");const r=he(nr(a),ua.n-Je)+Je;return so(r)},randomBytes:(a=32)=>{if(_a.web)return _a.web.getRandomValues(new Uint8Array(a));if(_a.node){const{randomBytes:e}=_a.node;return Uint8Array.from(e(a))}else throw new Error("The environment doesn't have randomBytes function")},randomPrivateKey:()=>lr.hashToPrivateKey(lr.randomBytes(jr+8)),precompute(a=8,e=sa.BASE){const r=e===sa.BASE?e:new sa(e.x,e.y);return r._setWindowSize(a),r.multiply(Vr),r},sha256:async(...a)=>{if(_a.web){const e=await _a.web.subtle.digest("SHA-256",ar(...a));return new Uint8Array(e)}else if(_a.node){const{createHash:e}=_a.node,r=e("sha256");return a.forEach(n=>r.update(n)),Uint8Array.from(r.digest())}else throw new Error("The environment doesn't have sha256 function")},hmacSha256:async(a,...e)=>{if(_a.web){const r=await _a.web.subtle.importKey("raw",a,{name:"HMAC",hash:{name:"SHA-256"}},!1,["sign"]),n=ar(...e),s=await _a.web.subtle.sign("HMAC",r,n);return new Uint8Array(s)}else if(_a.node){const{createHmac:r}=_a.node,n=r("sha256",a);return e.forEach(s=>n.update(s)),Uint8Array.from(n.digest())}else throw new Error("The environment doesn't have hmac-sha256 function")},sha256Sync:void 0,hmacSha256Sync:void 0,taggedHash:async(a,...e)=>{let r=dt[a];if(r===void 0){const n=await lr.sha256(Uint8Array.from(a,s=>s.charCodeAt(0)));r=ar(n,n),dt[a]=r}return lr.sha256(r,...e)},taggedHashSync:(a,...e)=>{if(typeof kr!="function")throw new ii("sha256Sync is undefined, you need to set it");let r=dt[a];if(r===void 0){const n=kr(Uint8Array.from(a,s=>s.charCodeAt(0)));r=ar(n,n),dt[a]=r}return kr(r,...e)},_JacobianPoint:Fe};Object.defineProperties(lr,{sha256Sync:{configurable:!1,get(){return kr},set(a){kr||(kr=a)}},hmacSha256Sync:{configurable:!1,get(){return Mr},set(a){Mr||(Mr=a)}}});async function gl(a,e){const[r,n]=await tl(a,e.replace("0x",""),{canonical:!0,recovered:!0,der:!1});return{signature:r,recoveryId:n}}export{gl as signWithECDSA};
